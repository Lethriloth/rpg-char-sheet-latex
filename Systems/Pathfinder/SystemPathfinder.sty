\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{SystemPathfinder}[2016/12/29 Pathfinder system-specific features for rpgcharsheet2.cls]
\RequirePackage{Systems/D20-Common/SystemD20-Common}

%%%% Character Attributes %%%%

%% Ability Scores %%
\appto{\ComputeAbilityScores}{\SetCounter{CharCMDAbilityModCount}{\value{CharStrModCount}+\value{CharDexModCount}}}

%% Armor Class %%

%% Saving Throws

%% Special Defenses

%% BAB, attacks, combat maneuvers
\renewcommand{\do}[1]{
	\NewCounter{Char#1MiscCount}
	\NewCounter{Char#1TmpCount}
}\docsvlist{Melee,Ranged,CMB,CMD}
\NewCounter{CharCMDBaseCount}
\NewCounter{CharCMDAbilityModCount}

%% Size
\NewCounter{CharSpecialSizeModCount}
\newcommand\SetSize[1]{
	\csname SetSize#1\endcsname
}
\newcommand\SetSizeFine{
	\renewcommand{\CharSize}{Fine}
	\SetCounter{CharSizeModCount}{8}
	\SetCounter{CharSpecialSizeModCount}{-8}
}
\newcommand\SetSizeDiminutive{
	\renewcommand{\CharSize}{Diminutive}
	\SetCounter{CharSizeModCount}{4}
	\SetCounter{CharSpecialSizeModCount}{-4}
}
\newcommand\SetSizeTiny{
	\renewcommand{\CharSize}{Tiny}
	\SetCounter{CharSizeModCount}{2}
	\SetCounter{CharSpecialSizeModCount}{-2}
}
\newcommand\SetSizeSmall{
	\renewcommand{\CharSize}{Small}
	\SetCounter{CharSizeModCount}{1}
	\SetCounter{CharSpecialSizeModCount}{-1}
}
\newcommand\SetSizeMedium{
	\renewcommand{\CharSize}{Medium}
	\SetCounter{CharSizeModCount}{0}
	\SetCounter{CharSpecialSizeModCount}{0}
}
\newcommand\SetSizeLarge{
	\renewcommand{\CharSize}{Large}
	\SetCounter{CharSizeModCount}{-1}
	\SetCounter{CharSpecialSizeModCount}{1}
}
\newcommand\SetSizeHuge{
	\renewcommand{\CharSize}{Huge}
	\SetCounter{CharSizeModCount}{-2}
	\SetCounter{CharSpecialSizeModCount}{2}
}
\newcommand\SetSizeGargantuan{
	\renewcommand{\CharSize}{Gargantuan}
	\SetCounter{CharSizeModCount}{-4}
	\SetCounter{CharSpecialSizeModCount}{4}
}
\newcommand\SetSizeColossal{
	\renewcommand{\CharSize}{Colossal}
	\SetCounter{CharSizeModCount}{-8}
	\SetCounter{CharSpecialSizeModCount}{8}
}

%% Speed
\NewCounter{CharManeuverabilityCount}
\newcommand{\AddFlySpeed}[2]{
	\SetCounter{CharFlySpeedCount}{#1}
	\SetCounter{CharManeuverabilityCount}{#2}
}
\appto{\SpeedInitialize}{%
	\MiscBonus{Fly}{\value{CharManeuverabilityCount}}
	\MiscBonus{Fly}{\value{CharSizeModCount} * 2}
}


%%%% Feats, Class & Race Features %%%%

%% Favored Classes %%
\NewCounter{CheckFavoredClass-Mode}
\SetCounter{CheckFavoredClass-Mode}{1}
\NewCounter{CharSpareFavoredClassLevelsCount}

\newcommand{\AddFavoredClassHP}[1]{
	\ifthenelse{\equal{#1}{}}{
		\AddFavoredClassHP{\value{CharSpareFavoredClassLevelsCount}}
	}{
		\AddToCounter{CharHPCount}{#1}
		\AddToCounter{CharSpareFavoredClassLevelsCount}{-#1}
	}
}

\newcommand{\AddFavoredClassSkillRanks}[1]{
	\ifthenelse{\equal{#1}{}}{
		\AddFavoredClassSkillRanks{\value{CharSpareFavoredClassLevelsCount}}
	}{
		\AddToCounter{CharSpareSkillRanksCount}{#1}
		\AddToCounter{CharSpareFavoredClassLevelsCount}{-#1}
	}
}

\NewDocumentCommand{\AddFavoredClassSpecial}{m O{} O{*1}}{
	\ifthenelse{\equal{#1}{}}{
		\AddFavoredClassSpecial{\arabic{CharSpareFavoredClassLevelsCount}}[#2][#3]
	}{
		\newcommand\FavoredClassSpecialDo[1]{
			#2{##1}
		}
		\FavoredClassSpecialDo{#1#3}
		\AddToCounter{CharSpareFavoredClassLevelsCount}{-#1}
	}
}

%% Class Importing %%
\NewDocumentCommand{\ImportCharClass}{s O{} m O{} m}{
	\AddDebug{IMPORTCHARCLASS: add #5 Levels of #4 #3}
	\ifthenelse{\equal{#4}{}}{
		\input{"\datafolder/Classes/#3.tex"}
	}{
		\input{"\datafolder/Classes/#3_#4.tex"}
	}

	\ImportCharClassCommon{#3}{#5}

	\ifthenelse{\equal{#2}{}}{
		\appto\CharLevel{\capitalize{#3} #5 }
	}{
		\appto\CharLevel{#2 #5 }
	}
	\AddToCounter{CharSpareSkillRanksCount}{(\value{#3SkillRanksPerLevelCount} + \value{CharBonusSkillRanksPerLevelCount})* #5}
	\IfBooleanT #1 {\AddToCounter{CharSpareFavoredClassLevelsCount}{#5}}
}


%%%% Skills %%%%

% Add PF-only skills
\DeclareSkill[ArmorCheck]{Acrobatics}{Dex}
\DeclareSkill[ArmorCheck]{Fly}{Dex}
\DeclareSkill[Trained]{Linguistics}{Int}
\DeclareSkill{Perception}{Wis}
\DeclareSkill[ArmorCheck]{Stealth}{Dex}

\listinsert\ArmorCheckSkillsList{Disable Device} %Armor check penalty applies to disable device in pathfinder only


%Command to add Skill Ranks
\newcommand\AddRanks[2]{
	\AddToCounter{Char#1RanksCount}{#2}
	\AddToCounter{CharSpareSkillRanksCount}{-#2}
}

%Commands to be run at sheet initialization
\newcommand{\AddIntToSkillRanks}{
	\ifthenelse{\value{AutoSkillRanks-Mode} = 1}{
		\SetCounter{@j}{(\value{CharIntCount} - \value{CharIntTmpCount}) / 2 - 5}
		\renewcommand\do[1]{
			\SetCounter{@k}{\value{@j} + \value{##1SkillRanksPerLevelCount}}
			\AddDebug{Class \# \arabic{@i} is: ##1}
			\ifthenelse{\value{@k} < 1}{
				\AddDebug{Min 1 rank per Level}
				\AddToCounter{CharSpareSkillRanksCount}{(1 - \value{##1SkillRanksPerLevelCount}) * \value{Char##1ClassLevelCount}}
			}{
				\AddToCounter{CharSpareSkillRanksCount}{\value{@j} * \value{Char##1ClassLevelCount}}
			}
		}\dolistloop{\CharClassesList}
	}{}
}


%%%% Character Name & Description %%%%

%%%% Items %%%%

%% Gear %%

%% Stored Items %%

%% Weapons %%

%% Armor and Shield %%
%Pathfinder separated out magic armor (and other armor slot items) from the body slot
\patchcmd{\AddArmor}{AddBodyItem}{AddArmorItem}{}{}

%% Magic Item Slots %%
%Pathfinder added separate slots for armor and headband (Previously shared slots with Body and Head respectively)
\forcsvlist{\listinsert\ItemSlotNamesList}{Armor, Headband}
\renewcommand{\do}[1]{
	\expandafter\newcommand\csname ItemInSlot#1Name\endcsname{}
	\expandafter\newcommand\csname ItemInSlot#1Description\endcsname{}
	\expandafter\newlength\csname ItemInSlot#1Weight\endcsname
	\expandafter\newcommand \csname Add#1Item\endcsname[3]{
		\expandafter\renewcommand\csname ItemInSlot#1Name\endcsname{\itshape ##1}
		\expandafter\renewcommand\csname ItemInSlot#1Description\endcsname{##2}
		\SetLength{\csname ItemInSlot#1Weight\endcsname}{##3pt}
		\AddToLength{\WornItemsWeight}{##3pt}
	}
}\docsvlist{Armor, Headband}

%% Money %%

%% Weight Carried %%

%% Carrying Capacity %%

%%%% Spells %%%%

% In pathfinder these are consistent (clerics, druids, wizards all get the same number of spells per day)
\newcommand{\AddFullSpellcasting}[1]{
	\AddSpellSlotsByLevel{0}{1,1,1,2}{#1}
	\AddSpellSlotsByLevel{1}{1,2,4,7}{#1}
	\AddSpellSlotsByLevel{2}{3,4,6,9}{#1}
	\AddSpellSlotsByLevel{3}{5,6,8,11}{#1}
	\AddSpellSlotsByLevel{4}{7,8,10,13}{#1}
	\AddSpellSlotsByLevel{5}{9,10,12,15}{#1}
	\AddSpellSlotsByLevel{6}{11,12,14,17}{#1}
	\AddSpellSlotsByLevel{7}{13,14,16,19}{#1}
	\AddSpellSlotsByLevel{8}{15,16,18,20}{#1}
	\AddSpellSlotsByLevel{9}{17,18,19,20}{#1}
}
\newcommand{\AddSpontaneousFullSpellcasting}[1]{
	\AddSpellSlotsByLevel{1}{1,1,1,2,3,4}{#1}
	\AddSpellSlotsByLevel{2}{4,4,4,5,6,7}{#1}
	\AddSpellSlotsByLevel{3}{6,6,6,7,8,9}{#1}
	\AddSpellSlotsByLevel{4}{8,8,8,9,10,11}{#1}
	\AddSpellSlotsByLevel{5}{10,10,10,11,12,13}{#1}
	\AddSpellSlotsByLevel{6}{12,12,12,13,14,15}{#1}
	\AddSpellSlotsByLevel{7}{14,14,14,15,16,17}{#1}
	\AddSpellSlotsByLevel{8}{16,16,16,17,18,19}{#1}
	\AddSpellSlotsByLevel{9}{18,18,18,19,20,20}{#1}
	\AddSpellsKnownByLevel{0}{1,1,1,1,2,4,6,8,10}{#1}
	\AddSpellsKnownByLevel{1}{1,1,3,5,7}{#1}
	\AddSpellsKnownByLevel{2}{4,5,7,9,11}{#1}
	\AddSpellsKnownByLevel{3}{6,7,9,11}{#1}
	\AddSpellsKnownByLevel{4}{8,9,11,13}{#1}
	\AddSpellsKnownByLevel{5}{10,11,13,15}{#1}
	\AddSpellsKnownByLevel{6}{12,13,15}{#1}
	\AddSpellsKnownByLevel{7}{14,15,17}{#1}
	\AddSpellsKnownByLevel{8}{16,17,19}{#1}
	\AddSpellsKnownByLevel{9}{18,19,20}{#1}
}

\newcommand{\AddTwoThirdsSpellcasting}[1]{
	\AddSpellSlotsByLevel{0}{1,1,1,2,6}{#1}
	\AddSpellSlotsByLevel{1}{1,2,3,5,9}{#1}
	\AddSpellSlotsByLevel{2}{4,5,6,8,12}{#1}
	\AddSpellSlotsByLevel{3}{7,8,9,11,15}{#1}
	\AddSpellSlotsByLevel{4}{10,11,12,14,18}{#1}
	\AddSpellSlotsByLevel{5}{13,14,15,17,19}{#1}
	\AddSpellSlotsByLevel{6}{16,17,18,19,20}{#1}
}
\newcommand{\AddSpontaneousTwoThirdsSpellcasting}[1]{
	\AddSpellSlotsByLevel{1}{1,2,3,5,9}{#1}
	\AddSpellSlotsByLevel{2}{4,5,6,8,12}{#1}
	\AddSpellSlotsByLevel{3}{7,8,9,11,15}{#1}
	\AddSpellSlotsByLevel{4}{10,11,12,14,18}{#1}
	\AddSpellSlotsByLevel{5}{13,14,15,17,19}{#1}
	\AddSpellSlotsByLevel{6}{16,17,18,19,20}{#1}
	\AddSpellsKnownByLevel{0}{1,1,1,1,2,3}{#1}
	\AddSpellsKnownByLevel{1}{1,1,2,3,7,11}{#1}
	\AddSpellsKnownByLevel{2}{4,4,5,6,10,14}{#1}
	\AddSpellsKnownByLevel{3}{7,7,8,9,13,17}{#1}
	\AddSpellsKnownByLevel{4}{10,10,11,12,16,20}{#1}
	\AddSpellsKnownByLevel{5}{13,13,14,15,19}{#1}
	\AddSpellsKnownByLevel{6}{16,16,17,18,20}{#1}
}

\newcommand{\AddHalfSpellcasting}[1]{
	\AddSpellSlotsByLevel{1}{5,9,13,17}{#1}
	\AddSpellSlotsByLevel{2}{8,12,16,20}{#1}
	\AddSpellSlotsByLevel{3}{11,15,19}{#1}
	\AddSpellSlotsByLevel{4}{14,18,20}{#1}
}

%%%%Miscllany%%%%

%% Health Counter
\NewCounter{CharHPCount}
\NewCounter{CharTempHPCount}
\NewCounter{CharHPRollsCount}
\newcommand{\HPRoll}[1]{
	\AddToCounter{CharHPCount}{#1}
	\AddToCounter{CharHPRollsCount}{1}
}

%% Miscellaneous Bonus
\newcommand{\MiscBonus}[3][]{
	\ifthenelse{\equal{#1}{}}{
		\AddToCounter{Char#2MiscCount}{#3}
	}{
		\IfCounter{Char#2#1ModCount}{
			\ifthenelse{\value{Char#2#1ModCount} < #3}{
				\AddToCounter{Char#2MiscCount}{#3 - \value{Char#2#1ModCount}}
				\SetCounter{Char#2#1ModCount}{#3}
			}{}
		}{
			\NewCounter{Char#2#1ModCount}
			\SetCounter{Char#2#1ModCount}{#3}
			\AddToCounter{Char#2MiscCount}{#3}
		}
	}
}
\newcommand{\TmpBonus}[3][]{
	\ifthenelse{\equal{#1}{}}{
		\AddToCounter{Char#2TmpCount}{#3}
	}{
		\IfCounter{Char#2#1ModCount}{
			\ifthenelse{\value{Char#2#1ModCount} < #3}{
				\AddToCounter{Char#2TmpCount}{#3 - \value{Char#2#1ModCount}}
				\SetCounter{Char#2#1ModCount}{#3}
			}{}
		}{
			\NewCounter{Char#2#1ModCount}
			\SetCounter{Char#2#1ModCount}{#3}
			\AddToCounter{Char#2TmpCount}{#3}
		}
	}
}
\newcommand{\EnhancementBonus}[2]{
	\IfCounter{Char#1EnhancementCount}{
		\ifthenelse{\value{Char#1EnhancementCount} < #2}{
			\SetCounter{Char#1EnhancementCount}{#2}
		}{}
	}{
		\NewCounter{Char#1EnhancementCount}
		\SetCounter{Char#1EnhancementCount}{#2}
	}
}

%%Spell Resistance%%
\NewCounter{CharSpellResistanceCount}
\newcommand{\AddSpellResistance}[1]{
	\SetCounter{CharSpellResistanceCount}{\maxof{\value{CharSpellResistanceCount}}{#1}}
}

%%Initiative%%
\NewCounter{CharInitiativeMiscCount}

%%Conditional Modifiers
\edef\CharConditionalSkillsModList{}
\edef\CharConditionalAttackModList{}
\edef\CharConditionalDefModList{}
\newcommand{\AddConditionalSkillMod}[1]{
	\listadd\CharConditionalSkillsModList{#1}}
\newcommand{\AddConditionalAttackMod}[1]{
	\listadd\CharConditionalAttackModList{#1}}
\newcommand{\AddConditionalDefMod}[1]{
	\listadd\CharConditionalDefModList{#1}}

%% Languages
\edef\CharLanguagesList{}
\newcommand{\AddCharLanguage}[1]{
	\listinsert{\CharLanguagesList}{#1}
}

%% XP
\NewCounter{CharXPCount}
\NewCounter{CharNextLevelXPCount}
\NewCounter{XP-Mode}
\newcommand{\CalculateNextLevelXP}{
	\ifthenelse{\value{XP-Mode} = 0}{}{
		\ifthenelse{\value{XP-Mode} = 1}{
			\SetCounter{CharNextLevelXPCount}{0}
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\AddToCounter{CharNextLevelXPCount}{1300}
			\ifthenelse{\value{CharTotalLevelCount} > 1}{
				\AddToCounter{CharNextLevelXPCount}{2000}
			\ifthenelse{\value{CharTotalLevelCount} > 2}{
				\AddToCounter{CharNextLevelXPCount}{2700}
			\ifthenelse{\value{CharTotalLevelCount} > 3}{
				\AddToCounter{CharNextLevelXPCount}{4000}
			\ifthenelse{\value{CharTotalLevelCount} > 4}{
				\AddToCounter{CharNextLevelXPCount}{5000}
			\ifthenelse{\value{CharTotalLevelCount} > 5}{
				\AddToCounter{CharNextLevelXPCount}{8000}
			\ifthenelse{\value{CharTotalLevelCount} > 6}{
				\AddToCounter{CharNextLevelXPCount}{11000}
			\ifthenelse{\value{CharTotalLevelCount} > 7}{
				\AddToCounter{CharNextLevelXPCount}{16000}
			\ifthenelse{\value{CharTotalLevelCount} > 8}{
				\AddToCounter{CharNextLevelXPCount}{21000}
			\ifthenelse{\value{CharTotalLevelCount} > 9}{
				\AddToCounter{CharNextLevelXPCount}{34000}
			\ifthenelse{\value{CharTotalLevelCount} > 10}{
				\AddToCounter{CharNextLevelXPCount}{40000}
			\ifthenelse{\value{CharTotalLevelCount} > 11}{
				\AddToCounter{CharNextLevelXPCount}{65000}
			\ifthenelse{\value{CharTotalLevelCount} > 12}{
				\AddToCounter{CharNextLevelXPCount}{85000}
			\ifthenelse{\value{CharTotalLevelCount} > 13}{
				\AddToCounter{CharNextLevelXPCount}{130000}
			\ifthenelse{\value{CharTotalLevelCount} > 14}{
				\AddToCounter{CharNextLevelXPCount}{175000}
			\ifthenelse{\value{CharTotalLevelCount} > 15}{
				\AddToCounter{CharNextLevelXPCount}{250000}
			\ifthenelse{\value{CharTotalLevelCount} > 16}{
				\AddToCounter{CharNextLevelXPCount}{350000}
			\ifthenelse{\value{CharTotalLevelCount} > 17}{
				\AddToCounter{CharNextLevelXPCount}{500000}
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\AddToCounter{CharNextLevelXPCount}{700000}
			}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
		}{
		\ifthenelse{\value{XP-Mode} = 2}{
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\AddToCounter{CharNextLevelXPCount}{2000}
			\ifthenelse{\value{CharTotalLevelCount} > 1}{
				\AddToCounter{CharNextLevelXPCount}{3000}
			\ifthenelse{\value{CharTotalLevelCount} > 2}{
				\AddToCounter{CharNextLevelXPCount}{4000}
			\ifthenelse{\value{CharTotalLevelCount} > 3}{
				\AddToCounter{CharNextLevelXPCount}{6000}
			\ifthenelse{\value{CharTotalLevelCount} > 4}{
				\AddToCounter{CharNextLevelXPCount}{8000}
			\ifthenelse{\value{CharTotalLevelCount} > 5}{
				\AddToCounter{CharNextLevelXPCount}{12000}
			\ifthenelse{\value{CharTotalLevelCount} > 6}{
				\AddToCounter{CharNextLevelXPCount}{16000}
			\ifthenelse{\value{CharTotalLevelCount} > 7}{
				\AddToCounter{CharNextLevelXPCount}{24000}
			\ifthenelse{\value{CharTotalLevelCount} > 8}{
				\AddToCounter{CharNextLevelXPCount}{30000}
			\ifthenelse{\value{CharTotalLevelCount} > 9}{
				\AddToCounter{CharNextLevelXPCount}{50000}
			\ifthenelse{\value{CharTotalLevelCount} > 10}{
				\AddToCounter{CharNextLevelXPCount}{65000}
			\ifthenelse{\value{CharTotalLevelCount} > 11}{
				\AddToCounter{CharNextLevelXPCount}{95000}
			\ifthenelse{\value{CharTotalLevelCount} > 12}{
				\AddToCounter{CharNextLevelXPCount}{130000}
			\ifthenelse{\value{CharTotalLevelCount} > 13}{
				\AddToCounter{CharNextLevelXPCount}{190000}
			\ifthenelse{\value{CharTotalLevelCount} > 14}{
				\AddToCounter{CharNextLevelXPCount}{255000}
			\ifthenelse{\value{CharTotalLevelCount} > 15}{
				\AddToCounter{CharNextLevelXPCount}{410000}
			\ifthenelse{\value{CharTotalLevelCount} > 16}{
				\AddToCounter{CharNextLevelXPCount}{500000}
			\ifthenelse{\value{CharTotalLevelCount} > 17}{
				\AddToCounter{CharNextLevelXPCount}{750000}
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\AddToCounter{CharNextLevelXPCount}{1050000}
			}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
		}{
		\ifthenelse{\value{XP-Mode} = 3}{
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\AddToCounter{CharNextLevelXPCount}{3000}
			\ifthenelse{\value{CharTotalLevelCount} > 1}{
				\AddToCounter{CharNextLevelXPCount}{4500}
			\ifthenelse{\value{CharTotalLevelCount} > 2}{
				\AddToCounter{CharNextLevelXPCount}{6500}
			\ifthenelse{\value{CharTotalLevelCount} > 3}{
				\AddToCounter{CharNextLevelXPCount}{9000}
			\ifthenelse{\value{CharTotalLevelCount} > 4}{
				\AddToCounter{CharNextLevelXPCount}{11000}
			\ifthenelse{\value{CharTotalLevelCount} > 5}{
				\AddToCounter{CharNextLevelXPCount}{18000}
			\ifthenelse{\value{CharTotalLevelCount} > 6}{
				\AddToCounter{CharNextLevelXPCount}{24000}
			\ifthenelse{\value{CharTotalLevelCount} > 7}{
				\AddToCounter{CharNextLevelXPCount}{38000}
			\ifthenelse{\value{CharTotalLevelCount} > 8}{
				\AddToCounter{CharNextLevelXPCount}{45000}
			\ifthenelse{\value{CharTotalLevelCount} > 9}{
				\AddToCounter{CharNextLevelXPCount}{75000}
			\ifthenelse{\value{CharTotalLevelCount} > 10}{
				\AddToCounter{CharNextLevelXPCount}{95000}
			\ifthenelse{\value{CharTotalLevelCount} > 11}{
				\AddToCounter{CharNextLevelXPCount}{145000}
			\ifthenelse{\value{CharTotalLevelCount} > 12}{
				\AddToCounter{CharNextLevelXPCount}{190000}
			\ifthenelse{\value{CharTotalLevelCount} > 13}{
				\AddToCounter{CharNextLevelXPCount}{290000}
			\ifthenelse{\value{CharTotalLevelCount} > 14}{
				\AddToCounter{CharNextLevelXPCount}{395000}
			\ifthenelse{\value{CharTotalLevelCount} > 15}{
				\AddToCounter{CharNextLevelXPCount}{550000}
			\ifthenelse{\value{CharTotalLevelCount} > 16}{
				\AddToCounter{CharNextLevelXPCount}{800000}
			\ifthenelse{\value{CharTotalLevelCount} > 17}{
				\AddToCounter{CharNextLevelXPCount}{1150000}
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\AddToCounter{CharNextLevelXPCount}{1500000}
			}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
		}}}
	}
}


%%%%Initialization%%%%
\newcommand{\Initialize}{
	\CalculateNextLevelXP
	\ComputeAbilityScores
	% Size bonus to Stealth
	\MiscBonus{Stealth}{\value{CharSizeModCount} * 4}
	% Add Con to HP
	\ifthenelse{\value{HP-Mode} > 0}{\AddToCounter{CharHPCount}{\value{CharConModCount} * \value{CharTotalLevelCount}}}{}
	% Add feats from levels
	\AddToCounter{CharFeatsCount}{(\value{CharTotalLevelCount} + 1) / 2}
	% Add INT to Skill Ranks
	\AddIntToSkillRanks
	\SetCounter{CharIteratedAttacksCount}{(\value{CharBABCount}-1)/5+1}
	\InitializeSpellSlots
	\CalculateLoads
	\CalculateWeights
	\CheckEncumberance
	\SpeedInitialize
	\SetCounter{CharDextoACCount}{\minof{\value{CharDexModCount}}{\value{CharMaxDexBonusCount}}}
	\RunChecks
}

%%Pathfinder System Checks
\newcommand{\RunChecks}{
	\AddDebug{Running checks}
	\AddDebug{Checking HP Rolls}
	%CHECK HP ROLLS
	\ifthenelse{\value{HP-Mode} = 1}{ %Only run if we are in rolls Mode for HP
		\AddDebug{HP Mode == 1. Checking that the number of HP rolls is correct:\\
				  Number of HP rolls: \arabic{CharHPRollsCount}\\
				  Level: \arabic{CharTotalLevelCount}}
		\ifthenelse{\arabic{CharHPRollsCount} < \arabic{CharTotalLevelCount}}{
			\AddDebug{Num HP rolls less than expected}
			\AddWarning{\DoMath{\value{CharTotalLevelCount} - \value{CharHPRollsCount}} HP rolls missing}
		}{
			\ifthenelse{\arabic{CharHPRollsCount} > \arabic{CharTotalLevelCount}}{
				\AddDebug{Num HP rolls more than expected}
				\AddWarning{\DoMath{\value{CharHPRollsCount} - \value{CharTotalLevelCount}} Extra HP rolls}
			}{\AddDebug{Num HP rolls is correct}}
		}
	}{\AddDebug{HP Mode != 1. No need to check HP rolls}}
	%CHECK SKILL RANKS
	\ifthenelse{\value{AutoSkillRanks-Mode} = 1}{
		\AddDebug{Checking Skill Ranks}
		\ifthenelse{\value{CharSpareSkillRanksCount} > 0}{
			\AddWarning{Character has \arabic{CharSpareSkillRanksCount} Skill Ranks left to spend}
		}{\ifthenelse{\value{CharSpareSkillRanksCount} < 0}{
			\AddWarning{Character has spent \DoMath{-\value{CharSpareSkillRanksCount}} too many Skill Ranks}
		}{}}
	}{}
	%CHECK FEATS
	\ifthenelse{\value{CountFeats-Mode} = 1}{
		\AddDebug{Checking Feats}
		\ifthenelse{\value{CharBonusFeatsCount} < 0}{
			\AddWarning{\DoMath{-\value{CharBonusFeatsCount}} too many Bonus Feats selected}
		}{
		\ifthenelse{\value{CharBonusFeatsCount} > 0}{
			\AddWarning{\arabic{CharBonusFeatsCount} Bonus Feats left to select}
		}{}}
		\ifthenelse{\value{CharFeatsCount} < 0}{
			\AddWarning{\DoMath{-\value{CharFeatsCount}} too many Feats selected}
		}{
		\ifthenelse{\value{CharFeatsCount} > 0}{
			\AddWarning{\arabic{CharFeatsCount} Feats left to select}
		}{}}
	}{}
	%CHECK FAVORED CLASS LEVELS
	\ifthenelse{\value{CheckFavoredClass-Mode} = 1}{
		\AddDebug{Checking Favored Class Levels}
		\ifthenelse{\value{CharSpareFavoredClassLevelsCount} < 0}{
			\AddWarning{\DoMath{-\value{CharSpareFavoredClassLevelsCount}} too many favored class bonuses assigned}
		}{
		\ifthenelse{\value{CharSpareFavoredClassLevelsCount} > 0}{
			\AddWarning{\arabic{CharSpareFavoredClassLevelsCount} favored class bonuses left to assign}
		}{}}
	}{}
}

%Functions for adding class specific checks and warnings:
\NewDocumentCommand{\CheckRightNumberSelected}{m m o}{
	\gappto{\RunChecks}{

		\ifthenelse{\value{Char#1Count} < 0}{
			\AddWarning{\DoMath{-\value{Char#1Count}} too many selections made for #2}
		}{
		\ifthenelse{\value{Char#1Count} > 0}{
			\AddWarning{Make \arabic{Char#1Count} more selections for #2.\IfNoValueF{#3}{ Use the function \texttt{\textbackslash#3}} to add one.}
		}{}}
	}
}

\NewDocumentCommand{\CheckIsSelected}{m m o}{
	\gappto{\RunChecks}{
		\ifcsempty{Char#1}{%
			\AddWarning{No #2 is selected.\IfNoValueF{#3}{ Use the function \texttt{\textbackslash#3}} to select it.}%
		}{}
	}
}
