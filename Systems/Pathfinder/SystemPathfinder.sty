\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{SystemPathfinder}[2016/12/29 Pathfinder system-specific features for rpgcharsheet2.cls]
\RequirePackage{Systems/D20-Common/SystemD20-Common}

%%%% Character Attributes %%%%

%% Ability Scores %%
\appto{\ComputeAbilityScores}{\SetCounter{CharCMDAbilityModCount}{\value{CharStrModCount}+\value{CharDexModCount}}}

%% Armor Class %%

%% Saving Throws

%% Special Defenses

%% BAB, attacks, combat maneuvers
\renewcommand{\do}[1]{
	\NewCounter{Char#1MiscCount}
	\NewCounter{Char#1TmpCount}
}\docsvlist{Melee,Ranged,CMB,CMD}
\NewCounter{CharCMDBaseCount}
\NewCounter{CharCMDAbilityModCount}

%% Size
\NewCounter{CharSpecialSizeModCount}
\newcommand\SetSize[1]{
	\csname SetSize#1\endcsname
}
\newcommand\SetSizeFine{
	\renewcommand{\CharSize}{Fine}
	\SetCounter{CharSizeModCount}{8}
	\SetCounter{CharSpecialSizeModCount}{-8}
}
\newcommand\SetSizeDiminutive{
	\renewcommand{\CharSize}{Diminutive}
	\SetCounter{CharSizeModCount}{4}
	\SetCounter{CharSpecialSizeModCount}{-4}
}
\newcommand\SetSizeTiny{
	\renewcommand{\CharSize}{Tiny}
	\SetCounter{CharSizeModCount}{2}
	\SetCounter{CharSpecialSizeModCount}{-2}
}
\newcommand\SetSizeSmall{
	\renewcommand{\CharSize}{Small}
	\SetCounter{CharSizeModCount}{1}
	\SetCounter{CharSpecialSizeModCount}{-1}
}
\newcommand\SetSizeMedium{
	\renewcommand{\CharSize}{Medium}
	\SetCounter{CharSizeModCount}{0}
	\SetCounter{CharSpecialSizeModCount}{0}
}
\newcommand\SetSizeLarge{
	\renewcommand{\CharSize}{Large}
	\SetCounter{CharSizeModCount}{-1}
	\SetCounter{CharSpecialSizeModCount}{1}
}
\newcommand\SetSizeHuge{
	\renewcommand{\CharSize}{Huge}
	\SetCounter{CharSizeModCount}{-2}
	\SetCounter{CharSpecialSizeModCount}{2}
}
\newcommand\SetSizeGargantuan{
	\renewcommand{\CharSize}{Gargantuan}
	\SetCounter{CharSizeModCount}{-4}
	\SetCounter{CharSpecialSizeModCount}{4}
}
\newcommand\SetSizeColossal{
	\renewcommand{\CharSize}{Colossal}
	\SetCounter{CharSizeModCount}{-8}
	\SetCounter{CharSpecialSizeModCount}{8}
}

%% Speed
\NewCounter{CharManeuverabilityCount}
\newcommand{\AddFlySpeed}[2]{
	\SetCounter{CharFlySpeedCount}{#1}
	\SetCounter{CharManeuverabilityCount}{#2}
}
\appto{\SpeedInitialize}{%
	\MiscBonus{Fly}{\value{CharManeuverabilityCount}}
	\MiscBonus{Fly}{\value{CharSizeModCount} * 2}
}


%%%% Feats, Class & Race Features %%%%

\edef\CharFeatsList{}
\edef\CharRaceFeaturesList{}
\edef\CharClassFeaturesList{}
\edef\CharLimitedUseList{}
\NewCounter{CharFeatsCount}
\NewCounter{CharBonusFeatsCount}
\NewCounter{CountFeats-Mode}

%% Favored Classes %%
\NewCounter{CheckFavoredClass-Mode}
\SetCounter{CheckFavoredClass-Mode}{1}
\NewCounter{CharSpareFavoredClassLevelsCount}

\newcommand{\AddFavoredClassHP}[1]{
	\ifthenelse{\equal{#1}{}}{
		\AddFavoredClassHP{\value{CharSpareFavoredClassLevelsCount}}
	}{
		\AddToCounter{CharHPCount}{#1}
		\AddToCounter{CharSpareFavoredClassLevelsCount}{-#1}
	}
}

\newcommand{\AddFavoredClassSkillRanks}[1]{
	\ifthenelse{\equal{#1}{}}{
		\AddFavoredClassSkillRanks{\value{CharSpareFavoredClassLevelsCount}}
	}{
		\AddToCounter{CharSpareSkillRanksCount}{#1}
		\AddToCounter{CharSpareFavoredClassLevelsCount}{-#1}
	}
}

\NewDocumentCommand{\AddFavoredClassSpecial}{m O{} O{*1}}{
	\ifthenelse{\equal{#1}{}}{
		\AddFavoredClassSpecial{\arabic{CharSpareFavoredClassLevelsCount}}[#2][#3]
	}{
		\newcommand\FavoredClassSpecialDo[1]{
			#2{##1}
		}
		\FavoredClassSpecialDo{#1#3}
		\AddToCounter{CharSpareFavoredClassLevelsCount}{-#1}
	}
}

%% Class Importing %%
\NewDocumentCommand{\ImportCharClass}{s O{} m O{} m}{
	\AddDebug{IMPORTCHARCLASS: add #5 Levels of #4 #3}
	\ifthenelse{\equal{#4}{}}{
		\input{"\datafolder/Classes/#3.tex"}
	}{
		\input{"\datafolder/Classes/#3_#4.tex"}
	}

	\ImportCharClassCommon{#3}{#5}

	\ifthenelse{\equal{#2}{}}{
		\appto\CharLevel{\capitalize{#3} #5 }
	}{
		\appto\CharLevel{#2 #5 }
	}
	\AddToCounter{CharSpareSkillRanksCount}{(\value{#3SkillRanksPerLevelCount} + \value{CharBonusSkillRanksPerLevelCount})* #5}
	\IfBooleanT #1 {\AddToCounter{CharSpareFavoredClassLevelsCount}{#5}}
}


%%%% Skills %%%%

% Define Skills lists
\forcsvlist{\listadd\SkillsList}{Acrobatics, Appraise, Bluff, Climb, CraftOne, CraftTwo, CraftThree, Diplomacy, DisableDevice, Disguise, EscapeArtist, Fly, HandleAnimal, Heal, Intimidate, Linguistics, Perception, PerformOne, PerformTwo, PerformThree, ProfessionOne, ProfessionTwo, Ride, SenseMotive, SleightOfHand, Spellcraft, Stealth, Survival, Swim, UseMagicDevice}

% Define lists for Armor check penalty and trained-only
\forcsvlist{\listadd\ArmorCheckSkillsList}{Acrobatics, Climb, DisableDevice, EscapeArtist, Fly, Ride, SleightOfHand, Stealth, Swim}
\forcsvlist{\listadd\TrainedSkillsList}{DisableDevice, HandleAnimal, Linguistics, ProfessionOne, ProfessionTwo, SleightofHand, Spellcraft, UseMagicDevice}


% Initialize Skill variables
\renewcommand{\do}[1]{
	\NewCounter{Char#1Count}
	\NewCounter{Char#1ClassSkillBool}
	\NewCounter{Char#1RanksCount}
	\NewCounter{Char#1MiscCount}
}\dolistloop{\SkillsList}

%Command to add Skill Ranks
\newcommand\AddRanks[2]{
	\AddToCounter{Char#1RanksCount}{#2}
	\AddToCounter{CharSpareSkillRanksCount}{-#2}
}

%Commands to be run at sheet initialization
\newcommand{\AddIntToSkillRanks}{
	\ifthenelse{\value{AutoSkillRanks-Mode} = 1}{
		\SetCounter{@j}{(\value{CharIntCount} - \value{CharIntTmpCount}) / 2 - 5}
		\renewcommand\do[1]{
			\SetCounter{@k}{\value{@j} + \value{##1SkillRanksPerLevelCount}}
			\AddDebug{Class \# \arabic{@i} is: ##1}
			\ifthenelse{\value{@k} < 1}{
				\AddDebug{Min 1 rank per Level}
				\AddToCounter{CharSpareSkillRanksCount}{(1 - \value{##1SkillRanksPerLevelCount}) * \value{Char##1ClassLevelCount}}
			}{
				\AddToCounter{CharSpareSkillRanksCount}{\value{@j} * \value{Char##1ClassLevelCount}}
			}
		}\dolistloop{\CharClassesList}
	}{}
}


%%%% Character Name & Description %%%%

%%%% Items %%%%

%% Gear %%

%% Stored Items %%

%% Weapons %%

%% Armor and Shield %%
%Pathfinder separated out magic armor (and other armor slot items) from the body slot
\patchcmd{\AddArmor}{AddBodyItem}{AddArmorItem}{}{}

%% Magic Item Slots %%
%Pathfinder added separate slots for armor and headband (Previously shared slots with Body and Head respectively)
\forcsvlist{\listinsert\ItemSlotNamesList}{Armor, Headband}
\renewcommand{\do}[1]{
	\expandafter\newcommand\csname ItemInSlot#1Name\endcsname{}
	\expandafter\newcommand\csname ItemInSlot#1Description\endcsname{}
	\expandafter\newlength\csname ItemInSlot#1Weight\endcsname
	\expandafter\newcommand \csname Add#1Item\endcsname[3]{
		\expandafter\renewcommand\csname ItemInSlot#1Name\endcsname{\itshape ##1}
		\expandafter\renewcommand\csname ItemInSlot#1Description\endcsname{##2}
		\SetLength{\csname ItemInSlot#1Weight\endcsname}{##3pt}
		\AddToLength{\WornItemsWeight}{##3pt}
	}
}\docsvlist{Armor, Headband}

%% Money %%

%% Weight Carried %%

%% Carrying Capacity %%

%%%% Spells %%%%

\renewcommand{\do}[1]{
	\expandafter\newcommand\csname CharSpellcastingClass#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingClass#1Ability\endcsname{}
	\NewCounter{CharCL#1Count}
	\NewCounter{CharSpellcastingClass#1MaxSpellLevelCount}
	\SetCounter{CharSpellcastingClass#1MaxSpellLevelCount}{-1}
	\NewCounter{CharSpellcasting#1HasCantrips}
	\SetCounter{CharSpellcasting#1HasCantrips}{0}
	\expandafter\NewDocumentCommand\csname NewSpellcasting#1\endcsname{s O{9} m m m}{
		\IfBooleanF ##1 {\SetCounter{CharSpellcasting#1HasCantrips}{1}}
		\SetCounter{CharSpellcastingClass#1MaxSpellLevelCount}{##2}
		\expandafter\renewcommand\csname CharSpellcastingClass#1\endcsname{##3}
		\expandafter\renewcommand\csname CharSpellcastingClass#1Ability\endcsname{##5}
		\SetCounter{CharCL#1Count}{##4}
	}
}\docsvlist{One,Two}

\NewDocumentCommand{\NewSpellcasting}{s O{9} m m m}{
	\ifthenelse{\equal{\CharSpellcastingClassOne}{}}{
		\IfBooleanTF #1 {\NewSpellcastingOne*[#2]{#3}{#4}{#5}} {\NewSpellcastingOne[#2]{#3}{#4}{#5}}
	}{
		\IfBooleanTF #1 {\NewSpellcastingTwo*[#2]{#3}{#4}{#5}} {\NewSpellcastingTwo[#2]{#3}{#4}{#5}}
	}
}
\ProvideDocumentCommand{\AddSpell}{o m m}{%[Class]{Level}{Spell Name}
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{
		\listcsinsert{Char#2SpellsListOne}{#3}
	}{
		\listcsinsert{Char#2SpellsListTwo}{#3}
	}
	%% Implementation for when the switch to class-specific spell lists (instead of SpellcastingClassOne/SpellcastingClassTwo) is made
	%	\IfValueTF #1 {
	%		\listcsinsert{Char#1#2SpellsList}{#3}
	%		\StepCounter{Char#1#2SpellsActuallyKnown}
	%	}{
	%		\listcsinsert{Char\CharCurrentSpellcastingClass #2SpellsList}{#3}
	%		\StepCounter{Char\CharCurrentSpellcastingClass #2SpellsActuallyKnown}
	%	}
}

\newcommand{\DeclareSpellDescription}[2]{
	\expandafter\newcommand\csname Spell#1LongDescription\endcsname{#2}
}

\ProvideDocumentCommand{\DeclareSpell}{m >{\SplitArgument{7}{|}}m O{}}{%{Name}{Attributes}[Short desc]
	\csdef{Spell#1ShortDescription}{#3}%
	\DeclareSpellInternal{#1}#2%
	\NewCounter{CharSpell#1PreparedCount}%
	\NewCounter{CharSpell#1CastCount}%
}

\ProvideDocumentCommand{\DeclareSpellInternal}{m m m m m m m m m}{%Name, School, Components, Cast Time, Range, Effect Type: Effect, Duration, Save, SR
	\csdef{Spell#1School}{#2}%
	\csdef{Spell#1Components}{#3}%
	\csdef{Spell#1CastTime}{#4}%
	\csdef{Spell#1Range}{#5}%
	\DeclareSpellEffect{#1}{#6}%
	\csdef{Spell#1Duration}{#7}%
	\csdef{Spell#1Save}{#8}%
	\csdef{Spell#1SR}{#9}%
}
\ProvideDocumentCommand{\DeclareSpellEffectInternal}{m m m}{%
	\csdef{Spell#1EffectType}{#2}%
	\csdef{Spell#1Effect}{#3}%
}

\ProvideDocumentCommand{\DeclareSpellEffect}{m >{\SplitArgument{1}{:}}m}{%
	\DeclareSpellEffectInternal{#1}#2%
}

\renewcommand{\do}[1]{
	\expandafter\edef\csname Char#1SpellsListOne\endcsname{}
	\expandafter\edef\csname Char#1SpellsListTwo\endcsname{}
}\docsvlist{0,1,2,3,4,5,6,7,8,9}

\newcommand{\AddPrimarySpellcasting}[1]{
		\AddSpellSlots{0}{3}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 1}{
		\AddSpellSlots{0}{1}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 2}{
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 3}{
		\AddSpellSlots{0}{1}
		\AddSpellSlots{1}{1}
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 4}{
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 5}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 6}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{0}{1}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 7}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 8}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 9}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{5}{1}
	\ifthenelse{#1 > 10}{
		\AddSpellSlots{6}{1}
		\AddSpellSlots{3}{1}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 11}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{1}
	\ifthenelse{#1 > 12}{
		\AddSpellSlots{7}{1}
		\AddSpellSlots{4}{1}
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 13}{
		\AddSpellSlots{6}{1}
		\AddSpellSlots{7}{1}
	\ifthenelse{#1 > 14}{
		\AddSpellSlots{8}{1}
		\AddSpellSlots{5}{1}
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 15}{
		\AddSpellSlots{7}{1}
		\AddSpellSlots{8}{1}
	\ifthenelse{#1 > 16}{
		\AddSpellSlots{9}{1}
		\AddSpellSlots{6}{1}
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 17}{
		\AddSpellSlots{8}{1}
		\AddSpellSlots{9}{1}
	\ifthenelse{#1 > 18}{
		\AddSpellSlots{7}{1}
		\AddSpellSlots{9}{1}
		\AddSpellSlots{5}{1}
	\ifthenelse{#1 > 19}{
		\AddSpellSlots{8}{1}
		\AddSpellSlots{9}{1}
	}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
}
\newcommand{\AddSpontaneousPrimarySpellcasting}[1]{
		\AddSpellSlots{0}{5}
		\AddSpellSlots{1}{3}
	\ifthenelse{#1 > 1}{
		\AddSpellSlots{0}{1}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 2}{
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 3}{
		\AddSpellSlots{1}{1}
		\AddSpellSlots{2}{3}
	\ifthenelse{#1 > 4}{
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 5}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{3}{3}
	\ifthenelse{#1 > 6}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 7}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{4}{3}
	\ifthenelse{#1 > 8}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 9}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{5}{3}
	\ifthenelse{#1 > 10}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{5}{1}
	\ifthenelse{#1 > 11}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{3}
	\ifthenelse{#1 > 12}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{1}
	\ifthenelse{#1 > 13}{
		\AddSpellSlots{6}{1}
		\AddSpellSlots{7}{3}
	\ifthenelse{#1 > 14}{
		\AddSpellSlots{6}{1}
		\AddSpellSlots{7}{1}
	\ifthenelse{#1 > 15}{
		\AddSpellSlots{7}{1}
		\AddSpellSlots{8}{3}
	\ifthenelse{#1 > 16}{
		\AddSpellSlots{7}{1}
		\AddSpellSlots{8}{1}
	\ifthenelse{#1 > 17}{
		\AddSpellSlots{8}{1}
		\AddSpellSlots{9}{3}
	\ifthenelse{#1 > 18}{
		\AddSpellSlots{8}{1}
		\AddSpellSlots{9}{1}
	\ifthenelse{#1 > 19}{
		\AddSpellSlots{9}{2}
	}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
}
\newcommand{\AddTwoThirdsSpellcasting}[1]{
		\AddSpellsKnown{0}{4}
		\AddSpellSlots{1}{1}
		\AddSpellsKnown{1}{2}
	\ifthenelse{#1 > 1}{
		\AddSpellsKnown{0}{1}
		\AddSpellsKnown{1}{1}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 2}{
		\AddSpellSlots{1}{1}
		\AddSpellsKnown{0}{1}
		\AddSpellsKnown{1}{1}
	\ifthenelse{#1 > 3}{
		\AddSpellSlots{2}{1}
		\AddSpellsKnown{2}{2}
	\ifthenelse{#1 > 4}{
		\AddSpellSlots{1}{1}
		\AddSpellSlots{2}{1}
		\AddSpellsKnown{2}{1}
	\ifthenelse{#1 > 5}{
		\AddSpellSlots{2}{1}
		\AddSpellsKnown{2}{1}
	\ifthenelse{#1 > 6}{
		\AddSpellSlots{3}{1}
		\AddSpellsKnown{1}{1}
		\AddSpellsKnown{3}{2}
	\ifthenelse{#1 > 7}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{3}{1}
		\AddSpellsKnown{3}{1}
	\ifthenelse{#1 > 8}{
		\AddSpellSlots{1}{1}
		\AddSpellSlots{3}{1}
		\AddSpellsKnown{3}{1}
	\ifthenelse{#1 > 9}{
		\AddSpellSlots{4}{1}
		\AddSpellsKnown{2}{1}
		\AddSpellsKnown{4}{2}
	\ifthenelse{#1 > 10}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{4}{1}
		\AddSpellsKnown{1}{1}
		\AddSpellsKnown{4}{1}
	\ifthenelse{#1 > 11}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{4}{1}
		\AddSpellsKnown{4}{1}
	\ifthenelse{#1 > 12}{
		\AddSpellSlots{5}{1}
		\AddSpellsKnown{3}{1}
		\AddSpellsKnown{5}{2}
	\ifthenelse{#1 > 13}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{5}{1}
		\AddSpellsKnown{2}{1}
		\AddSpellsKnown{5}{1}
	\ifthenelse{#1 > 14}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{5}{1}
		\AddSpellsKnown{5}{1}
	\ifthenelse{#1 > 15}{
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{4}{1}
		\AddSpellsKnown{6}{2}
	\ifthenelse{#1 > 16}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{3}{1}
		\AddSpellsKnown{6}{1}
	\ifthenelse{#1 > 17}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{6}{1}
	\ifthenelse{#1 > 18}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{5}{1}
	\ifthenelse{#1 > 19}{
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{4}{1}
		\AddSpellsKnown{6}{1}
	}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
}
\newcommand{\AddTwoThirdsPreparedSpellcasting}[1]{
		\AddSpellSlots{0}{3}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 1}{
		\AddSpellSlots{0}{1}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 2}{
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 3}{
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 4}{
		\AddSpellSlots{1}{1}
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 5}{
		\AddSpellSlots{0}{1}
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 6}{
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 7}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 8}{
		\AddSpellSlots{1}{1}
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 9}{
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 10}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 11}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 12}{
		\AddSpellSlots{5}{1}
	\ifthenelse{#1 > 13}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{5}{1}
	\ifthenelse{#1 > 14}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{5}{1}
	\ifthenelse{#1 > 15}{
		\AddSpellSlots{6}{1}
	\ifthenelse{#1 > 16}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{1}
	\ifthenelse{#1 > 17}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{6}{1}
	\ifthenelse{#1 > 18}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{1}
	\ifthenelse{#1 > 19}{
		\AddSpellSlots{6}{1}
	}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
}
\newcommand{\AddHalfSpellcasting}[1]{
	\ifthenelse{#1 > 5}{
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 9}{
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 11}{
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 13}{
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 14}{
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 15}{
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 16}{
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 17}{
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 18}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{3}{1}
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 19}{
		\AddSpellSlots{4}{1}
	}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
}

%Initialize Spellcasting variables
\ForLoop{@i}{0}{\value{@i}<10}{
	\NewCounter{CharAbilitySpellSlotsOne\arabic{@i}Count}
	\NewCounter{CharAbilitySpellSlotsTwo\arabic{@i}Count}
	\NewCounter{CharClassSpellSlotsOne\arabic{@i}Count}
	\NewCounter{CharClassSpellSlotsTwo\arabic{@i}Count}
	\NewCounter{CharBonusSpellSlotsOne\arabic{@i}Count}
	\NewCounter{CharBonusSpellSlotsTwo\arabic{@i}Count}
	\NewCounter{CharTotalSpellSlotsOne\arabic{@i}Count}
	\NewCounter{CharTotalSpellSlotsTwo\arabic{@i}Count}
	\NewCounter{CharSpellsKnownOne\arabic{@i}Count}
	\NewCounter{CharSpellsKnownTwo\arabic{@i}Count}
}

\newcommand{\InitializeSpellSlots}{
	\ifthenelse{\equal{\CharSpellcastingClassOneAbility}{}}{}{
		\SetCounter{CharTotalSpellSlotsOne0Count}{\value{CharClassSpellSlotsOne0Count} + \value{CharBonusSpellSlotsOne0Count}}
		\ForLoop{@i}{1}{\value{@i}<10}{
			\SetCounter{CharAbilitySpellSlotsOne\arabic{@i}Count}{(\value{Char\CharSpellcastingClassOneAbility ModCount}+4-\value{@i})/4}
			\SetCounter{CharTotalSpellSlotsOne\arabic{@i}Count}{
				\value{CharAbilitySpellSlotsOne\arabic{@i}Count} +
				\value{CharClassSpellSlotsOne\arabic{@i}Count} +
				\value{CharBonusSpellSlotsOne\arabic{@i}Count}
			}
		}
		\AddDebug{Adjusting max Spell Level for \CharSpellcastingClassOne}
		\AddDebug{-Ability score = \arabic{Char\CharSpellcastingClassOneAbility Count}}
		\AddDebug{-New max Spell Level = \DoMath{\value{Char\CharSpellcastingClassOneAbility Count} - 10}}
		\AddDebug{-Old max Spell Level = \arabic{CharSpellcastingClassOneMaxSpellLevelCount}}
		\DoMath*{\value{Char\CharSpellcastingClassOneAbility Count} - 10}
		\ifthenelse{\value{CharSpellcastingClassOneMaxSpellLevelCount} > \value{@DoMathCounter}}{
			\SetCounter{CharSpellcastingClassOneMaxSpellLevelCount}{\value{Char\CharSpellcastingClassOneAbility Count} - 10}
			\AddDebug{-Max Spell Level set to \arabic{CharSpellcastingClassOneMaxSpellLevelCount}}
		}{
			\AddDebug{-No adjustment needed}
		}
	}
	\ifthenelse{\equal{\CharSpellcastingClassTwoAbility}{}}{}{
		\SetCounter{CharTotalSpellSlotsTwo0Count}{\value{CharClassSpellSlotsTwo0Count} + \value{CharBonusSpellSlotsTwo0Count}}
		\ForLoop{@i}{1}{\value{@i}<10}{
			\SetCounter{CharAbilitySpellSlotsTwo\arabic{@i}Count}{(\value{Char\CharSpellcastingClassTwoAbility ModCount}+4-\value{@i})/4}
			\SetCounter{CharTotalSpellSlotsTwo\arabic{@i}Count}{
				\value{CharAbilitySpellSlotsTwo\arabic{@i}Count} +
				\value{CharClassSpellSlotsTwo\arabic{@i}Count} +
				\value{CharBonusSpellSlotsTwo\arabic{@i}Count}
			}
		}
		\AddDebug{Adjusting max Spell Level for \CharSpellcastingClassTwo}
		\AddDebug{-Ability score = \arabic{Char\CharSpellcastingClassTwoAbility Count}}
		\AddDebug{-New max Spell Level = \DoMath{\value{Char\CharSpellcastingClassTwoAbility Count} - 10}}
		\AddDebug{-Old max Spell Level = \arabic{CharSpellcastingClassTwoMaxSpellLevelCount}}
		\DoMath*{\value{Char\CharSpellcastingClassTwoAbility Count} - 10}
		\ifthenelse{\value{CharSpellcastingClassTwoMaxSpellLevelCount} > \value{@DoMathCounter}}{
			\SetCounter{CharSpellcastingClassTwoMaxSpellLevelCount}{\value{Char\CharSpellcastingClassTwoAbility Count} - 10}
			\AddDebug{-Max Spell Level set to \arabic{CharSpellcastingClassTwoMaxSpellLevelCount}}
		}{
			\AddDebug{-No adjustment needed}
		}
	}
}

\newcommand{\AddBonusSpellSlotsOne}[2]{
	\AddToCounter{CharBonusSpellSlotsOne#1Count}{#2}}
\newcommand{\AddBonusSpellSlotsTwo}[2]{
	\AddToCounter{CharBonusSpellSlotsTwo#1Count}{#2}}

\newcommand{\AddSpellSlotsOne}[2]{
	\AddToCounter{CharClassSpellSlotsOne#1Count}{#2}}
\newcommand{\AddSpellSlotsTwo}[2]{
	\AddToCounter{CharClassSpellSlotsTwo#1Count}{#2}}
\newcommand{\SetSpellSlotsOne}[2]{
	\SetCounter{CharClassSpellSlotsOne#1Count}{#2}}
\newcommand{\SetSpellSlotsTwo}[2]{
	\SetCounter{CharClassSpellSlotsTwo#1Count}{#2}}
\newcommand{\AddSpellsKnownOne}[2]{
	\AddToCounter{CharSpellsKnownOne#1Count}{#2}}
\newcommand{\AddSpellsKnownTwo}[2]{
	\AddToCounter{CharSpellsKnownTwo#1Count}{#2}}

\newcommand{\AddSpellSlots}[2]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddSpellSlotsOne{#1}{#2}}{\AddSpellSlotsTwo{#1}{#2}}}
\newcommand{\AddSpellsKnown}[2]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddSpellsKnownOne{#1}{#2}}{\AddSpellsKnownTwo{#1}{#2}}}
\newcommand{\AddBonusSpellSlots}[2]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddBonusSpellSlotsOne{#1}{#2}}{\AddBonusSpellSlotsTwo{#1}{#2}}
}

% Range
\NewCounter{CharSpellRangecloseCount}
\NewCounter{CharSpellRangemediumCount}
\NewCounter{CharSpellRangelongCount}
\newcommand{\calculateSpellRange}[1]{
	\SetCounter{CharSpellRangecloseCount}{25+\value{CharCL#1Count}/2*5}
	\SetCounter{CharSpellRangemediumCount}{100+\value{CharCL#1Count}*10}
	\SetCounter{CharSpellRangelongCount}{400+\value{CharCL#1Count}*40}
}

%Magic Specializations
\renewcommand{\do}[1]{
	\expandafter\newcommand\csname CharSpellcastingOneSpecialization#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingOneSpecialization#1Type\endcsname{Specialization}
	\expandafter\newcommand\csname AddSpellcastingOneSpecialization#1\endcsname[2][Specialization]{
		\expandafter\renewcommand\csname CharSpellcastingOneSpecialization#1Type\endcsname{##1}
		\expandafter\renewcommand\csname CharSpellcastingOneSpecialization#1\endcsname{##2}
	}
	\expandafter\newcommand\csname CharSpellcastingTwoSpecialization#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingTwoSpecialization#1Type\endcsname{Specialization}
	\expandafter\newcommand\csname AddSpellcastingTwoSpecialization#1\endcsname[2][Specialization]{
		\expandafter\renewcommand\csname CharSpellcastingTwoSpecialization#1Type\endcsname{##1}
		\expandafter\renewcommand\csname CharSpellcastingTwoSpecialization#1\endcsname{##2}
	}
}\docsvlist{One, Two}
\newcommand\AddSpellcastingOneSpecialization[2][Specialization]{
	\ifthenelse{\equal{\CharSpellcastingOneSpecializationOne}{}}{%
		\AddSpellcastingOneSpecializationOne[#1]{#2}%
	}{%
		\AddSpellcastingOneSpecializationTwo[#1]{#2}%
	}
}
\newcommand\AddSpellcastingTwoSpecialization[2][Specialization]{
	\ifthenelse{\equal{\CharSpellcastingTwoSpecializationOne}{}}{
		\AddSpellcastingTwoSpecializationOne[#1]{#2}
	}{
		\AddSpellcastingTwoSpecializationTwo[#1]{#2}
	}
}


\renewcommand{\do}[1]{
	\expandafter\newcommand\csname CharSpellcastingOneProhibition#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingOneProhibition#1Type\endcsname{Prohibition}
	\expandafter\newcommand\csname AddSpellcastingOneProhibition#1\endcsname[2][Prohibition]{
		\expandafter\renewcommand\csname CharSpellcastingOneProhibition#1Type\endcsname{##1}
		\expandafter\renewcommand\csname CharSpellcastingOneProhibition#1\endcsname{##2}
	}
	\expandafter\newcommand\csname CharSpellcastingTwoProhibition#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingTwoProhibition#1Type\endcsname{Prohibition}
	\expandafter\newcommand\csname AddSpellcastingTwoProhibition#1\endcsname[2][Prohibition]{
		\expandafter\renewcommand\csname CharSpellcastingTwoProhibition#1Type\endcsname{##1}
		\expandafter\renewcommand\csname CharSpellcastingTwoProhibition#1\endcsname{##2}
	}
}\docsvlist{One, Two, Three}
\newcommand\AddSpellcastingOneProhibition[2][Prohibition]{
	\ifthenelse{\equal{\CharSpellcastingOneProhibitionOne}{}}{\AddSpellcastingOneProhibitionOne[#1]{#2}}{
		\ifthenelse{\equal{\CharSpellcastingOneProhibitionTwo}{}}{\AddSpellcastingOneProhibitionTwo[#1]{#2}}{
			\AddSpellcastingOneProhibitionThree[#1]{#2}}}
}
\newcommand\AddSpellcastingTwoProhibition[2][Prohibition]{
	\ifthenelse{\equal{\CharSpellcastingTwoProhibitionOne}{}}{\AddSpellcastingTwoProhibitionOne[#1]{#2}}{
		\ifthenelse{\equal{\CharSpellcastingTwoProhibitionTwo}{}}{\AddSpellcastingTwoProhibitionTwo[#1]{#2}}{
			\AddSpellcastingTwoProhibitionThree[#1]{#2}}}
}

\newcommand{\AddSpellcastingSpecialization}[2][Specialization]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddSpellcastingOneSpecialization[#1]{#2}}{\AddSpellcastingTwoSpecialization[#1]{#2}}
}
\newcommand{\AddSpellcastingProhibition}[2][Prohibition]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddSpellcastingOneProhibition[#1]{#2}}{\AddSpellcastingTwoProhibition[#1]{#2}}
}
%Spellcasting Notes
\renewcommand{\do}[1]{
	\expandafter\edef\csname CharSpellcasting#1NotesList\endcsname{}
	\expandafter\newcommand\csname AddSpellcasting#1Note\endcsname[1]{
		\expandafter\listadd\csname CharSpellcasting#1NotesList\endcsname{##1}
	}
}\docsvlist{One,Two}


%%%%Miscllany%%%%

%% Health Counter
\NewCounter{CharHPCount}
\NewCounter{CharTempHPCount}
\NewCounter{CharHPRollsCount}
\newcommand{\HPRoll}[1]{
	\AddToCounter{CharHPCount}{#1}
	\AddToCounter{CharHPRollsCount}{1}
}

%% Miscellaneous Bonus
\newcommand{\MiscBonus}[3][]{
	\ifthenelse{\equal{#1}{}}{
		\AddToCounter{Char#2MiscCount}{#3}
	}{
		\IfCounter{Char#2#1ModCount}{
			\ifthenelse{\value{Char#2#1ModCount} < #3}{
				\AddToCounter{Char#2MiscCount}{#3 - \value{Char#2#1ModCount}}
				\SetCounter{Char#2#1ModCount}{#3}
			}{}
		}{
			\NewCounter{Char#2#1ModCount}
			\SetCounter{Char#2#1ModCount}{#3}
			\AddToCounter{Char#2MiscCount}{#3}
		}
	}
}
\newcommand{\TmpBonus}[3][]{
	\ifthenelse{\equal{#1}{}}{
		\AddToCounter{Char#2TmpCount}{#3}
	}{
		\IfCounter{Char#2#1ModCount}{
			\ifthenelse{\value{Char#2#1ModCount} < #3}{
				\AddToCounter{Char#2TmpCount}{#3 - \value{Char#2#1ModCount}}
				\SetCounter{Char#2#1ModCount}{#3}
			}{}
		}{
			\NewCounter{Char#2#1ModCount}
			\SetCounter{Char#2#1ModCount}{#3}
			\AddToCounter{Char#2TmpCount}{#3}
		}
	}
}
\newcommand{\EnhancementBonus}[2]{
	\IfCounter{Char#1EnhancementCount}{
		\ifthenelse{\value{Char#1EnhancementCount} < #2}{
			\SetCounter{Char#1EnhancementCount}{#2}
		}{}
	}{
		\NewCounter{Char#1EnhancementCount}
		\SetCounter{Char#1EnhancementCount}{#2}
	}
}

%%Spell Resistance%%
\NewCounter{CharSpellResistanceCount}
\newcommand{\AddSpellResistance}[1]{
	\SetCounter{CharSpellResistanceCount}{\maxof{\value{CharSpellResistanceCount}}{#1}}
}

%%Initiative%%
\NewCounter{CharInitiativeMiscCount}

%%Conditional Modifiers
\edef\CharConditionalSkillsModList{}
\edef\CharConditionalAttackModList{}
\edef\CharConditionalDefModList{}
\newcommand{\AddConditionalSkillMod}[1]{
	\listadd\CharConditionalSkillsModList{#1}}
\newcommand{\AddConditionalAttackMod}[1]{
	\listadd\CharConditionalAttackModList{#1}}
\newcommand{\AddConditionalDefMod}[1]{
	\listadd\CharConditionalDefModList{#1}}

%% Languages
\edef\CharLanguagesList{}
\newcommand{\AddCharLanguage}[1]{
	\listinsert{\CharLanguagesList}{#1}
}

%% XP
\NewCounter{CharXPCount}
\NewCounter{CharNextLevelXPCount}
\NewCounter{XP-Mode}
\newcommand{\CalculateNextLevelXP}{
	\ifthenelse{\value{XP-Mode} = 0}{}{
		\ifthenelse{\value{XP-Mode} = 1}{
			\SetCounter{CharNextLevelXPCount}{0}
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\AddToCounter{CharNextLevelXPCount}{1300}
			\ifthenelse{\value{CharTotalLevelCount} > 1}{
				\AddToCounter{CharNextLevelXPCount}{2000}
			\ifthenelse{\value{CharTotalLevelCount} > 2}{
				\AddToCounter{CharNextLevelXPCount}{2700}
			\ifthenelse{\value{CharTotalLevelCount} > 3}{
				\AddToCounter{CharNextLevelXPCount}{4000}
			\ifthenelse{\value{CharTotalLevelCount} > 4}{
				\AddToCounter{CharNextLevelXPCount}{5000}
			\ifthenelse{\value{CharTotalLevelCount} > 5}{
				\AddToCounter{CharNextLevelXPCount}{8000}
			\ifthenelse{\value{CharTotalLevelCount} > 6}{
				\AddToCounter{CharNextLevelXPCount}{11000}
			\ifthenelse{\value{CharTotalLevelCount} > 7}{
				\AddToCounter{CharNextLevelXPCount}{16000}
			\ifthenelse{\value{CharTotalLevelCount} > 8}{
				\AddToCounter{CharNextLevelXPCount}{21000}
			\ifthenelse{\value{CharTotalLevelCount} > 9}{
				\AddToCounter{CharNextLevelXPCount}{34000}
			\ifthenelse{\value{CharTotalLevelCount} > 10}{
				\AddToCounter{CharNextLevelXPCount}{40000}
			\ifthenelse{\value{CharTotalLevelCount} > 11}{
				\AddToCounter{CharNextLevelXPCount}{65000}
			\ifthenelse{\value{CharTotalLevelCount} > 12}{
				\AddToCounter{CharNextLevelXPCount}{85000}
			\ifthenelse{\value{CharTotalLevelCount} > 13}{
				\AddToCounter{CharNextLevelXPCount}{130000}
			\ifthenelse{\value{CharTotalLevelCount} > 14}{
				\AddToCounter{CharNextLevelXPCount}{175000}
			\ifthenelse{\value{CharTotalLevelCount} > 15}{
				\AddToCounter{CharNextLevelXPCount}{250000}
			\ifthenelse{\value{CharTotalLevelCount} > 16}{
				\AddToCounter{CharNextLevelXPCount}{350000}
			\ifthenelse{\value{CharTotalLevelCount} > 17}{
				\AddToCounter{CharNextLevelXPCount}{500000}
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\AddToCounter{CharNextLevelXPCount}{700000}
			}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
		}{
		\ifthenelse{\value{XP-Mode} = 2}{
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\AddToCounter{CharNextLevelXPCount}{2000}
			\ifthenelse{\value{CharTotalLevelCount} > 1}{
				\AddToCounter{CharNextLevelXPCount}{3000}
			\ifthenelse{\value{CharTotalLevelCount} > 2}{
				\AddToCounter{CharNextLevelXPCount}{4000}
			\ifthenelse{\value{CharTotalLevelCount} > 3}{
				\AddToCounter{CharNextLevelXPCount}{6000}
			\ifthenelse{\value{CharTotalLevelCount} > 4}{
				\AddToCounter{CharNextLevelXPCount}{8000}
			\ifthenelse{\value{CharTotalLevelCount} > 5}{
				\AddToCounter{CharNextLevelXPCount}{12000}
			\ifthenelse{\value{CharTotalLevelCount} > 6}{
				\AddToCounter{CharNextLevelXPCount}{16000}
			\ifthenelse{\value{CharTotalLevelCount} > 7}{
				\AddToCounter{CharNextLevelXPCount}{24000}
			\ifthenelse{\value{CharTotalLevelCount} > 8}{
				\AddToCounter{CharNextLevelXPCount}{30000}
			\ifthenelse{\value{CharTotalLevelCount} > 9}{
				\AddToCounter{CharNextLevelXPCount}{50000}
			\ifthenelse{\value{CharTotalLevelCount} > 10}{
				\AddToCounter{CharNextLevelXPCount}{65000}
			\ifthenelse{\value{CharTotalLevelCount} > 11}{
				\AddToCounter{CharNextLevelXPCount}{95000}
			\ifthenelse{\value{CharTotalLevelCount} > 12}{
				\AddToCounter{CharNextLevelXPCount}{130000}
			\ifthenelse{\value{CharTotalLevelCount} > 13}{
				\AddToCounter{CharNextLevelXPCount}{190000}
			\ifthenelse{\value{CharTotalLevelCount} > 14}{
				\AddToCounter{CharNextLevelXPCount}{255000}
			\ifthenelse{\value{CharTotalLevelCount} > 15}{
				\AddToCounter{CharNextLevelXPCount}{410000}
			\ifthenelse{\value{CharTotalLevelCount} > 16}{
				\AddToCounter{CharNextLevelXPCount}{500000}
			\ifthenelse{\value{CharTotalLevelCount} > 17}{
				\AddToCounter{CharNextLevelXPCount}{750000}
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\AddToCounter{CharNextLevelXPCount}{1050000}
			}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
		}{
		\ifthenelse{\value{XP-Mode} = 3}{
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\AddToCounter{CharNextLevelXPCount}{3000}
			\ifthenelse{\value{CharTotalLevelCount} > 1}{
				\AddToCounter{CharNextLevelXPCount}{4500}
			\ifthenelse{\value{CharTotalLevelCount} > 2}{
				\AddToCounter{CharNextLevelXPCount}{6500}
			\ifthenelse{\value{CharTotalLevelCount} > 3}{
				\AddToCounter{CharNextLevelXPCount}{9000}
			\ifthenelse{\value{CharTotalLevelCount} > 4}{
				\AddToCounter{CharNextLevelXPCount}{11000}
			\ifthenelse{\value{CharTotalLevelCount} > 5}{
				\AddToCounter{CharNextLevelXPCount}{18000}
			\ifthenelse{\value{CharTotalLevelCount} > 6}{
				\AddToCounter{CharNextLevelXPCount}{24000}
			\ifthenelse{\value{CharTotalLevelCount} > 7}{
				\AddToCounter{CharNextLevelXPCount}{38000}
			\ifthenelse{\value{CharTotalLevelCount} > 8}{
				\AddToCounter{CharNextLevelXPCount}{45000}
			\ifthenelse{\value{CharTotalLevelCount} > 9}{
				\AddToCounter{CharNextLevelXPCount}{75000}
			\ifthenelse{\value{CharTotalLevelCount} > 10}{
				\AddToCounter{CharNextLevelXPCount}{95000}
			\ifthenelse{\value{CharTotalLevelCount} > 11}{
				\AddToCounter{CharNextLevelXPCount}{145000}
			\ifthenelse{\value{CharTotalLevelCount} > 12}{
				\AddToCounter{CharNextLevelXPCount}{190000}
			\ifthenelse{\value{CharTotalLevelCount} > 13}{
				\AddToCounter{CharNextLevelXPCount}{290000}
			\ifthenelse{\value{CharTotalLevelCount} > 14}{
				\AddToCounter{CharNextLevelXPCount}{395000}
			\ifthenelse{\value{CharTotalLevelCount} > 15}{
				\AddToCounter{CharNextLevelXPCount}{550000}
			\ifthenelse{\value{CharTotalLevelCount} > 16}{
				\AddToCounter{CharNextLevelXPCount}{800000}
			\ifthenelse{\value{CharTotalLevelCount} > 17}{
				\AddToCounter{CharNextLevelXPCount}{1150000}
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\AddToCounter{CharNextLevelXPCount}{1500000}
			}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
		}}}
	}
}


%%%%Initialization%%%%
\newcommand{\Initialize}{
	\CalculateNextLevelXP
	\ComputeAbilityScores
	% Size bonus to Stealth
	\MiscBonus{Stealth}{\value{CharSizeModCount} * 4}
	% Add Con to HP
	\ifthenelse{\value{HP-Mode} > 0}{\AddToCounter{CharHPCount}{\value{CharConModCount} * \value{CharTotalLevelCount}}}{}
	% Add feats from levels
	\AddToCounter{CharFeatsCount}{(\value{CharTotalLevelCount} + 1) / 2}
	% Add INT to Skill Ranks
	\AddIntToSkillRanks
	\SetCounter{CharIteratedAttacksCount}{(\value{CharBABCount}-1)/5+1}
	\InitializeSpellSlots
	\CalculateLoads
	\CalculateWeights
	\CheckEncumberance
	\SpeedInitialize
	\SetCounter{CharDextoACCount}{\minof{\value{CharDexModCount}}{\value{CharMaxDexBonusCount}}}
	\RunChecks
}

%%Pathfinder System Checks
\newcommand{\RunChecks}{
	\AddDebug{Running checks}
	\AddDebug{Checking HP Rolls}
	%CHECK HP ROLLS
	\ifthenelse{\value{HP-Mode} = 1}{ %Only run if we are in rolls Mode for HP
		\AddDebug{HP Mode == 1. Checking that the number of HP rolls is correct:\\
				  Number of HP rolls: \arabic{CharHPRollsCount}\\
				  Level: \arabic{CharTotalLevelCount}}
		\ifthenelse{\arabic{CharHPRollsCount} < \arabic{CharTotalLevelCount}}{
			\AddDebug{Num HP rolls less than expected}
			\AddWarning{\DoMath{\value{CharTotalLevelCount} - \value{CharHPRollsCount}} HP rolls missing}
		}{
			\ifthenelse{\arabic{CharHPRollsCount} > \arabic{CharTotalLevelCount}}{
				\AddDebug{Num HP rolls more than expected}
				\AddWarning{\DoMath{\value{CharHPRollsCount} - \value{CharTotalLevelCount}} Extra HP rolls}
			}{\AddDebug{Num HP rolls is correct}}
		}
	}{\AddDebug{HP Mode != 1. No need to check HP rolls}}
	%CHECK SKILL RANKS
	\ifthenelse{\value{AutoSkillRanks-Mode} = 1}{
		\AddDebug{Checking Skill Ranks}
		\ifthenelse{\value{CharSpareSkillRanksCount} > 0}{
			\AddWarning{Character has \arabic{CharSpareSkillRanksCount} Skill Ranks left to spend}
		}{\ifthenelse{\value{CharSpareSkillRanksCount} < 0}{
			\AddWarning{Character has spent \DoMath{-\value{CharSpareSkillRanksCount}} too many Skill Ranks}
		}{}}
	}{}
	%CHECK FEATS
	\ifthenelse{\value{CountFeats-Mode} = 1}{
		\AddDebug{Checking Feats}
		\ifthenelse{\value{CharBonusFeatsCount} < 0}{
			\AddWarning{\DoMath{-\value{CharBonusFeatsCount}} too many Bonus Feats selected}
		}{
		\ifthenelse{\value{CharBonusFeatsCount} > 0}{
			\AddWarning{\arabic{CharBonusFeatsCount} Bonus Feats left to select}
		}{}}
		\ifthenelse{\value{CharFeatsCount} < 0}{
			\AddWarning{\DoMath{-\value{CharFeatsCount}} too many Feats selected}
		}{
		\ifthenelse{\value{CharFeatsCount} > 0}{
			\AddWarning{\arabic{CharFeatsCount} Feats left to select}
		}{}}
	}{}
	%CHECK FAVORED CLASS LEVELS
	\ifthenelse{\value{CheckFavoredClass-Mode} = 1}{
		\AddDebug{Checking Favored Class Levels}
		\ifthenelse{\value{CharSpareFavoredClassLevelsCount} < 0}{
			\AddWarning{\DoMath{-\value{CharSpareFavoredClassLevelsCount}} too many favored class bonuses assigned}
		}{
		\ifthenelse{\value{CharSpareFavoredClassLevelsCount} > 0}{
			\AddWarning{\arabic{CharSpareFavoredClassLevelsCount} favored class bonuses left to assign}
		}{}}
	}{}
}

%Functions for adding class specific checks and warnings:
\NewDocumentCommand{\CheckRightNumberSelected}{m m o}{
	\gappto{\RunChecks}{

		\ifthenelse{\value{Char#1Count} < 0}{
			\AddWarning{\DoMath{-\value{Char#1Count}} too many selections made for #2}
		}{
		\ifthenelse{\value{Char#1Count} > 0}{
			\AddWarning{Make \arabic{Char#1Count} more selections for #2.\IfNoValueF{#3}{ Use the function \texttt{\textbackslash#3}} to add one.}
		}{}}
	}
}

\NewDocumentCommand{\CheckIsSelected}{m m o}{
	\gappto{\RunChecks}{
		\ifcsempty{Char#1}{%
			\AddWarning{No #2 is selected.\IfNoValueF{#3}{ Use the function \texttt{\textbackslash#3}} to select it.}%
		}{}
	}
}