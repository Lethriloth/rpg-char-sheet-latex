\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{D20-Common}[2020/05/06 Common system features between D\&D 3.5 and Pathfinder for rpgcharsheet2.cls]

%% Toggles %%
\NewCounter{AutoSkillRanks-Mode}

%% Ability Scores %%
\edef\AbilityScoresList{}
\forcsvlist{\listadd\AbilityScoresList}{Str,Dex,Con,Int,Wis,Cha}

\renewcommand{\do}[1]{
	\NewCounter{Char#1Count}
	\NewCounter{Char#1BaseCount}
	\NewCounter{Char#1EnhancementCount}
	\NewCounter{Char#1MiscCount}
	\NewCounter{Char#1TmpCount}
	\NewCounter{Char#1ModCount}
	\expandafter\newcommand\csname SetChar#1\endcsname[1]{
		\SetCounter{Char#1BaseCount}{##1}
	}
}\dolistloop{\AbilityScoresList}
\newcommand{\ComputeAbilityScores}{
	\renewcommand{\do}[1]{
		\SetCounter{Char##1Count}{\value{Char##1BaseCount}}
		\AddToCounter{Char##1Count}{\value{Char##1EnhancementCount}}
		\AddToCounter{Char##1Count}{\value{Char##1MiscCount}}
		\AddToCounter{Char##1Count}{\value{Char##1TmpCount}}
		\SetCounter{Char##1ModCount}{0}
		\ifthenelse{10 > \value{Char##1Count}}{
			\AddToCounter{Char##1Count}{-1}
			\SetCounter{Char##1ModCount}{(\value{Char##1Count} - 10) / 2}
			\AddToCounter{Char##1Count}{1}
		}{
			\SetCounter{Char##1ModCount}{(\value{Char##1Count}-10)/2}
		}
	}\dolistloop{\AbilityScoresList}
}

%% Armor Class %%
\NewCounter{CharArmorBonusCount}
\newcommand{\AddArmorBonus}[1]{\ifthenelse{\value{CharArmorBonusCount}<#1}{\SetCounter{CharArmorBonusCount}{#1}}{}}
\NewCounter{CharShieldBonusCount}
\newcommand{\AddShieldBonus}[1]{\ifthenelse{\value{CharShieldBonusCount}<#1}{\SetCounter{CharShieldBonusCount}{#1}}{}}
\NewCounter{CharNaturalArmorModCount}
\newcommand{\AddNaturalArmorBonus}[1]{\ifthenelse{\value{CharNaturalArmorModCount}<#1}{\Setcounter{CharNaturalArmorModCount}{#1}}{}}
\NewCounter{CharDodgeModCount}
\newcommand{\AddDodgeBonus}[1]{\AddToCounter{CharDodgeModCount}{#1}}
\NewCounter{CharSizeModCount}
\NewCounter{CharDeflectionModCount}
\newcommand{\AddDeflectionBonus}[1]{\ifthenelse{\value{Chardeflectionmodcount}<#1}{\Setcounter{Chardeflectionmodcount}{#1}}{}}
\NewCounter{CharACMiscCount}\NewCounter{CharACTmpCount}
\NewCounter{CharTouchACMiscCount}\NewCounter{CharTouchACTmpCount}
\NewCounter{CharFlatFootedACMiscCount}\NewCounter{CharFlatFootedACTmpCount}

%% Saving Throws %%
\renewcommand{\do}[1]{
	\NewCounter{Char#1Count}
	\NewCounter{Char#1MiscCount}
	\NewCounter{Char#1TmpCount}
}\docsvlist{Fortitude, Reflex, Will}
\NewCounter{CharResistanceModCount}
\newcommand{\AddResistanceBonus}[1]{\ifthenelse{\value{CharResistanceModCount}<#1}{\SetCounter{CharResistanceModCount}{#1}}{}}

%% Special Defenses %%
\edef\CharResistancesList{}
\newcommand{\AddResistance}[2]{
	\ifinlist{#1}{\CharImmunitiesList}{}{
		\ifinlist{#1}{\CharResistancesList}{}{
			\NewCounter{CharResist#1Count}
			\listadd{\CharResistancesList}{#1}
		}
		\ifthenelse{\value{CharResist#1Count} < #2}{
			\SetCounter{CharResist#1Count}{#2}
		}{}
	}
}
\NewDocumentCommand{\PrintResistances}{O{, } O{}}{%
	\edef\@PrintList{}%
	\edef\@@PrintList{}%
	\edef\@PrintListlast{}
	\renewcommand{\do}[1]{%
		\ifthenelse{\value{CharResist##1Count} = 0}{}{%
			\let\@@PrintList\@PrintList%
			\edef\@PrintListlast{Resist ##1 \arabic{CharResist##1Count}}%
			\listadd{\@PrintList}{Resist ##1 \arabic{CharResist##1Count}}%
		}
	}\dolistloop{\CharResistancesList}%
	\renewcommand{\do}[1]{%
		##1#1%
	}\dolistloop{\@@PrintList}%
	\ifthenelse{\equal\@@PrintList{}}{}{#2}\@PrintListlast%
}
\edef\CharImmunitiesList{}
\newcommand{\AddImmunity}[1]{
	\ifinlist{#1}{\CharImmunitiesList}{}{
		\listinsert{\CharImmunitiesList}{#1}
		\ifinlist{#1}{\CharResistancesList}{
			\SetCounter{CharResist#1Count}{0}
		}{}
	}
}
\edef\CharDRTypesList{}
\newcommand{\AddDR}[2]{
	\ifinlist{#1}{\CharDRTypesList}{}{
		\NewCounter{CharDR/#1Count}
		\listadd{\CharDRTypesList}{#1}
	}
	\ifthenelse{\value{CharDR/#1Count} < #2}{
		\SetCounter{CharDR/#1Count}{#2}
	}{}
}
\NewDocumentCommand{\PrintDR}{O{, } O{}}{%
	\edef\@PrintList{}%
	\edef\@@PrintList{}%
	\edef\@PrintListlast{}
	\renewcommand{\do}[1]{%
		\let\@@PrintList\@PrintList%
		\edef\@PrintListlast{DR \arabic{CharDR/##1Count}/##1}%
		\listadd{\@PrintList}{DR \arabic{CharDR/##1Count}/##1}%
	}\dolistloop{\CharDRTypesList}%
	\renewcommand{\do}[1]{%
		##1#1%
	}\dolistloop{\@@PrintList}%
	\ifthenelse{\equal\@@PrintList{}}{}{#2}\@PrintListlast%
}

\edef\CharSpecialDefensesList{}
\newcommand{\AddSpecialDefense}[1]{
	\listinsert{\CharSpecialDefensesList}{#1}
}

%% BAB, attacks, combat maneuvers %%
\NewCounter{CharBABCount}
\NewCounter{CharIteratedAttacksCount}
\NewCounter{CharIteratedAttackBonusCount}
\NewCounter{CharExtraAttacksCount}

%% Speed
\NewCounter{CharSpeedReducibleBool}
\SetCounter{CharSpeedReducibleBool}{1}
\renewcommand{\do}[1]{
	\NewCounter{Char#1SpeedCount}
	\NewCounter{Char#1SpeedMiscCount}
}
\docsvlist{Base, Fly, Swim, Burrow, Climb}
\newcommand{\SetCharSpeed}[1]{
	\SetCounter{CharBaseSpeedCount}{#1}
}

\newcommand{\AddClimbSpeed}[1]{
	\SetCounter{CharClimbSpeedCount}{#1}
}
\newcommand{\AddSwimSpeed}[1]{
	\SetCounter{CharSwimSpeedCount}{#1}
}
\newcommand{\AddBurrowSpeed}[1]{
	\SetCounter{CharBurrowSpeedCount}{#1}
}
\NewCounter{CharSpeedMiscCount}
\newcommand{\SpeedInitialize}{
	\renewcommand{\do}[1]{
		\ifthenelse{\value{Char##1SpeedCount}=0}{
		}{
			\AddToCounter{Char##1SpeedCount}{\value{CharSpeedMiscCount}}
		}
		\AddToCounter{Char##1SpeedCount}{\value{Char##1SpeedMiscCount}}
	}
	\docsvlist{Base, Fly, Swim, Burrow, Climb}
}

%%%% Feats, Class & Race Features %%%%

\edef\CharFeatsList{}
\edef\CharRaceFeaturesList{}
\edef\CharClassFeaturesList{}
\edef\CharLimitedUseList{}
\NewCounter{CharFeatsCount}
\NewCounter{CharBonusFeatsCount}
\NewCounter{CountFeats-Mode}

\NewDocumentCommand{\AddFeat}{s s O{1} m}{
	\IfBooleanTF #1 {
		\IfBooleanF #2 {
			\AddToCounter{CharBonusFeatsCount}{-#3}
		}
		\listadd\CharFeatsList{#4\textsuperscript{B} \ifthenelse{#3 = 1}{}{$\times#3$}}
	}{
		\listadd\CharFeatsList{#4 \ifthenelse{#3 = 1}{}{$\times#3$}}
		\AddToCounter{CharFeatsCount}{-#3}
	}
}
\newcommand\AddClassFeature[1]{\listadd\CharClassFeaturesList{#1}}
\newcommand\AddRaceFeature[1]{\listadd\CharRaceFeaturesList{#1}}
\newcommand\AddLimitedUse[2]{\listadd\CharLimitedUseList{#1 & #2}}

\newcommand{\datafolder}{.}
\NewCounter{CharTotalLevelCount}
\SetCounter{CharTotalLevelCount}{0}
\NewCounter{CharSpareSkillRanksCount}
\NewCounter{HP-Mode}
\edef\CharClassesList{}

\ProvideDocumentCommand{\ImportCharClassCommon}{m m}{%
	\listadd{\CharClassesList}{#1}
	\if\csname#1BAB\endcsname g
	\AddToCounter{CharBABCount}{#2}
	\fi
	\if\csname#1BAB\endcsname a
	\AddToCounter{CharBABCount}{#2 * 3 / 4}
	\fi
	\if\csname#1BAB\endcsname p
	\AddToCounter{CharBABCount}{#2 / 2}
	\fi
	\if\csname#1Fort\endcsname g
	\AddToCounter{CharFortitudeCount}{2 + #2 / 2}
	\fi
	\if\csname#1Fort\endcsname p
	\AddToCounter{CharFortitudeCount}{#2 / 3}
	\fi
	\if\csname#1Ref\endcsname g
	\AddToCounter{CharReflexCount}{2 + #2 / 2}
	\fi
	\if\csname#1Ref\endcsname p
	\AddToCounter{CharReflexCount}{#2 / 3}
	\fi
	\if\csname#1Will\endcsname g
	\AddToCounter{CharWillCount}{2 + #2 / 2}
	\fi
	\if\csname#1Will\endcsname p
	\AddToCounter{CharWillCount}{#2 / 3}
	\fi
	\SetCounter{Char#1ClassLevelCount}{#2}
	\ifthenelse{\value{CharTotalLevelCount} = 0}{
		\ifthenelse{\value{HP-Mode} = 1}{
			\AddToCounter{CharHPCount}{\value{#1HitDieSize}}
			\AddToCounter{CharHPRollsCount}{1}
		}{
			\ifthenelse{\value{HP-Mode} = 2}{
				\AddToCounter{CharHPCount}{\value{#1HitDieSize} + (\value{#1HitDieSize} + 1) * (#2 - 1) / 2}
		}{}}
	}{
		\ifthenelse{\value{HP-Mode} = 2}{
			\AddToCounter{CharHPCount}{(\value{#1HitDieSize} + 1) * #2 / 2}
		}{}
	}
	\AddToCounter{CharTotalLevelCount}{#2}
	\forlistcsloop{\IsClassSkill}{#1ClassSkillsList}
	\csname Add#1ClassFeatures\endcsname{#2}
}

%% Race Importing %%
\NewDocumentCommand{\ImportCharRace}{m}{
	\input{\datafolder/Races/#1.tex}
}

%%%% Skills %%%%

% Define Skills lists
\edef\SkillsList{}
\edef\KnowledgeSkillsList{}
\forcsvlist{\listadd\KnowledgeSkillsList}{KnowledgeArcana, KnowledgeDungeoneering, KnowledgeEngineering, KnowledgeGeography, KnowledgeHistory, KnowledgeLocal, KnowledgeNature, KnowledgeNobility, KnowledgePlanes, KnowledgeReligion}
\forlistloop{\listadd\SkillsList}{\KnowledgeSkillsList}

%Define lists for Armor check penalty and trained-only
\edef\ArmorCheckSkillsList{}
\edef\TrainedSkillsList{}
\forlistloop{\listadd\TrainedSkillsList}{\KnowledgeSkillsList}

% Default "Optional" for Craft, Profession, Perform categories
\renewcommand\do[1]{
	\expandafter\newcommand\csname Char#1Name\endcsname{Optional}
}\docsvlist{CraftOne,CraftTwo,CraftThree,ProfessionOne,ProfessionTwo,PerformOne,PerformTwo}

%adds Skill to Class Skill list
\newcommand\IsClassSkill[1]{
	\ifthenelse{\equal{#1}{KnowledgeAll}}{
		\forlistloop{\IsClassSkill}{\KnowledgeSkillsList}
	}{\ifthenelse{\equal{#1}{Craft}}{
			\forcsvlist{\IsClassSkill}{CraftOne, CraftTwo, CraftThree}
		}{\ifthenelse{\equal{#1}{Perform}}{
				\forcsvlist{\IsClassSkill}{PerformOne, PerformTwo}
			}{\ifthenelse{\equal{#1}{Profession}}{
					\forcsvlist{\IsClassSkill}{ProfessionOne, ProfessionTwo}
				}{
					\SetCounter{Char#1ClassSkillBool}{1}
	}}}}
}

\NewCounter{CharBonusSkillRanksPerLevelCount}


%%%% Character Name & Description %%%%

\newcommand\CharName{}
\newcommand\CharLevel{}
\newcommand\CharPlayerName{}
\newcommand\CharAlignment{}
\newcommand\CharReligion{}
\newcommand\CharRace{}
\newcommand\CharHomeland{}
\newcommand\CharSize{}
\newcommand\CharGender{}
\newcommand\CharAge{}
\newcommand\CharHeight{}
\newcommand\CharWeight{}
\newcommand\CharHair{}
\newcommand\CharEyes{}

%%%% Inventory %%%%

%% Gear %%
\edef\CharGearList{}
\newlength{\GearItemWeight}
\NewDocumentCommand{\AddGearItem}{s O{1} m m}{%
	\IfBooleanTF #1 {%
		\AddToLength{\ExtradimensionalGearWeight}{#2pt * #4}%
		\listadd{\CharGearList}{#3\ifnum #2 > 1{ (#2)}\fi &\SetLength{\GearItemWeight}{#2pt * #4} *\PrintWeight{\GearItemWeight}~lbs.}
	}{%
		\AddToLength{\TotalGearWeight}{#2pt * #4}%
		\listadd{\CharGearList}{#3\ifnum #2 > 1{ (#2)}\fi & \SetLength{\GearItemWeight}{#2pt * #4}\PrintWeight{\GearItemWeight}~lbs.}
	}
}
\newcommand\AddGearSubItem[3][1]{
	\listadd{\CharGearList}{---#2\ifnum #1 > 1{ (#1)} & (\DoMath{#1 * #3}~lbs.) \tabularnewline}
}
%% Stored Items %%
\edef\StoredItemsList{}
\newcommand\AddStoredItem[3][1]{
	\AddToLength{\TotalStoredWeight}{#1 pt * #3}%
	\listadd{\StoredItemsList}{#2\ifnum #1 > 1{ (#1)}\fi & \DoMath{#1 * #3}~lbs.}
}
\newcommand\AddStoredSubItem[3][1]{
	\listadd{\StoredItemsList}{---#2\ifnum #1 > 1{ (#1)} & (\DoMath{#1 * #3}~lbs.) \tabularnewline}
}

%% Weapons %%
\renewcommand\do[1]{%
	\expandafter\newcommand\csname CharWeapon#1Name\endcsname{}%
	\expandafter\newcommand\csname CharWeapon#1AttackBonus\endcsname{}%
	\NewCounter{CharWeapon#1MiscCount}%
	\expandafter\newcommand\csname CharWeapon#1Damage\endcsname{}%
	\expandafter\newcommand\csname CharWeapon#1Critical\endcsname{}%
	\expandafter\newcommand\csname CharWeapon#1Type\endcsname{}%
	\expandafter\newcommand\csname CharWeapon#1Range\endcsname{}%
	\expandafter\newcommand\csname CharWeapon#1Notes\endcsname{}%
	\expandafter\newcommand\csname AddWeapon#1\endcsname[7]{%
		\expandafter\renewcommand\csname CharWeapon#1Name\endcsname{##1}
		\expandafter\renewcommand\csname CharWeapon#1AttackBonus\endcsname{##2}
		\expandafter\renewcommand\csname CharWeapon#1Damage\endcsname{##3}
		\expandafter\renewcommand\csname CharWeapon#1Critical\endcsname{##4}
		\expandafter\renewcommand\csname CharWeapon#1Type\endcsname{##5}
		\expandafter\renewcommand\csname CharWeapon#1Range\endcsname{##6}
		\expandafter\renewcommand\csname CharWeapon#1Notes\endcsname{##7}
	}
	\expandafter\newcommand\csname AddAutoWeapon#1\endcsname[9][0]{%[##1=Extra attacks]{##2=Name}{##3=attack bonus modifier}{##4=damage}{##5=crit}{##6=Damage type}{##7=Melee or Ranged}{##8=Notes}{##9=Ability score to use for attack bonus}
		\expandafter\renewcommand\csname CharWeapon#1Name\endcsname{##2}
		\expandafter\renewcommand\csname CharWeapon#1AttackBonus\endcsname{%
			\ifthenelse{\equal{\lowercase{##7}}{\lowercase{Melee}}}{%
				\AddDebug{Weapon #1 is a Melee Weapon}
				\SetCounter{CharIteratedAttackBonusCount}{%
					\value{CharBABCount}+
					\value{Char##9ModCount}+%Ability score Mod
					\value{CharSizeModCount}+
					\value{CharMeleeMiscCount}+
					\value{CharMeleeTmpCount}+
					\value{CharWeapon#1MiscCount}+
					##3
				}
			}{%
				\AddDebug{Weapon #1 is a Ranged Weapon}
				\SetCounter{CharIteratedAttackBonusCount}{%
					\value{CharBABCount}+
					\value{Char##9ModCount}+%Ability score Mod
					\value{CharSizeModCount}+
					\value{CharRangedMiscCount}+
					\value{CharRangedTmpCount}+
					\value{CharWeapon#1MiscCount}+
					##3
				}
			}
			\ForLoop{@i}{0}{\value{@i}<##1}{%
				\ifthenelse{\value{@i}=0}{}{/}%
				\PlusMinus{CharIteratedAttackBonusCount}%
			}%
			\ForLoop{@i}{0}{\value{@i}<\value{CharIteratedAttacksCount}}{%
				\ifthenelse{\value{@i}=0}{\ifthenelse{##1 = 0}{}{/}}{/}%
				\PlusMinus{CharIteratedAttackBonusCount}%
				\SetCounter{CharIteratedAttackBonusCount}{\value{CharIteratedAttackBonusCount}-5}%
			}%
		}%
		\expandafter\renewcommand\csname CharWeapon#1Damage\endcsname{##4}%
		\expandafter\renewcommand\csname CharWeapon#1Critical\endcsname{##5}%
		\expandafter\renewcommand\csname CharWeapon#1Type\endcsname{##6}
		\expandafter\renewcommand\csname CharWeapon#1Range\endcsname{##7}
		\expandafter\renewcommand\csname CharWeapon#1Notes\endcsname{##8}
	}
}
\docsvlist{One,Two,Three}

\newcommand\AddWeapon[7]{%
	\ifthenelse{\equal{\CharWeaponOneName}{}}
	{\AddWeaponOne{#1}{#2}{#3}{#4}{#5}{#6}{#7}}
	{\ifthenelse{\equal{\CharWeaponTwoName}{}}
		{\AddWeaponTwo{#1}{#2}{#3}{#4}{#5}{#6}{#7}}
		{\ifthenelse{\equal{\CharWeaponThreeName}{}}
			{\AddWeaponThree{#1}{#2}{#3}{#4}{#5}{#6}{#7}}
			{\AddWeaponOne{#1}{#2}{#3}{#4}{#5}{#6}{#7}
}}}}

\newcommand\AddAutoWeapon[9][0]{
	\ifthenelse{\equal{\CharWeaponOneName}{}}
	{\AddAutoWeaponOne[#1]{#2}{#3}{#4}{#5}{#6}{#7}{#8}{#9}}
	{\ifthenelse{\equal{\CharWeaponTwoName}{}}
		{\AddAutoWeaponTwo[#1]{#2}{#3}{#4}{#5}{#6}{#7}{#8}{#9}}
		{\ifthenelse{\equal{\CharWeaponThreeName}{}}
			{\AddAutoWeaponThree[#1]{#2}{#3}{#4}{#5}{#6}{#7}{#8}{#9}}
			{\AddAutoWeaponOne[#1]{#2}{#3}{#4}{#5}{#6}{#7}{#8}{#9}
}}}}

%% Armor and Shield %%
%Initialize Armor Item variables
\NewCounter{TotalACItemsSpellFailure}
\NewCounter{CharMaxDexArmorCount}
\SetCounter{CharMaxDexArmorCount}{100}
\NewCounter{CharMaxDexShieldCount}
\SetCounter{CharMaxDexShieldCount}{100}
\NewCounter{CharMaxDexBonusCount}
\SetCounter{CharMaxDexBonusCount}{100}
\NewCounter{CharDextoACCount}
\newcommand{\CharArmorName}{}
\newcommand{\CharArmorNotes}{}
\newcommand{\CharArmorType}{}
\NewCounter{CharArmorArmorCheckPenaltyCount}
\NewCounter{CharArmorSpellFailureCount}
\newcommand{\CharShieldName}{}
\newcommand{\CharShieldNotes}{}
\NewCounter{CharShieldArmorCheckPenaltyCount}
\NewCounter{CharShieldSpellFailureCount}

%Command to add an armor item
\newcommand\AddArmor[9]{
	\renewcommand{\CharArmorName}{#1}
	\AddArmorBonus{#2}
	\ifthenelse{\equal{#3}{}}{}{\SetCounter{CharMaxDexArmorCount}{#3}}
	\ifthenelse{\value{CharMaxDexArmorCount}<\value{CharMaxDexBonusCount}}
	{\SetCounter{CharMaxDexBonusCount}{\value{CharMaxDexArmorCount}}}{}
	\SetCounter{CharArmorArmorCheckPenaltyCount}{#4}
	\renewcommand{\do}[1]{
		\MiscBonus{##1}{#4}
	}\dolistloop{\ArmorCheckSkillsList}
	\AddToCounter{CharArmorSpellFailureCount}{#5}
	\AddToCounter{TotalACItemsSpellFailure}{#5}
	\renewcommand{\CharArmorType}{#6}
	\renewcommand{\CharArmorNotes}{#8}
	\AddBodyItem{#1}{#9}{#7}
}

%Command to add a shield item
\newcommand\AddShield[7]{
	\AddShieldBonus{#2}
	\ifthenelse{\equal{#3}{}}{}{\SetCounter{CharMaxDexShieldCount}{#3}}
	\ifthenelse{\value{CharMaxDexShieldCount}<\value{CharMaxDexBonusCount}}
	{\SetCounter{CharMaxDexBonusCount}{\value{CharMaxDexShieldCount}}}{}
	\SetCounter{CharShieldArmorCheckPenaltyCount}{#4}
	\renewcommand{\do}[1]{
		\MiscBonus{##1}{#4}
	}\dolistloop{\ArmorCheckSkillsList}
	\SetCounter{CharShieldSpellFailureCount}{#5}
	\AddToCounter{TotalACItemsSpellFailure}{#5}
	\renewcommand{\CharShieldNotes}{#7}
	\renewcommand{\CharShieldName}{#1}
	\AddGearItem{#1}{#6}
}

%% Magic Item Slots %%
\let\ItemSlotNamesList\@empty
\forcsvlist{\listadd{\ItemSlotNamesList}}{Belt, Body, Chest, Eyes, Feet, Hands, Head, Neck, RingOne, RingTwo, Shoulders, Wrists}
\renewcommand{\do}[1]{
	\expandafter\newcommand\csname ItemInSlot#1Name\endcsname{}
	\expandafter\newcommand\csname ItemInSlot#1Description\endcsname{}
	\expandafter\newlength\csname ItemInSlot#1Weight\endcsname
	\expandafter\newcommand \csname Add#1Item\endcsname[3]{
		\expandafter\renewcommand\csname ItemInSlot#1Name\endcsname{\itshape ##1}
		\expandafter\renewcommand\csname ItemInSlot#1Description\endcsname{##2}
		\SetLength{\csname ItemInSlot#1Weight\endcsname}{##3pt}
		\AddToLength{\WornItemsWeight}{##3pt}
	}
}\dolistloop{\ItemSlotNamesList}
\newcommand{\AddRingItem}[3]{
	\ifthenelse{\not\equal{\ItemInSlotRingOneName}{}\and\equal{\ItemInSlotRingTwoName}{}}
	{\AddRingTwoItem{#1}{#2}{#3}}
	{\AddRingOneItem{#1}{#2}{#3}}}

%% Money %%
\renewcommand{\do}[1]{
	\NewCounter{Char#1Count}
	\NewCounter{Char#1WeightlessCount}
	\NewCounter{Char#1StoredCount}
	\expandafter\newcommand\csname AddStored#1\endcsname[1]{\AddToCounter{Char#1StoredCount}{##1}}
	\expandafter\NewDocumentCommand\csname Add#1\endcsname{s m}{
		\IfBooleanTF ##1 {\AddToCounter{Char#1WeightlessCount}{##2}} {\AddToCounter{Char#1Count}{##2}}
	}
}\docsvlist{Platinum, Gold, Silver, Copper}

%% Weight Carried %%
\newlength{\TotalGearWeight}
\newlength{\TotalStoredWeight}
\newlength{\WornItemsWeight}
\newlength{\CurrencyWeight}
\newlength{\TotalCarriedWeight}
\newlength{\ExtradimensionalGearWeight}
\newlength{\ExtradimensionalCurrencyWeight}
\newlength{\TotalExtradimensionalWeight}
\newlength{\ExtradimensionalOverload}
\newcommand{\CalculateWeights}{
	\SetLength{\CurrencyWeight}{.02pt*\value{CharPlatinumCount}+.02pt*\value{CharGoldCount}+.02pt*\value{CharSilverCount}+.02pt*\value{CharCopperCount}}
	\SetLength{\ExtradimensionalCurrencyWeight}{.02pt*\value{CharPlatinumWeightlessCount}+.02pt*\value{CharGoldWeightlessCount}+.02pt*\value{CharSilverWeightlessCount}+.02pt*\value{CharCopperWeightlessCount}}
	\SetLength{\TotalExtradimensionalWeight}{\ExtradimensionalGearWeight+\ExtradimensionalCurrencyWeight}
	\SetLength{\ExtradimensionalOverload}{\TotalExtradimensionalWeight - \value{CharExtradimensionalCapacityCount}pt}
	\ifthenelse{\ExtradimensionalOverload > 0}{
		\AddToLength{\TotalGearWeight}{\ExtradimensionalOverload}
	}{}
	\SetLength{\TotalCarriedWeight}{\TotalGearWeight+\CurrencyWeight+\WornItemsWeight}
}

%% Carrying Capacity %%
\NewCounter{CharHeavyLoadCount}
\NewCounter{CharMediumLoadCount}
\NewCounter{CharLightLoadCount}
\NewCounter{CharStrCarryingMiscCount}
\NewCounter{CharStrCarryingCount}
\NewCounter{CharLiftLoadCount}
\NewCounter{CharDragLoadCount}
\NewCounter{CharExtradimensionalCapacityCount}

\NewCounter{CarryingCapacityMultiplierCount}
\SetCounter{CarryingCapacityMultiplierCount}{1}
\newcommand\SetHeavyLoad[1]{%
	\ifthenelse{\value{#1}>19}{%
		\SetCounter{@j}{\value{#1}-10}%
		\SetHeavyLoad{@j}
		\AddToCounter{@i}{\value{@i}}
		\AddToCounter{@i}{\value{@i}}
	}{%
		\SetCounter{@j}{\value{#1}}
		\ForLoop{@k}{0}{\value{@k}<10}{
			\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{10}\AddToCounter{@j}{-1}}{}}
		\ForLoop{@k}{0}{\value{@k}<2}{
			\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{15}\AddToCounter{@j}{-1}}{}}
		\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{20}\AddToCounter{@j}{-1}}{}
		\ForLoop{@k}{0}{\value{@k}<2}{
			\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{25}\AddToCounter{@j}{-1}}{}}
		\ForLoop{@k}{0}{\value{@k}<2}{
			\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{30}\AddToCounter{@j}{-1}}{}}
		\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{40}\AddToCounter{@j}{-1}}{}
		\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{50}\AddToCounter{@j}{-1}}{}
	}
}
\newcommand\CalculateLoads{
	\SetCounter{@i}{0}
	\SetCounter{@j}{\value{CharStrCount}+\value{CharStrCarryingMiscCount}}
	\SetHeavyLoad{@j}
	\SetCounter{CharHeavyLoadCount}{\value{@i}*\value{CarryingCapacityMultiplierCount}}
	\SetCounter{CharMediumLoadCount}{\value{CharHeavyLoadCount}*2/3}
	\SetCounter{CharLightLoadCount}{\value{CharHeavyLoadCount}/3}
	\SetCounter{CharLiftLoadCount}{\value{CharHeavyLoadCount}*2}
	\SetCounter{CharDragLoadCount}{\value{CharHeavyLoadCount}*5}
}

\NewCounter{CharEncumberanceLevelCount}
\NewCounter{CharEncumberedMaxDexCount}
\SetCounter{CharEncumberedMaxDexCount}{100}
\NewCounter{CharEncumberedArmorCheckPenaltyCount}
\NewCounter{CharEncumberedSpeedReducedBool}
\newlength\loadaslength

\newcommand\CheckEncumberance{
	\SetLength\loadaslength{1pt*\value{CharLightLoadCount}}
	\ifthenelse{\lengthtest{\TotalCarriedWeight<\loadaslength}}{
		\SetCounter{CharEncumberanceLevelCount}{1}}{
		\SetLength\loadaslength{1pt*\value{CharMediumLoadCount}}
		\ifthenelse{\lengthtest{\TotalCarriedWeight<\loadaslength}}{
			\SetCounter{CharEncumberanceLevelCount}{2}
			\SetCounter{CharEncumberedArmorCheckPenaltyCount}{-3}
			\SetCounter{CharEncumberedMaxDexCount}{3}
			\SetCounter{CharEncumberedSpeedReducedBool}{\value{CharSpeedReducibleBool}}}{
			\SetLength\loadaslength{1pt*\value{CharHeavyLoadCount}}
			\ifthenelse{\lengthtest{\TotalCarriedWeight<\loadaslength}}{
				\SetCounter{CharEncumberanceLevelCount}{3}
				\SetCounter{CharEncumberedArmorCheckPenaltyCount}{-6}
				\SetCounter{CharEncumberedMaxDexCount}{1}
				\SetCounter{CharEncumberedSpeedReducedBool}{\value{CharSpeedReducibleBool}}}{
				\SetCounter{CharEncumberanceLevelCount}{4}
				\SetCounter{CharEncumberedArmorCheckPenaltyCount}{-10}
				\SetCounter{CharEncumberedMaxDexCount}{0}
				\SetCounter{CharEncumberedSpeedReducedBool}{\value{CharSpeedReducibleBool}}}}}
	\ifthenelse{\value{CharEncumberedMaxDexCount}<\value{CharMaxDexBonusCount}}
	{\SetCounter{CharMaxDexBonusCount}{\value{CharEncumberedMaxDexCount}}}{}
	\renewcommand{\do}[1]{
		\MiscBonus{##1}{\value{CharEncumberedArmorCheckPenaltyCount}}
	}\dolistloop{\ArmorCheckSkillsList}
}

\newcommand\EncumberanceBox[1]{
	\ifthenelse{#1 = \value{CharEncumberanceLevelCount}}{$\cancel{\square}$}{$\square$}
}

%%%% Spells %%%%

%% Initialize variables %%

\renewcommand{\do}[1]{
	\expandafter\newcommand\csname CharSpellcastingClass#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingClass#1Ability\endcsname{}
	\NewCounter{CharCL#1Count}
	\NewCounter{CharSpellcastingClass#1MaxSpellLevelCount}
	\SetCounter{CharSpellcastingClass#1MaxSpellLevelCount}{-1}
	\NewCounter{CharSpellcasting#1HasCantrips}
	\SetCounter{CharSpellcasting#1HasCantrips}{0}
	\expandafter\NewDocumentCommand\csname NewSpellcasting#1\endcsname{s O{9} m m m}{
		\IfBooleanF ##1 {\SetCounter{CharSpellcasting#1HasCantrips}{1}}
		\SetCounter{CharSpellcastingClass#1MaxSpellLevelCount}{##2}
		\expandafter\renewcommand\csname CharSpellcastingClass#1\endcsname{##3}
		\expandafter\renewcommand\csname CharSpellcastingClass#1Ability\endcsname{##5}
		\SetCounter{CharCL#1Count}{##4}
	}
}\docsvlist{One,Two}

\renewcommand{\do}[1]{
	\expandafter\edef\csname Char#1SpellsListOne\endcsname{}
	\expandafter\edef\csname Char#1SpellsListTwo\endcsname{}
}\docsvlist{0,1,2,3,4,5,6,7,8,9}


\NewDocumentCommand{\NewSpellcasting}{s O{9} m m m}{
	\ifthenelse{\equal{\CharSpellcastingClassOne}{}}{
		\IfBooleanTF #1 {\NewSpellcastingOne*[#2]{#3}{#4}{#5}} {\NewSpellcastingOne[#2]{#3}{#4}{#5}}
	}{
		\IfBooleanTF #1 {\NewSpellcastingTwo*[#2]{#3}{#4}{#5}} {\NewSpellcastingTwo[#2]{#3}{#4}{#5}}
	}
}

%% Commands for defining spells and adding them to a character %%

\ProvideDocumentCommand{\AddSpell}{o m m}{%[Class]{Level}{Spell Name}
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{
		\listcsinsert{Char#2SpellsListOne}{#3}
	}{
		\listcsinsert{Char#2SpellsListTwo}{#3}
	}
	%% Implementation for when the switch to class-specific spell lists (instead of SpellcastingClassOne/SpellcastingClassTwo) is made
	%	\IfValueTF #1 {
	%		\listcsinsert{Char#1#2SpellsList}{#3}
	%		\StepCounter{Char#1#2SpellsActuallyKnown}
	%	}{
	%		\listcsinsert{Char\CharCurrentSpellcastingClass #2SpellsList}{#3}
	%		\StepCounter{Char\CharCurrentSpellcastingClass #2SpellsActuallyKnown}
	%	}
}

\newcommand{\DeclareSpellDescription}[2]{
	\expandafter\newcommand\csname Spell#1LongDescription\endcsname{#2}
}

\ProvideDocumentCommand{\DeclareSpell}{m >{\SplitArgument{7}{|}}m O{}}{%{Name}{Attributes}[Short desc]
	\csdef{Spell#1ShortDescription}{#3}%
	\DeclareSpellInternal{#1}#2%
	\NewCounter{CharSpell#1PreparedCount}%
	\NewCounter{CharSpell#1CastCount}%
}

\ProvideDocumentCommand{\DeclareSpellInternal}{m m m m m m m m m}{%Name, School, Components, Cast Time, Range, Effect Type: Effect, Duration, Save, SR
	\csdef{Spell#1School}{#2}%
	\csdef{Spell#1Components}{#3}%
	\csdef{Spell#1CastTime}{#4}%
	\csdef{Spell#1Range}{#5}%
	\DeclareSpellEffect{#1}{#6}%
	\csdef{Spell#1Duration}{#7}%
	\csdef{Spell#1Save}{#8}%
	\csdef{Spell#1SR}{#9}%
}
\ProvideDocumentCommand{\DeclareSpellEffectInternal}{m m m}{%
	\csdef{Spell#1EffectType}{#2}%
	\csdef{Spell#1Effect}{#3}%
}

\ProvideDocumentCommand{\DeclareSpellEffect}{m >{\SplitArgument{1}{:}}m}{%
	\DeclareSpellEffectInternal{#1}#2%
}