\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{D20-Common}[2020/05/06 Common system features between D\&D 3.5 and Pathfinder for rpgcharsheet2.cls]

%% Toggles %%
\NewCounter{AutoSkillRanks-Mode}

%% Ability Scores %%
\edef\AbilityScoresList{}
\forcsvlist{\listadd\AbilityScoresList}{Str,Dex,Con,Int,Wis,Cha}

\renewcommand{\do}[1]{
	\NewCounter{Char#1Count}
	\NewCounter{Char#1BaseCount}
	\NewCounter{Char#1MiscCount}
	\NewCounter{Char#1TmpCount}
	\NewCounter{Char#1ModCount}
	\expandafter\newcommand\csname SetChar#1\endcsname[1]{
		\SetCounter{Char#1BaseCount}{##1}
	}
}\dolistloop{\AbilityScoresList}
\newcommand{\ComputeAbilityScores}{
	\renewcommand{\do}[1]{
		\SetCounter{Char##1Count}{\value{Char##1BaseCount}}
		\AddToCounter{Char##1Count}{\value{Char##1MiscCount}}
		\AddToCounter{Char##1Count}{\value{Char##1TmpCount}}
		\SetCounter{Char##1ModCount}{0}
		\ifthenelse{10 > \value{Char##1Count}}{
			\AddToCounter{Char##1Count}{-1}
			\SetCounter{Char##1ModCount}{(\value{Char##1Count} - 10) / 2}
			\AddToCounter{Char##1Count}{1}
		}{
			\SetCounter{Char##1ModCount}{(\value{Char##1Count}-10)/2}
		}
	}\dolistloop{\AbilityScoresList}
}

\newcommand{\AbilityFullName}[1]{%
	\ifthenelse{\equal{#1}{Str}}{Strength}{%
	\ifthenelse{\equal{#1}{Dex}}{Dexterity}{%
	\ifthenelse{\equal{#1}{Con}}{Constitution}{%
	\ifthenelse{\equal{#1}{Int}}{Intelligence}{%
	\ifthenelse{\equal{#1}{Wis}}{Wisdom}{%
	\ifthenelse{\equal{#1}{Cha}}{Charisma}{%
	#1}}}}}}
}


%% Armor Class %%
\NewCounter{CharArmorBonusCount}
\newcommand{\AddArmorBonus}[1]{\ifthenelse{\value{CharArmorBonusCount}<#1}{\SetCounter{CharArmorBonusCount}{#1}}{}}
\NewCounter{CharShieldBonusCount}
\newcommand{\AddShieldBonus}[1]{\ifthenelse{\value{CharShieldBonusCount}<#1}{\SetCounter{CharShieldBonusCount}{#1}}{}}
\NewCounter{CharNaturalArmorModCount}
\newcommand{\AddNaturalArmorBonus}[1]{\ifthenelse{\value{CharNaturalArmorModCount}<#1}{\Setcounter{CharNaturalArmorModCount}{#1}}{}}
\NewCounter{CharDodgeModCount}
\newcommand{\AddDodgeBonus}[1]{\AddToCounter{CharDodgeModCount}{#1}}
\NewCounter{CharSizeModCount}
\NewCounter{CharDeflectionModCount}
\newcommand{\AddDeflectionBonus}[1]{\ifthenelse{\value{CharDeflectionModCount}<#1}{\SetCounter{CharDeflectionModCount}{#1}}{}}
\NewCounter{CharACMiscCount}\NewCounter{CharACTmpCount}
\NewCounter{CharTouchACMiscCount}\NewCounter{CharTouchACTmpCount}
\NewCounter{CharFlatFootedACMiscCount}\NewCounter{CharFlatFootedACTmpCount}

%% Saving Throws %%
\renewcommand{\do}[1]{
	\NewCounter{Char#1Count}
	\NewCounter{Char#1MiscCount}
	\NewCounter{Char#1TmpCount}
}\docsvlist{Fortitude, Reflex, Will}
\newcommand{\AddResistanceBonus}[1]{%
	\MiscBonus[Resistance]{Fortitude}{#1}%
	\MiscBonus[Resistance]{Reflex}{#1}%
	\MiscBonus[Resistance]{Will}{#1}%
}

%% Special Defenses %%
\edef\CharResistancesList{}
\newcommand{\AddResistance}[2]{
	\ifinlist{#1}{\CharImmunitiesList}{}{
		\ifinlist{#1}{\CharResistancesList}{}{
			\NewCounter{CharResist#1Count}
			\listadd{\CharResistancesList}{#1}
		}
		\ifthenelse{\value{CharResist#1Count} < #2}{
			\SetCounter{CharResist#1Count}{#2}
		}{}
	}
}
\NewDocumentCommand{\PrintResistances}{O{, } O{}}{%
	\edef\@PrintList{}%
	\edef\@@PrintList{}%
	\edef\@PrintListlast{}%
	\renewcommand{\do}[1]{%
		\ifthenelse{\value{CharResist##1Count} = 0}{}{%
			\let\@@PrintList\@PrintList%
			\edef\@PrintListlast{Resist ##1 \arabic{CharResist##1Count}}%
			\listadd{\@PrintList}{Resist ##1 \arabic{CharResist##1Count}}%
		}%
	}\dolistloop{\CharResistancesList}%
	\renewcommand{\do}[1]{%
		##1#1%
	}\dolistloop{\@@PrintList}%
	\ifthenelse{\equal\@@PrintList{}}{}{#2}\@PrintListlast%
}
\edef\CharImmunitiesList{}
\newcommand{\AddImmunity}[1]{
	\ifinlist{#1}{\CharImmunitiesList}{}{
		\listinsert{\CharImmunitiesList}{#1}
		\ifinlist{#1}{\CharResistancesList}{
			\SetCounter{CharResist#1Count}{0}
		}{}
	}
}
\edef\CharDRTypesList{}
\newcommand{\AddDR}[2]{
	\ifinlist{#1}{\CharDRTypesList}{}{
		\NewCounter{CharDR/#1Count}
		\listadd{\CharDRTypesList}{#1}
	}
	\ifthenelse{\value{CharDR/#1Count} < #2}{
		\SetCounter{CharDR/#1Count}{#2}
	}{}
}
\NewDocumentCommand{\PrintDR}{O{, } O{}}{%
	\edef\@PrintList{}%
	\edef\@@PrintList{}%
	\edef\@PrintListlast{}
	\renewcommand{\do}[1]{%
		\let\@@PrintList\@PrintList%
		\edef\@PrintListlast{DR \arabic{CharDR/##1Count}/##1}%
		\listadd{\@PrintList}{DR \arabic{CharDR/##1Count}/##1}%
	}\dolistloop{\CharDRTypesList}%
	\renewcommand{\do}[1]{%
		##1#1%
	}\dolistloop{\@@PrintList}%
	\ifthenelse{\equal\@@PrintList{}}{}{#2}\@PrintListlast%
}
\NewCounter{CharSpellResistanceCount}
\newcommand{\AddSpellResistance}[1]{
	\SetCounter{CharSpellResistanceCount}{\maxof{\value{CharSpellResistanceCount}}{#1}}
}

\edef\CharSpecialDefensesList{}
\newcommand{\AddSpecialDefense}[1]{
	\listinsert{\CharSpecialDefensesList}{#1}
}

%% BAB, attacks, combat maneuvers %%
\NewCounter{CharBABCount}
\NewCounter{CharIteratedAttacksCount}
\NewCounter{CharIteratedAttackBonusCount}
\NewCounter{CharExtraAttacksCount}

%% Speed
\NewCounter{CharSpeedReducibleBool}
\SetCounter{CharSpeedReducibleBool}{1}
\renewcommand{\do}[1]{
	\NewCounter{Char#1SpeedCount}
	\NewCounter{Char#1SpeedMiscCount}
}
\docsvlist{Base, Fly, Swim, Burrow, Climb}
\newcommand{\SetCharSpeed}[1]{
	\SetCounter{CharBaseSpeedCount}{#1}
}

\newcommand{\AddClimbSpeed}[1]{
	\SetCounter{CharClimbSpeedCount}{#1}
}
\newcommand{\AddSwimSpeed}[1]{
	\SetCounter{CharSwimSpeedCount}{#1}
}
\newcommand{\AddBurrowSpeed}[1]{
	\SetCounter{CharBurrowSpeedCount}{#1}
}
\NewCounter{CharSpeedMiscCount}
\newcommand{\SpeedInitialize}{
	\renewcommand{\do}[1]{
		\ifthenelse{\value{Char##1SpeedCount}=0}{
		}{
			\AddToCounter{Char##1SpeedCount}{\value{CharSpeedMiscCount}}
		}
		\AddToCounter{Char##1SpeedCount}{\value{Char##1SpeedMiscCount}}
	}
	\docsvlist{Base, Fly, Swim, Burrow, Climb}
}

%%%% Feats, Class & Race Features %%%%

\edef\CharFeatsList{}
\edef\CharRaceFeaturesList{}
\edef\CharClassFeaturesList{}
\edef\CharLimitedUseList{}
\NewCounter{CharFeatsCount}
\NewCounter{CharBonusFeatsCount}
\NewCounter{CountFeats-Mode}

\NewDocumentCommand{\AddFeat}{s s O{1} m}{
	\IfBooleanTF #1 {
		\IfBooleanF #2 {
			\AddToCounter{CharBonusFeatsCount}{-#3}
		}
		\listadd\CharFeatsList{#4\textsuperscript{B} \ifthenelse{#3 = 1}{}{$\times#3$}}
	}{
		\listadd\CharFeatsList{#4 \ifthenelse{#3 = 1}{}{$\times#3$}}
		\AddToCounter{CharFeatsCount}{-#3}
	}
}

\newcommand{\CheckFeatsCount}{
	\ifthenelse{\value{CountFeats-Mode} = 1}{
		\AddDebug{Checking Feats}
		\ifthenelse{\value{CharBonusFeatsCount} < 0}{
			\AddWarning{\DoMath{-\value{CharBonusFeatsCount}} too many bonus feats selected}
		}{
			\ifthenelse{\value{CharBonusFeatsCount} > 0}{
				\AddWarning{\arabic{CharBonusFeatsCount} bonus feats left to select}
			}{}}
		\ifthenelse{\value{CharFeatsCount} < 0}{
			\AddWarning{\DoMath{-\value{CharFeatsCount}} too many feats selected}
		}{
			\ifthenelse{\value{CharFeatsCount} > 0}{
				\AddWarning{\arabic{CharFeatsCount} feats left to select}
			}{}}
	}{}
}

\newcommand\AddClassFeature[1]{\listadd\CharClassFeaturesList{#1}}
\newcommand\AddRaceFeature[1]{\listadd\CharRaceFeaturesList{#1}}
\newcommand\AddLimitedUse[2]{\listadd\CharLimitedUseList{#1 & #2}}

\newcommand{\datafolder}{.}
\NewCounter{CharTotalLevelCount}
\SetCounter{CharTotalLevelCount}{0}
\NewCounter{CharSpareSkillRanksCount}
\NewCounter{HP-Mode}
\edef\CharClassesList{}

\ProvideDocumentCommand{\ImportCharClassCommon}{m m}{%
	\listadd{\CharClassesList}{#1}
	\if\csname#1BAB\endcsname g
	\AddToCounter{CharBABCount}{#2}
	\fi
	\if\csname#1BAB\endcsname a
	\AddToCounter{CharBABCount}{#2 * 3 / 4}
	\fi
	\if\csname#1BAB\endcsname p
	\AddToCounter{CharBABCount}{#2 / 2}
	\fi
	\if\csname#1Fort\endcsname g
	\AddToCounter{CharFortitudeCount}{2 + #2 / 2}
	\fi
	\if\csname#1Fort\endcsname p
	\AddToCounter{CharFortitudeCount}{#2 / 3}
	\fi
	\if\csname#1Ref\endcsname g
	\AddToCounter{CharReflexCount}{2 + #2 / 2}
	\fi
	\if\csname#1Ref\endcsname p
	\AddToCounter{CharReflexCount}{#2 / 3}
	\fi
	\if\csname#1Will\endcsname g
	\AddToCounter{CharWillCount}{2 + #2 / 2}
	\fi
	\if\csname#1Will\endcsname p
	\AddToCounter{CharWillCount}{#2 / 3}
	\fi
	\SetCounter{Char#1ClassLevelCount}{#2}
	\ifthenelse{\value{CharTotalLevelCount} = 0}{
		\ifthenelse{\value{HP-Mode} = 1}{
			\AddToCounter{CharHPCount}{\value{#1HitDieSize}}
			\AddToCounter{CharHPRollsCount}{1}
		}{
			\ifthenelse{\value{HP-Mode} = 2}{
				\AddToCounter{CharHPCount}{\value{#1HitDieSize} + (\value{#1HitDieSize} + 1) * (#2 - 1) / 2}
		}{}}
	}{
		\ifthenelse{\value{HP-Mode} = 2}{
			\AddToCounter{CharHPCount}{(\value{#1HitDieSize} + 1) * #2 / 2}
		}{}
	}
	\AddToCounter{CharTotalLevelCount}{#2}
	\forlistcsloop{\IsClassSkill}{#1ClassSkillsList}
	\csname Add#1ClassFeatures\endcsname{#2}
}

%% Race Importing %%
\NewDocumentCommand{\ImportCharRace}{m}{
	\input{\datafolder/Races/#1.tex}
}

%%%% Skills %%%%

% Define Skills lists
\edef\SkillsList{}
\edef\KnowledgeSkillsList{}
\edef\ArmorCheckSkillsList{}
\edef\TrainedSkillsList{}

% Command to declare a new skill, adding it to the appropriate skill lists
\newcommand\DeclareSkillDo[1]{}
\ProvideDocumentCommand{\DeclareSkill}{o m o m}{% Tags, Skill name, display name, key ability
	\expandafter\newcommand\csname Skill#2KeyAbility\endcsname{#4}
	\IfNoValueTF{#3}{\csdef{Skill#2DisplayName}{#2}}{\csdef{Skill#2DisplayName}{#3}}
	\listinsert{\SkillsList}{#2}
	\IfNoValueF{#1}{
		\renewcommand\DeclareSkillDo[1]{
			\listcsinsert{##1SkillsList}{#2}
		}
		\forcsvlist{\DeclareSkillDo}{#1}
	}
	\NewCounter{Char#2Count}
	\NewCounter{Char#2ClassSkillBool}
	\NewCounter{Char#2RanksCount}
	\NewCounter{Char#2MiscCount}
}

\DeclareSkill{Appraise}{Int}
\DeclareSkill{Bluff}{Cha}
\DeclareSkill[ArmorCheck]{Climb}{Str}
\renewcommand\do[1]{
	\DeclareSkill{Craft#1}[\SkillCraftDisplayName{} (\cs{CharCraft#1Name})]{Int}
}\docsvlist{One,Two,Three} \newcommand\SkillCraftDisplayName{Craft}
\DeclareSkill{Diplomacy}{Cha}
\DeclareSkill[Trained]{DisableDevice}[Disable Device]{Dex}
\DeclareSkill{Disguise}{Cha}
\DeclareSkill[ArmorCheck]{EscapeArtist}[Escape Artist]{Dex}
\DeclareSkill[Trained]{HandleAnimal}[Handle Animal]{Cha}
\DeclareSkill{Heal}{Wis}
\DeclareSkill{Intimidate}{Cha}
\renewcommand{\do}[1]{
	\DeclareSkill[Knowledge,Trained]{Knowledge#1}[\SkillKnowledgeDisplayName{} (#1)]{Int}
}\docsvlist{Arcana,Dungeoneering,Engineering,Geography,History,Local,Nature,Nobility,Planes,Religion}
	\newcommand\SkillKnowledgeDisplayName{Knowledge}
\renewcommand\do[1]{
	\DeclareSkill{Perform#1}[\SkillPerformDisplayName{} (\cs{CharPerform#1Name})]{Cha}
}\docsvlist{One,Two} \newcommand\SkillPerformDisplayName{Perform}
\renewcommand\do[1]{
	\DeclareSkill[Trained]{Profession#1}[\SkillProfessionDisplayName{} (\cs{CharProfession#1Name})]{Wis}
}\docsvlist{One,Two} \newcommand\SkillProfessionDisplayName{Profession}
\DeclareSkill{Ride}{Dex}
\DeclareSkill{SenseMotive}[Sense Motive]{Wis}
\DeclareSkill[Trained,ArmorCheck]{SleightOfHand}[Sleight of Hand]{Dex}
\DeclareSkill[Trained]{Spellcraft}{Int}
\DeclareSkill{Survival}{Wis}
\DeclareSkill[ArmorCheck]{Swim}{Str}
\DeclareSkill[Trained]{UseMagicDevice}[Use Magic Device]{Cha}

%Define lists for Armor check penalty and trained-only

\forlistloop{\listadd\TrainedSkillsList}{\KnowledgeSkillsList}

% Default blank option for Craft, Profession, Perform categories;
\renewcommand\do[1]{
	\expandafter\newcommand\csname Char#1Name\endcsname{\underline{~~~~~~~~~~~~~~~~~~~~~~}}
}\docsvlist{CraftOne,CraftTwo,CraftThree,ProfessionOne,ProfessionTwo,PerformOne,PerformTwo}

%adds Skill to Class Skill list
\newcommand\IsClassSkill[1]{
	\ifthenelse{\equal{#1}{KnowledgeAll}}{
		\forlistloop{\IsClassSkill}{\KnowledgeSkillsList}
	}{\ifthenelse{\equal{#1}{Craft}}{
			\forcsvlist{\IsClassSkill}{CraftOne, CraftTwo, CraftThree}
		}{\ifthenelse{\equal{#1}{Perform}}{
				\forcsvlist{\IsClassSkill}{PerformOne, PerformTwo}
			}{\ifthenelse{\equal{#1}{Profession}}{
					\forcsvlist{\IsClassSkill}{ProfessionOne, ProfessionTwo}
				}{
					\SetCounter{Char#1ClassSkillBool}{1}
	}}}}
}

\NewCounter{CharBonusSkillRanksPerLevelCount}

\newcommand\CalculateSkillTotals{
	\renewcommand\do[1]{
		\SetCounter{Char##1Count}{\value{Char##1RanksCount} + \value{Char##1MiscCount} + \value{Char\cs{Skill##1KeyAbility}ModCount}}
	}\dolistloop{\SkillsList}
}
%% Boolean check for whether a skill uses its default value - True if Ranks are 0 AND (Misc bonus is 0 OR skill is trained only); Defaults to using char skill but can take an optional first argument to instead check a cohort or companion skill

\ProvideDocumentCommand{\IfSkillDefaultTF}{O{Char} m m m}{% [Char/Cohort/AnimalCompaion/etc.]{SkillName}{True code}{False code}
	\ifthenelse{\value{#1#2RanksCount} = 0}{%
		\ifinlist{#2}{\TrainedSkillsList}{#3}{\ifthenelse{\value{#1#2MiscCount} = 0}{#3}{#4}}%
	}{#4}%
}
\ProvideDocumentCommand{\IfSkillDefaultFT}{O{Char} m m m}{\IfSkillDefaultTF[#1]{#2}{#4}{#3}}
\ProvideDocumentCommand{\IfSkillDefaultT}{O{Char} m m}{\IfSkillDefaultTF[#1]{#2}{#3}{}}
\ProvideDocumentCommand{\IfSkillDefaultF}{O{Char} m m}{\IfSkillDefaultTF[#1]{#2}{}{#3}}


%%%% Character Name & Description %%%%

\newcommand\CharName{}
\newcommand\CharLevel{}
\newcommand\CharPlayerName{}
\newcommand\CharAlignment{}
\newcommand\CharReligion{}
\newcommand\CharRace{}
\newcommand\CharHomeland{}
\newcommand\CharSize{}
\newcommand\CharGender{}
\newcommand\CharAge{}
\newcommand\CharHeight{}
\newcommand\CharWeight{}
\newcommand\CharHair{}
\newcommand\CharEyes{}

%%%% Inventory %%%%

%% Gear %%
\edef\CharGearList{}
\newlength{\GearItemWeight}
\NewDocumentCommand{\AddGearItem}{s O{1} m m}{%
	\IfBooleanTF #1 {%
		\AddToLength{\ExtradimensionalGearWeight}{#2pt * #4}%
		\listadd{\CharGearList}{#3\ifnum #2 > 1{ (#2)}\fi &\SetLength{\GearItemWeight}{#2pt * #4} *\PrintWeight{\GearItemWeight}~lbs.}
	}{%
		\AddToLength{\TotalGearWeight}{#2pt * #4}%
		\listadd{\CharGearList}{#3\ifnum #2 > 1{ (#2)}\fi & \SetLength{\GearItemWeight}{#2pt * #4}\PrintWeight{\GearItemWeight}~lbs.}
	}
}
\newcommand\AddGearSubItem[3][1]{
	\listadd{\CharGearList}{---#2\ifnum #1 > 1{ (#1)} & (\DoMath{#1 * #3}~lbs.) \tabularnewline}
}
%% Stored Items %%
\edef\StoredItemsList{}
\newcommand\AddStoredItem[3][1]{
	\AddToLength{\TotalStoredWeight}{#1 pt * #3}%
	\listadd{\StoredItemsList}{#2\ifnum #1 > 1{ (#1)}\fi & \DoMath{#1 * #3}~lbs.}
}
\newcommand\AddStoredSubItem[3][1]{
	\listadd{\StoredItemsList}{---#2\ifnum #1 > 1{ (#1)} & (\DoMath{#1 * #3}~lbs.) \tabularnewline}
}

%% Weapons %%
\newcommand{\DeclareWeapon}[1]{%
	\expandafter\newcommand\csname CharWeapon#1Name\endcsname{}%
	\expandafter\newcommand\csname CharWeapon#1AttackBonus\endcsname{}%
	\NewCounter{CharWeapon#1MiscCount}%
	\expandafter\newcommand\csname CharWeapon#1Damage\endcsname{}%
	\expandafter\newcommand\csname CharWeapon#1Critical\endcsname{}%
	\expandafter\newcommand\csname CharWeapon#1Type\endcsname{}%
	\expandafter\newcommand\csname CharWeapon#1Range\endcsname{}%
	\expandafter\newcommand\csname CharWeapon#1Notes\endcsname{}%
	\expandafter\newcommand\csname AddWeapon#1\endcsname[7]{%
		\expandafter\renewcommand\csname CharWeapon#1Name\endcsname{##1}
		\expandafter\renewcommand\csname CharWeapon#1AttackBonus\endcsname{##2}
		\expandafter\renewcommand\csname CharWeapon#1Damage\endcsname{##3}
		\expandafter\renewcommand\csname CharWeapon#1Critical\endcsname{##4}
		\expandafter\renewcommand\csname CharWeapon#1Type\endcsname{##5}
		\expandafter\renewcommand\csname CharWeapon#1Range\endcsname{##6}
		\expandafter\renewcommand\csname CharWeapon#1Notes\endcsname{##7}
	}
	\expandafter\newcommand\csname AddAutoWeapon#1\endcsname[9][0]{%[##1=Extra attacks]{##2=Name}{##3=attack bonus modifier}{##4=damage}{##5=crit}{##6=Damage type}{##7=Melee or Ranged}{##8=Notes}{##9=Ability score to use for attack bonus}
		\expandafter\renewcommand\csname CharWeapon#1Name\endcsname{##2}
		\expandafter\renewcommand\csname CharWeapon#1AttackBonus\endcsname{%
			\ifthenelse{\equal{\lowercase{##7}}{\lowercase{Melee}}}{%
				\AddDebug{Weapon #1 is a Melee Weapon}
				\SetCounter{CharIteratedAttackBonusCount}{%
					\value{CharBABCount}+
					\value{Char##9ModCount}+%Ability score Mod
					\value{CharSizeModCount}+
					\value{CharMeleeMiscCount}+
					\value{CharMeleeTmpCount}+
					\value{CharWeapon#1MiscCount}+
					##3
				}
			}{%
				\AddDebug{Weapon #1 is a Ranged Weapon}
				\SetCounter{CharIteratedAttackBonusCount}{%
					\value{CharBABCount}+
					\value{Char##9ModCount}+%Ability score Mod
					\value{CharSizeModCount}+
					\value{CharRangedMiscCount}+
					\value{CharRangedTmpCount}+
					\value{CharWeapon#1MiscCount}+
					##3
				}
			}
			\ForLoop{@i}{0}{\value{@i}<##1}{%
				\ifthenelse{\value{@i}=0}{}{/}%
				\PlusMinus{CharIteratedAttackBonusCount}%
			}%
			\ForLoop{@i}{0}{\value{@i}<\value{CharIteratedAttacksCount}}{%
				\ifthenelse{\value{@i}=0}{\ifthenelse{##1 = 0}{}{/}}{/}%
				\PlusMinus{CharIteratedAttackBonusCount}%
				\SetCounter{CharIteratedAttackBonusCount}{\value{CharIteratedAttackBonusCount}-5}%
			}%
		}%
		\expandafter\renewcommand\csname CharWeapon#1Damage\endcsname{##4}%
		\expandafter\renewcommand\csname CharWeapon#1Critical\endcsname{##5}%
		\expandafter\renewcommand\csname CharWeapon#1Type\endcsname{##6}
		\expandafter\renewcommand\csname CharWeapon#1Range\endcsname{##7}
		\expandafter\renewcommand\csname CharWeapon#1Notes\endcsname{##8}
	}
}
\forcsvlist{\DeclareWeapon}{One,Two,Three}

\newcommand\AddWeapon[7]{%
	\ifthenelse{\equal{\CharWeaponOneName}{}}
	{\AddWeaponOne{#1}{#2}{#3}{#4}{#5}{#6}{#7}}
	{\ifthenelse{\equal{\CharWeaponTwoName}{}}
		{\AddWeaponTwo{#1}{#2}{#3}{#4}{#5}{#6}{#7}}
		{\ifthenelse{\equal{\CharWeaponThreeName}{}}
			{\AddWeaponThree{#1}{#2}{#3}{#4}{#5}{#6}{#7}}
			{\AddWeaponOne{#1}{#2}{#3}{#4}{#5}{#6}{#7}
}}}}

\newcommand\AddAutoWeapon[9][0]{
	\ifthenelse{\equal{\CharWeaponOneName}{}}
	{\AddAutoWeaponOne[#1]{#2}{#3}{#4}{#5}{#6}{#7}{#8}{#9}}
	{\ifthenelse{\equal{\CharWeaponTwoName}{}}
		{\AddAutoWeaponTwo[#1]{#2}{#3}{#4}{#5}{#6}{#7}{#8}{#9}}
		{\ifthenelse{\equal{\CharWeaponThreeName}{}}
			{\AddAutoWeaponThree[#1]{#2}{#3}{#4}{#5}{#6}{#7}{#8}{#9}}
			{\AddAutoWeaponOne[#1]{#2}{#3}{#4}{#5}{#6}{#7}{#8}{#9}
}}}}

%% Armor and Shield %%
%Initialize Armor Item variables
\NewCounter{TotalACItemsSpellFailure}
\NewCounter{CharMaxDexArmorCount}
\SetCounter{CharMaxDexArmorCount}{100}
\NewCounter{CharMaxDexShieldCount}
\SetCounter{CharMaxDexShieldCount}{100}
\NewCounter{CharMaxDexBonusCount}
\SetCounter{CharMaxDexBonusCount}{100}
\NewCounter{CharDextoACCount}
\newcommand{\CharArmorName}{}
\newcommand{\CharArmorNotes}{}
\newcommand{\CharArmorType}{}
\NewCounter{CharArmorArmorCheckPenaltyCount}
\NewCounter{CharArmorSpellFailureCount}
\newcommand{\CharShieldName}{}
\newcommand{\CharShieldNotes}{}
\NewCounter{CharShieldArmorCheckPenaltyCount}
\NewCounter{CharShieldSpellFailureCount}

%Command to add an armor item
\newcommand\AddArmor[9]{
	\renewcommand{\CharArmorName}{#1}
	\AddArmorBonus{#2}
	\ifthenelse{\equal{#3}{}}{}{\SetCounter{CharMaxDexArmorCount}{#3}}
	\ifthenelse{\value{CharMaxDexArmorCount}<\value{CharMaxDexBonusCount}}
	{\SetCounter{CharMaxDexBonusCount}{\value{CharMaxDexArmorCount}}}{}
	\SetCounter{CharArmorArmorCheckPenaltyCount}{#4}
	\renewcommand{\do}[1]{
		\MiscBonus{##1}{#4}
	}\dolistloop{\ArmorCheckSkillsList}
	\AddToCounter{CharArmorSpellFailureCount}{#5}
	\AddToCounter{TotalACItemsSpellFailure}{#5}
	\renewcommand{\CharArmorType}{#6}
	\renewcommand{\CharArmorNotes}{#8}
	\AddBodyItem{#1}{#9}{#7}
}

%Command to add a shield item
\newcommand\AddShield[7]{
	\AddShieldBonus{#2}
	\ifthenelse{\equal{#3}{}}{}{\SetCounter{CharMaxDexShieldCount}{#3}}
	\ifthenelse{\value{CharMaxDexShieldCount}<\value{CharMaxDexBonusCount}}
	{\SetCounter{CharMaxDexBonusCount}{\value{CharMaxDexShieldCount}}}{}
	\SetCounter{CharShieldArmorCheckPenaltyCount}{#4}
	\renewcommand{\do}[1]{
		\MiscBonus{##1}{#4}
	}\dolistloop{\ArmorCheckSkillsList}
	\SetCounter{CharShieldSpellFailureCount}{#5}
	\AddToCounter{TotalACItemsSpellFailure}{#5}
	\renewcommand{\CharShieldNotes}{#7}
	\renewcommand{\CharShieldName}{#1}
	\AddGearItem{#1}{#6}
}

%% Magic Item Slots %%
\let\ItemSlotNamesList\@empty
\forcsvlist{\listadd{\ItemSlotNamesList}}{Belt, Body, Chest, Eyes, Feet, Hands, Head, Neck, RingOne, RingTwo, Shoulders, Wrists}
\renewcommand{\do}[1]{
	\expandafter\newcommand\csname ItemInSlot#1Name\endcsname{}
	\expandafter\newcommand\csname ItemInSlot#1Description\endcsname{}
	\expandafter\newlength\csname ItemInSlot#1Weight\endcsname
	\expandafter\newcommand \csname Add#1Item\endcsname[3]{
		\expandafter\renewcommand\csname ItemInSlot#1Name\endcsname{\itshape ##1}
		\expandafter\renewcommand\csname ItemInSlot#1Description\endcsname{##2}
		\SetLength{\csname ItemInSlot#1Weight\endcsname}{##3pt}
		\AddToLength{\WornItemsWeight}{##3pt}
	}
}\dolistloop{\ItemSlotNamesList}
\newcommand{\AddRingItem}[3]{
	\ifthenelse{\not\equal{\ItemInSlotRingOneName}{}\and\equal{\ItemInSlotRingTwoName}{}}
	{\AddRingTwoItem{#1}{#2}{#3}}
	{\AddRingOneItem{#1}{#2}{#3}}}

%% Money %%
\renewcommand{\do}[1]{
	\NewCounter{Char#1Count}
	\NewCounter{Char#1WeightlessCount}
	\NewCounter{Char#1StoredCount}
	\expandafter\newcommand\csname AddStored#1\endcsname[1]{\AddToCounter{Char#1StoredCount}{##1}}
	\expandafter\NewDocumentCommand\csname Add#1\endcsname{s m}{
		\IfBooleanTF ##1 {\AddToCounter{Char#1WeightlessCount}{##2}} {\AddToCounter{Char#1Count}{##2}}
	}
}\docsvlist{Platinum, Gold, Silver, Copper}

%% Weight Carried %%
\newlength{\TotalGearWeight}
\newlength{\TotalStoredWeight}
\newlength{\WornItemsWeight}
\newlength{\CurrencyWeight}
\newlength{\TotalCarriedWeight}
\newlength{\ExtradimensionalGearWeight}
\newlength{\ExtradimensionalCurrencyWeight}
\newlength{\TotalExtradimensionalWeight}
\newlength{\ExtradimensionalOverload}
\newcommand{\CalculateWeights}{
	\SetLength{\CurrencyWeight}{.02pt*\value{CharPlatinumCount}+.02pt*\value{CharGoldCount}+.02pt*\value{CharSilverCount}+.02pt*\value{CharCopperCount}}
	\SetLength{\ExtradimensionalCurrencyWeight}{.02pt*\value{CharPlatinumWeightlessCount}+.02pt*\value{CharGoldWeightlessCount}+.02pt*\value{CharSilverWeightlessCount}+.02pt*\value{CharCopperWeightlessCount}}
	\SetLength{\TotalExtradimensionalWeight}{\ExtradimensionalGearWeight+\ExtradimensionalCurrencyWeight}
	\SetLength{\ExtradimensionalOverload}{\TotalExtradimensionalWeight - \value{CharExtradimensionalCapacityCount}pt}
	\ifthenelse{\ExtradimensionalOverload > 0}{
		\AddToLength{\TotalGearWeight}{\ExtradimensionalOverload}
	}{}
	\SetLength{\TotalCarriedWeight}{\TotalGearWeight+\CurrencyWeight+\WornItemsWeight}
}

%% Carrying Capacity %%
\NewCounter{CharHeavyLoadCount}
\NewCounter{CharMediumLoadCount}
\NewCounter{CharLightLoadCount}
\NewCounter{CharStrCarryingMiscCount}
\NewCounter{CharStrCarryingCount}
\NewCounter{CharLiftLoadCount}
\NewCounter{CharDragLoadCount}
\NewCounter{CharExtradimensionalCapacityCount}

\NewCounter{CarryingCapacityMultiplierCount}
\SetCounter{CarryingCapacityMultiplierCount}{1}
\newcommand\SetHeavyLoad[1]{%
	\ifthenelse{\value{#1}>19}{%
		\SetCounter{@j}{\value{#1}-10}%
		\SetHeavyLoad{@j}
		\AddToCounter{@i}{\value{@i}}
		\AddToCounter{@i}{\value{@i}}
	}{%
		\SetCounter{@j}{\value{#1}}
		\ForLoop{@k}{0}{\value{@k}<10}{
			\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{10}\AddToCounter{@j}{-1}}{}}
		\ForLoop{@k}{0}{\value{@k}<2}{
			\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{15}\AddToCounter{@j}{-1}}{}}
		\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{20}\AddToCounter{@j}{-1}}{}
		\ForLoop{@k}{0}{\value{@k}<2}{
			\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{25}\AddToCounter{@j}{-1}}{}}
		\ForLoop{@k}{0}{\value{@k}<2}{
			\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{30}\AddToCounter{@j}{-1}}{}}
		\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{40}\AddToCounter{@j}{-1}}{}
		\ifthenelse{\value{@j}>0}{\AddToCounter{@i}{50}\AddToCounter{@j}{-1}}{}
	}
}
\newcommand\CalculateLoads{
	\SetCounter{@i}{0}
	\SetCounter{@j}{\value{CharStrCount}+\value{CharStrCarryingMiscCount}}
	\SetHeavyLoad{@j}
	\SetCounter{CharHeavyLoadCount}{\value{@i}*\value{CarryingCapacityMultiplierCount}}
	\SetCounter{CharMediumLoadCount}{\value{CharHeavyLoadCount}*2/3}
	\SetCounter{CharLightLoadCount}{\value{CharHeavyLoadCount}/3}
	\SetCounter{CharLiftLoadCount}{\value{CharHeavyLoadCount}*2}
	\SetCounter{CharDragLoadCount}{\value{CharHeavyLoadCount}*5}
}

\NewCounter{CharEncumbranceLevelCount}
\NewCounter{CharEncumberedMaxDexCount}
\SetCounter{CharEncumberedMaxDexCount}{100}
\NewCounter{CharEncumberedArmorCheckPenaltyCount}
\NewCounter{CharEncumberedSpeedReducedBool}
\newlength\loadaslength

\newcommand\CheckEncumbrance{
	\SetLength\loadaslength{1pt*\value{CharLightLoadCount}}
	\ifthenelse{\lengthtest{\TotalCarriedWeight<\loadaslength}}{
		\SetCounter{CharEncumbranceLevelCount}{1}}{
		\SetLength\loadaslength{1pt*\value{CharMediumLoadCount}}
		\ifthenelse{\lengthtest{\TotalCarriedWeight<\loadaslength}}{
			\SetCounter{CharEncumbranceLevelCount}{2}
			\SetCounter{CharEncumberedArmorCheckPenaltyCount}{-3}
			\SetCounter{CharEncumberedMaxDexCount}{3}
			\SetCounter{CharEncumberedSpeedReducedBool}{\value{CharSpeedReducibleBool}}}{
			\SetLength\loadaslength{1pt*\value{CharHeavyLoadCount}}
			\ifthenelse{\lengthtest{\TotalCarriedWeight<\loadaslength}}{
				\SetCounter{CharEncumbranceLevelCount}{3}
				\SetCounter{CharEncumberedArmorCheckPenaltyCount}{-6}
				\SetCounter{CharEncumberedMaxDexCount}{1}
				\SetCounter{CharEncumberedSpeedReducedBool}{\value{CharSpeedReducibleBool}}}{
				\SetCounter{CharEncumbranceLevelCount}{4}
				\SetCounter{CharEncumberedArmorCheckPenaltyCount}{-10}
				\SetCounter{CharEncumberedMaxDexCount}{0}
				\SetCounter{CharEncumberedSpeedReducedBool}{\value{CharSpeedReducibleBool}}}}}
	\ifthenelse{\value{CharEncumberedMaxDexCount}<\value{CharMaxDexBonusCount}}
	{\SetCounter{CharMaxDexBonusCount}{\value{CharEncumberedMaxDexCount}}}{}
	\renewcommand{\do}[1]{
		\MiscBonus{##1}{\value{CharEncumberedArmorCheckPenaltyCount}}
	}\dolistloop{\ArmorCheckSkillsList}
}

\newcommand\CalculateEncumbrance{
	\CalculateLoads
	\CalculateWeights
	\CheckEncumbrance
}

\newcommand\EncumbranceBox[1]{
	\ifthenelse{#1 = \value{CharEncumbranceLevelCount}}{$\cancel{\square}$}{$\square$}
}

%%%% Spells %%%%

%% Initialize variables %%
\renewcommand{\do}[1]{
	\expandafter\newcommand\csname CharSpellcastingClass#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingClass#1Ability\endcsname{}
	\NewCounter{CharCL#1Count}
	\NewCounter{CharSpellcastingClass#1MaxSpellLevelCount}
	\SetCounter{CharSpellcastingClass#1MaxSpellLevelCount}{-1}
	\NewCounter{CharSpellcasting#1HasCantrips}
	\SetCounter{CharSpellcasting#1HasCantrips}{0}
	\expandafter\NewDocumentCommand\csname NewSpellcasting#1\endcsname{s O{9} m m m}{
		\IfBooleanF ##1 {\SetCounter{CharSpellcasting#1HasCantrips}{1}}
		\SetCounter{CharSpellcastingClass#1MaxSpellLevelCount}{##2}
		\expandafter\renewcommand\csname CharSpellcastingClass#1\endcsname{##3}
		\expandafter\renewcommand\csname CharSpellcastingClass#1Ability\endcsname{##5}
		\SetCounter{CharCL#1Count}{##4}
	}
	\ForLoop{@i}{0}{\value{@i}<10}{
		\NewCounter{CharAbilitySpellSlots#1\arabic{@i}Count}
		\NewCounter{CharClassSpellSlots#1\arabic{@i}Count}
		\NewCounter{CharBonusSpellSlots#1\arabic{@i}Count}
		\NewCounter{CharTotalSpellSlots#1\arabic{@i}Count}
		\NewCounter{CharSpellsKnown#1\arabic{@i}Count}
		\expandafter\edef\csname Char\arabic{@i}SpellsList#1\endcsname{}
	}
}\docsvlist{One,Two}

% Initialize variables for calculating spell range from caster level
\NewCounter{CharSpellRangeCloseCount}
\NewCounter{CharSpellRangeMediumCount}
\NewCounter{CharSpellRangeLongCount}
\newcommand{\CalculateSpellRange}[1]{
	\SetCounter{CharSpellRangeCloseCount}{25+\value{CharCL#1Count}/2*5}
	\SetCounter{CharSpellRangeMediumCount}{100+\value{CharCL#1Count}*10}
	\SetCounter{CharSpellRangeLongCount}{400+\value{CharCL#1Count}*40}
}


%% Commands for declaring spellcasting classes and adding spell slots and spells known%%
\NewDocumentCommand{\NewSpellcasting}{s O{9} m m m}{
	\ifthenelse{\equal{\CharSpellcastingClassOne}{}}{
		\IfBooleanTF #1 {\NewSpellcastingOne*[#2]{#3}{#4}{#5}} {\NewSpellcastingOne[#2]{#3}{#4}{#5}}
	}{
		\IfBooleanTF #1 {\NewSpellcastingTwo*[#2]{#3}{#4}{#5}} {\NewSpellcastingTwo[#2]{#3}{#4}{#5}}
	}
}

\newcommand{\AddBonusSpellSlotsOne}[2]{
	\AddToCounter{CharBonusSpellSlotsOne#1Count}{#2}}
\newcommand{\AddBonusSpellSlotsTwo}[2]{
	\AddToCounter{CharBonusSpellSlotsTwo#1Count}{#2}}

\newcommand{\AddSpellSlotsOne}[2]{
	\AddToCounter{CharClassSpellSlotsOne#1Count}{#2}}
\newcommand{\AddSpellSlotsTwo}[2]{
	\AddToCounter{CharClassSpellSlotsTwo#1Count}{#2}}
\newcommand{\SetSpellSlotsOne}[2]{
	\SetCounter{CharClassSpellSlotsOne#1Count}{#2}}
\newcommand{\SetSpellSlotsTwo}[2]{
	\SetCounter{CharClassSpellSlotsTwo#1Count}{#2}}
\newcommand{\AddSpellsKnownOne}[2]{
	\AddToCounter{CharSpellsKnownOne#1Count}{#2}}
\newcommand{\AddSpellsKnownTwo}[2]{
	\AddToCounter{CharSpellsKnownTwo#1Count}{#2}}

\newcommand{\AddSpellSlots}[2]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddSpellSlotsOne{#1}{#2}}{\AddSpellSlotsTwo{#1}{#2}}}
\newcommand{\AddSpellsKnown}[2]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddSpellsKnownOne{#1}{#2}}{\AddSpellsKnownTwo{#1}{#2}}}
\newcommand{\AddBonusSpellSlots}[2]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddBonusSpellSlotsOne{#1}{#2}}{\AddBonusSpellSlotsTwo{#1}{#2}}
}


% Utilities for adding spell slots and spells known in bulk in class definitions %
\ProvideDocumentCommand{\AddSpellSlotsByLevel}{m m m}{% {Spell Level}{csv of levels where you get spell slots}{Character Level}
	\renewcommand{\do}[1]{
		\ifthenelse{#3 < ##1}{}{
			\AddSpellSlots{#1}{1}
		}
	}\docsvlist{#2}
}
\ProvideDocumentCommand{\AddSpellsKnownByLevel}{m m m}{% {Spell Level}{csv of levels where you get spells Known}{Character Level}
	\renewcommand{\do}[1]{
		\ifthenelse{#3 < ##1}{}{
			\AddSpellsKnown{#1}{1}
		}
	}\docsvlist{#2}
}
%% Commands for defining spells and adding them to a character %%

\ProvideDocumentCommand{\AddSpell}{o m m}{%[Class]{Level}{Spell Name}
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{
		\listcsinsert{Char#2SpellsListOne}{#3}
	}{
		\listcsinsert{Char#2SpellsListTwo}{#3}
	}
	%% Implementation for when the switch to class-specific spell lists (instead of SpellcastingClassOne/SpellcastingClassTwo) is made
	%	\IfValueTF #1 {
	%		\listcsinsert{Char#1#2SpellsList}{#3}
	%		\StepCounter{Char#1#2SpellsActuallyKnown}
	%	}{
	%		\listcsinsert{Char\CharCurrentSpellcastingClass #2SpellsList}{#3}
	%		\StepCounter{Char\CharCurrentSpellcastingClass #2SpellsActuallyKnown}
	%	}
}

\newcommand{\DeclareSpellDescription}[2]{
	\expandafter\newcommand\csname Spell#1LongDescription\endcsname{#2}
}

\ProvideDocumentCommand{\DeclareSpell}{m >{\SplitArgument{7}{|}}m O{}}{%{Name}{Attributes}[Short desc]
	\csdef{Spell#1ShortDescription}{#3}%
	\DeclareSpellInternal{#1}#2%
	\NewCounter{CharSpell#1PreparedCount}%
	\NewCounter{CharSpell#1CastCount}%
}

\ProvideDocumentCommand{\DeclareSpellInternal}{m m m m m m m m m}{%Name, School, Components, Cast Time, Range, Effect Type: Effect, Duration, Save, SR
	\csdef{Spell#1School}{#2}%
	\csdef{Spell#1Components}{#3}%
	\csdef{Spell#1CastTime}{#4}%
	\csdef{Spell#1Range}{#5}%
	\DeclareSpellEffect{#1}{#6}%
	\csdef{Spell#1Duration}{#7}%
	\csdef{Spell#1Save}{#8}%
	\csdef{Spell#1SR}{#9}%
}
\ProvideDocumentCommand{\DeclareSpellEffectInternal}{m m m}{%
	\csdef{Spell#1EffectType}{#2}%
	\csdef{Spell#1Effect}{#3}%
}

\ProvideDocumentCommand{\DeclareSpellEffect}{m >{\SplitArgument{1}{:}}m}{%
	\DeclareSpellEffectInternal{#1}#2%
}

%% Command to be run at sheet initialization %%
\newcommand{\InitializeSpellSlots}{
	\ifthenelse{\equal{\CharSpellcastingClassOneAbility}{}}{}{
		\SetCounter{CharTotalSpellSlotsOne0Count}{\value{CharClassSpellSlotsOne0Count} + \value{CharBonusSpellSlotsOne0Count}}
		\ForLoop{@i}{1}{\value{@i}<10}{
			\SetCounter{CharAbilitySpellSlotsOne\arabic{@i}Count}{(\value{Char\CharSpellcastingClassOneAbility ModCount}+4-\value{@i})/4}
			\SetCounter{CharTotalSpellSlotsOne\arabic{@i}Count}{
				\value{CharAbilitySpellSlotsOne\arabic{@i}Count} +
				\value{CharClassSpellSlotsOne\arabic{@i}Count} +
				\value{CharBonusSpellSlotsOne\arabic{@i}Count}
			}
		}
		\AddDebug{Adjusting max Spell Level for \CharSpellcastingClassOne}
		\AddDebug{Ability = \CharSpellcastingClassOneAbility}
		\AddDebug{-Ability score = \arabic{Char\CharSpellcastingClassOneAbility Count}}
		\AddDebug{-New max Spell Level = \DoMath{\value{Char\CharSpellcastingClassOneAbility Count} - 10}}
		\AddDebug{-Old max Spell Level = \arabic{CharSpellcastingClassOneMaxSpellLevelCount}}
		\DoMath*{\value{Char\CharSpellcastingClassOneAbility Count} - 10}
		\ifthenelse{\value{CharSpellcastingClassOneMaxSpellLevelCount} > \value{@DoMathCounter}}{
			\SetCounter{CharSpellcastingClassOneMaxSpellLevelCount}{\value{Char\CharSpellcastingClassOneAbility Count} - 10}
			\AddDebug{-Max Spell Level set to \arabic{CharSpellcastingClassOneMaxSpellLevelCount}}
		}{
			\AddDebug{-No adjustment needed}
		}
	}
	\ifthenelse{\equal{\CharSpellcastingClassTwoAbility}{}}{}{
		\SetCounter{CharTotalSpellSlotsTwo0Count}{\value{CharClassSpellSlotsTwo0Count} + \value{CharBonusSpellSlotsTwo0Count}}
		\ForLoop{@i}{1}{\value{@i}<10}{
			\SetCounter{CharAbilitySpellSlotsTwo\arabic{@i}Count}{(\value{Char\CharSpellcastingClassTwoAbility ModCount}+4-\value{@i})/4}
			\SetCounter{CharTotalSpellSlotsTwo\arabic{@i}Count}{
				\value{CharAbilitySpellSlotsTwo\arabic{@i}Count} +
				\value{CharClassSpellSlotsTwo\arabic{@i}Count} +
				\value{CharBonusSpellSlotsTwo\arabic{@i}Count}
			}
		}
		\AddDebug{Adjusting max Spell Level for \CharSpellcastingClassTwo}
		\AddDebug{-Ability score = \arabic{Char\CharSpellcastingClassTwoAbility Count}}
		\AddDebug{-New max Spell Level = \DoMath{\value{Char\CharSpellcastingClassTwoAbility Count} - 10}}
		\AddDebug{-Old max Spell Level = \arabic{CharSpellcastingClassTwoMaxSpellLevelCount}}
		\DoMath*{\value{Char\CharSpellcastingClassTwoAbility Count} - 10}
		\ifthenelse{\value{CharSpellcastingClassTwoMaxSpellLevelCount} > \value{@DoMathCounter}}{
			\SetCounter{CharSpellcastingClassTwoMaxSpellLevelCount}{\value{Char\CharSpellcastingClassTwoAbility Count} - 10}
			\AddDebug{-Max Spell Level set to \arabic{CharSpellcastingClassTwoMaxSpellLevelCount}}
		}{
			\AddDebug{-No adjustment needed}
		}
	}
}

%% Magic Specializations e.g. wizard schools
\renewcommand{\do}[1]{
	\expandafter\newcommand\csname CharSpellcastingOneSpecialization#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingOneSpecialization#1Type\endcsname{Specialization}
	\expandafter\newcommand\csname AddSpellcastingOneSpecialization#1\endcsname[2][Specialization]{
		\expandafter\renewcommand\csname CharSpellcastingOneSpecialization#1Type\endcsname{##1}
		\expandafter\renewcommand\csname CharSpellcastingOneSpecialization#1\endcsname{##2}
	}
	\expandafter\newcommand\csname CharSpellcastingTwoSpecialization#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingTwoSpecialization#1Type\endcsname{Specialization}
	\expandafter\newcommand\csname AddSpellcastingTwoSpecialization#1\endcsname[2][Specialization]{
		\expandafter\renewcommand\csname CharSpellcastingTwoSpecialization#1Type\endcsname{##1}
		\expandafter\renewcommand\csname CharSpellcastingTwoSpecialization#1\endcsname{##2}
	}
}\docsvlist{One, Two}
\newcommand\AddSpellcastingOneSpecialization[2][Specialization]{
	\ifthenelse{\equal{\CharSpellcastingOneSpecializationOne}{}}{%
		\AddSpellcastingOneSpecializationOne[#1]{#2}%
	}{%
		\AddSpellcastingOneSpecializationTwo[#1]{#2}%
	}
}
\newcommand\AddSpellcastingTwoSpecialization[2][Specialization]{
	\ifthenelse{\equal{\CharSpellcastingTwoSpecializationOne}{}}{
		\AddSpellcastingTwoSpecializationOne[#1]{#2}
	}{
		\AddSpellcastingTwoSpecializationTwo[#1]{#2}
	}
}


\renewcommand{\do}[1]{
	\expandafter\newcommand\csname CharSpellcastingOneProhibition#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingOneProhibition#1Type\endcsname{Prohibition}
	\expandafter\newcommand\csname AddSpellcastingOneProhibition#1\endcsname[2][Prohibition]{
		\expandafter\renewcommand\csname CharSpellcastingOneProhibition#1Type\endcsname{##1}
		\expandafter\renewcommand\csname CharSpellcastingOneProhibition#1\endcsname{##2}
	}
	\expandafter\newcommand\csname CharSpellcastingTwoProhibition#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingTwoProhibition#1Type\endcsname{Prohibition}
	\expandafter\newcommand\csname AddSpellcastingTwoProhibition#1\endcsname[2][Prohibition]{
		\expandafter\renewcommand\csname CharSpellcastingTwoProhibition#1Type\endcsname{##1}
		\expandafter\renewcommand\csname CharSpellcastingTwoProhibition#1\endcsname{##2}
	}
}\docsvlist{One, Two, Three}
\newcommand\AddSpellcastingOneProhibition[2][Prohibition]{
	\ifthenelse{\equal{\CharSpellcastingOneProhibitionOne}{}}{\AddSpellcastingOneProhibitionOne[#1]{#2}}{
		\ifthenelse{\equal{\CharSpellcastingOneProhibitionTwo}{}}{\AddSpellcastingOneProhibitionTwo[#1]{#2}}{
			\AddSpellcastingOneProhibitionThree[#1]{#2}}}
}
\newcommand\AddSpellcastingTwoProhibition[2][Prohibition]{
	\ifthenelse{\equal{\CharSpellcastingTwoProhibitionOne}{}}{\AddSpellcastingTwoProhibitionOne[#1]{#2}}{
		\ifthenelse{\equal{\CharSpellcastingTwoProhibitionTwo}{}}{\AddSpellcastingTwoProhibitionTwo[#1]{#2}}{
			\AddSpellcastingTwoProhibitionThree[#1]{#2}}}
}

\newcommand{\AddSpellcastingSpecialization}[2][Specialization]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddSpellcastingOneSpecialization[#1]{#2}}{\AddSpellcastingTwoSpecialization[#1]{#2}}
}
\newcommand{\AddSpellcastingProhibition}[2][Prohibition]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddSpellcastingOneProhibition[#1]{#2}}{\AddSpellcastingTwoProhibition[#1]{#2}}
}
%Spellcasting Notes
\renewcommand{\do}[1]{
	\expandafter\edef\csname CharSpellcasting#1NotesList\endcsname{}
	\expandafter\newcommand\csname AddSpellcasting#1Note\endcsname[1]{
		\expandafter\listadd\csname CharSpellcasting#1NotesList\endcsname{##1}
	}
}\docsvlist{One,Two}

%%%%Miscellany%%%%

%% Health Counter
\NewCounter{CharHPCount}
\NewCounter{CharTempHPCount}
\NewCounter{CharHPRollsCount}
\newcommand{\AddHPRoll}[1]{
	\AddToCounter{CharHPCount}{#1}
	\AddToCounter{CharHPRollsCount}{1}
}

\newcommand{\CheckHPRolls}{
	\ifthenelse{\value{HP-Mode} = 1}{ %Only run if we are in rolls mode for HP
		\AddDebug{HP Mode == 1. Checking that the number of HP rolls is correct:\\
			Number of HP rolls: \arabic{CharHPRollsCount}\\
			Level: \arabic{CharTotalLevelCount}}
		\ifthenelse{\arabic{CharHPRollsCount} < \arabic{CharTotalLevelCount}}{
			\AddDebug{Num HP rolls less than expected}
			\AddWarning{\DoMath{\value{CharTotalLevelCount} - \value{CharHPRollsCount}} HP rolls missing}
		}{
			\ifthenelse{\arabic{CharHPRollsCount} > \arabic{CharTotalLevelCount}}{
				\AddDebug{Num HP rolls more than expected}
				\AddWarning{\DoMath{\value{CharHPRollsCount} - \value{CharTotalLevelCount}} extra HP rolls}
			}{\AddDebug{Num HP rolls is correct}}
		}
	}{\AddDebug{HP Mode != 1. No need to check HP rolls}}
}

%% Miscellaneous Bonus
\newcommand{\MiscBonus}[3][]{
	\ifthenelse{\equal{#1}{}}{
		\AddToCounter{Char#2MiscCount}{#3}
	}{
		\IfCounter{Char#2#1ModCount}{
			\ifthenelse{\value{Char#2#1ModCount} < #3}{
				\AddToCounter{Char#2MiscCount}{#3 - \value{Char#2#1ModCount}}
				\SetCounter{Char#2#1ModCount}{#3}
			}{}
		}{
			\NewCounter{Char#2#1ModCount}
			\SetCounter{Char#2#1ModCount}{#3}
			\AddToCounter{Char#2MiscCount}{#3}
		}
	}
}
\newcommand{\TmpBonus}[3][]{
	\ifthenelse{\equal{#1}{}}{
		\AddToCounter{Char#2TmpCount}{#3}
	}{
		\IfCounter{Char#2#1ModCount}{
			\ifthenelse{\value{Char#2#1ModCount} < #3}{
				\AddToCounter{Char#2TmpCount}{#3 - \value{Char#2#1ModCount}}
				\SetCounter{Char#2#1ModCount}{#3}
			}{}
		}{
			\NewCounter{Char#2#1ModCount}
			\SetCounter{Char#2#1ModCount}{#3}
			\AddToCounter{Char#2TmpCount}{#3}
		}
	}
}


%%Initiative%%
\newcounter{CharInitiativeMiscCount}

%%Conditional Modifiers
\edef\CharConditionalSkillsModList{}
\edef\CharConditionalAttackModList{}
\edef\CharConditionalDefModList{}
\newcommand{\AddConditionalSkillMod}[1]{
	\listadd\CharConditionalSkillsModList{#1}}
\newcommand{\AddConditionalAttackMod}[1]{
	\listadd\CharConditionalAttackModList{#1}}
\newcommand{\AddConditionalDefMod}[1]{
	\listadd\CharConditionalDefModList{#1}}

%% Languages
\NewCounter{CharLanguagesCount}
\SetCounter{CharExpectedLanguagesCount}{0}
\let\CountLanguagesMode\BooleanFalse
\edef\CharLanguagesList{}
\ProvideDocumentCommand{\AddCharLanguage}{s m}{
	\listinsert{\CharLanguagesList}{#2}
	\StepCounter{CharLanguagesCount}
	\IfBooleanT #1 {
		\StepCounter{CharExpectedLanguagesCount}
	}
}

\newcommand{\CheckLanguagesCount}{
	\IfBooleanT \CountLanguagesMode {
		\AddDebug{Checking Char Language Count}
		\AddToCounter{CharExpectedLanguagesCount}{\value{CharSpeakLanguageRanksCount}}
		\ifthenelse{\value{CharIntBaseCount} > 9}{
			\AddDebug{Expecting \arabic{CharExpectedLanguagesCount} languages from race, class, etc., plus \arabic{CharSpeakLanguageRanksCount} Speak Language ranks, plus \DoMath{(\value{CharIntBaseCount} - 10) / 2} from high INT}
			\AddToCounter{CharExpectedLanguagesCount}{(\value{CharIntBaseCount} - 10) / 2}
		}{
			\AddDebug{Expecting \arabic{CharExpectedLanguagesCount} languages from race, class, etc., plus \arabic{CharSpeakLanguageRanksCount} Speak Language ranks, plus 0 from negative INT mod}
		}
		\AddToCounter{CharExpectedLanguagesCount}{\value{CharSpeakLanguageRanksCount}}
		\ifthenelse{\value{CharExpectedLanguagesCount} > \value{CharLanguagesCount}}{
			\AddWarning{Pick \DoMath{\value{CharExpectedLanguagesCount} - \value{CharLanguagesCount}} more languages}
		}{
			\ifthenelse{\value{CharExpectedLanguagesCount} < \value{CharLanguagesCount}}{
				\AddWarning{Pick \DoMath{\value{CharLanguagesCount} - \value{CharExpectedLanguagesCount}} fewer languages}
			}{}
		}
	}
}

%% XP
\NewCounter{CharXPCount}
\NewCounter{CharNextLevelXPCount}
\NewCounter{XP-Mode}

%% Command to initialize character variables for companions (animal companions, special mounts, familiars, cohorts)

\ProvideDocumentCommand{\InitCompanionVariablesCommon}{m}{
	\renewcommand\do[1]{\csdef{#1##1}{}}%
	\docsvlist{Name,Alignment,Religion,Homeland,Race,Level,Gender,Age, Size}

	%Ability Scores
	\renewcommand\do[1]{%
		\NewCounter{#1##1Count}
		\NewCounter{#1##1BaseCount}
		\NewCounter{#1##1MiscCount}
		\NewCounter{#1##1TmpCount}
		\NewCounter{#1##1ModCount}
		\expandafter\newcommand\csname Set#1##1\endcsname[1]{
			\SetCounter{#1##1BaseCount}{####1}
		}
	}\dolistloop{\AbilityScoresList}
	\cslet{Compute#1AbilityScores}\ComputeAbilityScores
	\expandafter\PatchAllCmd\csname Compute#1AbilityScores\endcsname{Char}{#1}

	%Skills
	\renewcommand\do[1]{%
		\NewCounter{#1##1Count}
		\NewCounter{#1##1ClassSkillBool}
		\NewCounter{#1##1RanksCount}
		\NewCounter{#1##1MiscCount}
	}\dolistloop{\SkillsList}

	\cslet{Add#1SkillRanks}\AddRanks
	\expandafter\PatchAllCmd\csname Add#1SkillRanks\endcsname{Char}{#1}
	\cslet{Calculate#1SkillTotals}\CalculateSkillTotals
	\expandafter\PatchAllCmd\csname Calculate#1SkillTotals\endcsname{Char}{#1}

	%Feats
	\csedef{#1FeatsList}{}
	\NewCounter{#1FeatsCount}
	\NewCounter{#1BonusFeatsCount}
	\expandafter\NewDocumentCommand\csname Add#1Feat\endcsname{s s O{1} m}{
		\IfBooleanTF ##1 {
			\IfBooleanF ##2 {
				\AddToCounter{#1BonusFeatsCount}{-##3}
			}
			\ifthenelse{##3 = 1}{%
				\listcsadd{#1FeatsList}{##4$^B$}%
			}{%
				\listcsadd{#1FeatsList}{##4$^B\times##3$}%
			}%
		}{%
			\ifthenelse{##3 = 1}{%
				\listcsadd{#1FeatsList}{##4}%
			}{%
				\listcsadd{#1FeatsList}{##4 $\times##3$}%
			}%
			\AddToCounter{#1FeatsCount}{-##3}
		}
	}

	\NewCounter{#1BABCount}
	\NewCounter{#1IteratedAttacksCount}
	\NewCounter{#1IteratedAttackBonusCount}
	\NewCounter{#1ExtraAttacksCount}


	\let\DeclareCompanionAttack\DeclareWeapon
		\PatchAllCmd{\DeclareCompanionAttack}{Char}{#1}
		\patchcmd\DeclareCompanionAttack{AddWeapon}{Add#1Attack}{}{}
		\patchcmd\DeclareCompanionAttack{AddAutoWeapon}{Add#1AutoAttack}{}{}
		\PatchAllCmd{\DeclareCompanionAttack}{Weapon}{Attack}
	\forcsvlist{\DeclareCompanionAttack}{One,Two,Three}
	\expandafter\newcommand\csname Add#1Attack\endcsname[7]{%
		\ifthenelse{\equal\cs{#1AttackOneName}{}}{%
		\cs{Add#1AttackOne}{##1}{##2}{##3}{##4}{##5}{##6}{##7}}{%
		\ifthenelse{\equal\cs{#1AttackTwoName}{}}{%
			\cs{Add#1AttackTwo}{##1}{##2}{##3}{##4}{##5}{##6}{##7}%
		}{%
		\ifthenelse{\equal\cs{#1AttackThreeName}{}}{%
				\cs{Add#1AttackThree}{##1}{##2}{##3}{##4}{##5}{##6}{##7}%
		}{%
			\cs{Add#1AttackOne}{##1}{##2}{##3}{##4}{##5}{##6}{##7}%
		}}}%
	}
	\expandafter\newcommand\csname Add#1AutoAttack\endcsname[9][0]{%
		\ifcsvoid{#1AttackOneName}{%
			\cs{Add#1AutoAttackOne}[##1]{##2}{##3}{##4}{##5}{##6}{##7}{##8}{##9}%
		}{\ifcsvoid{#1AttackTwoName}{%
			\cs{Add#1AutoAttackTwo}[##1]{##2}{##3}{##4}{##5}{##6}{##7}{##8}{##9}%
		}{\ifcsvoid{#1AttackThreeName}{%
			\cs{Add#1AutoAttackThree}[##1]{##2}{##3}{##4}{##5}{##6}{##7}{##8}{##9}%
		}{
	}}}%
	}

	\NewCounter{#1ArmorBonusCount}
	\expandafter\newcommand\csname Add#1ArmorBonus\endcsname[1]{\ifthenelse{\value{#1ArmorBonusCount}<#1}{\SetCounter{#1ArmorBonusCount}{#1}}{}}
	\NewCounter{#1ShieldBonusCount}
	\expandafter\newcommand\csname Add#1ShieldBonus\endcsname[1]{\ifthenelse{\value{#1ShieldBonusCount}<#1}{\SetCounter{#1ShieldBonusCount}{#1}}{}}
	\NewCounter{#1NaturalArmorModCount}
	\expandafter\newcommand\csname Add#1NaturalArmorBonus\endcsname[1]{\ifthenelse{\value{#1NaturalArmorModCount}<#1}{\Setcounter{#1NaturalArmorModCount}{#1}}{}}
	\NewCounter{#1DodgeModCount}
	\expandafter\newcommand\csname Add#1DodgeBonus\endcsname[1]{\AddToCounter{#1DodgeModCount}{#1}}
	\NewCounter{#1DeflectionModCount}
	\expandafter\newcommand\csname Add#1DeflectionBonus\endcsname[1]{\ifthenelse{\value{#1DeflectionModCount}<#1}{\SetCounter{#1DeflectionModCount}{#1}}{}}
	\NewCounter{#1ACMiscCount}\NewCounter{#1ACTmpCount}
	\NewCounter{#1TouchACMiscCount}\NewCounter{#1TouchACTmpCount}
	\NewCounter{#1FlatFootedACMiscCount}\NewCounter{#1FlatFootedACTmpCount}
	\SetCounter{#1MaxDexBonusCount}{100}

	\renewcommand{\do}[1]{
		\NewCounter{#1##1Count}
		\NewCounter{#1##1MiscCount}
	}\docsvlist{Fortitude, Reflex, Will}

	\newcounter{#1InitiativeMiscCount}

	\NewCounter{#1SizeModCount}
	\NewCounter{#1SpecialSizeModCount}
	\expandafter\newcommand\csname Set#1Size\endcsname[1]{
		\cs{Set#1Size##1}
	}
	\cslet{Set#1SizeFine}\SetSizeFine
	\expandafter\PatchAllCmd\csname Set#1SizeFine\endcsname{Char}{#1}
	\cslet{Set#1SizeDiminutive}\SetSizeDiminutive
	\expandafter\PatchAllCmd\csname Set#1SizeDiminutive\endcsname{Char}{#1}
	\cslet{Set#1SizeTiny}\SetSizeTiny
	\expandafter\PatchAllCmd\csname Set#1SizeTiny\endcsname{Char}{#1}
	\cslet{Set#1SizeSmall}\SetSizeSmall
	\expandafter\PatchAllCmd\csname Set#1SizeSmall\endcsname{Char}{#1}
	\cslet{Set#1SizeMedium}\SetSizeMedium
	\expandafter\PatchAllCmd\csname Set#1SizeMedium\endcsname{Char}{#1}
	\cslet{Set#1SizeLarge}\SetSizeLarge
	\expandafter\PatchAllCmd\csname Set#1SizeLarge\endcsname{Char}{#1}
	\cslet{Set#1SizeHuge}\SetSizeHuge
	\expandafter\PatchAllCmd\csname Set#1SizeHuge\endcsname{Char}{#1}
	\cslet{Set#1SizeGargantuan}\SetSizeGargantuan
	\expandafter\PatchAllCmd\csname Set#1SizeGargantuan\endcsname{Char}{#1}
	\cslet{Set#1SizeColossal}\SetSizeColossal
	\expandafter\PatchAllCmd\csname Set#1SizeColossal\endcsname{Char}{#1}


	\csedef{#1SpecialQualityList}{}
	\csedef{#1SpecialAttackList}{}
	\csdef{Add#1SpecialQuality}##1{\listcsinsert{##1}{#1SpecialQualityList}}
	\csdef{Add#1SpecialAttack}##1{\listcsinsert{##1}{#1SpecialAttackList}}

	%% Special Defenses %%
	\csedef{#1ResistancesList}{}
	\csdef{Add#1Resistance}##1##2{
		\ifinlistcs{##1}{#1ImmunitiesList}{}{
			\ifinlistcs{##1}{#1ResistancesList}{}{
				\NewCounter{#1Resist##1Count}
				\listcsadd{#1ResistancesList}{##1}
			}
			\ifthenelse{\value{#1Resist##1Count} < ##2}{
				\SetCounter{#1Resist##1Count}{##2}
			}{}
		}
	}
	\expandafter\NewDocumentCommand\csname Print#1Resistances\endcsname{O{, } O{}}{%
		\edef\@PrintList{}%
		\edef\@@PrintList{}%
		\edef\@PrintListlast{}%
		\renewcommand{\do}[1]{%
			\ifthenelse{\value{#1Resist####1Count} = 0}{}{%
				\let\@@PrintList\@PrintList%
				\edef\@PrintListlast{Resist ####1 \arabic{#1Resist####1Count}}%
				\listadd{\@PrintList}{Resist ####1 \arabic{#1Resist####1Count}}%
			}%
		}\dolistcsloop{#1ResistancesList}%
		\renewcommand{\do}[1]{%
			####1##1%
		}\dolistloop{\@@PrintList}%
		\ifthenelse{\equal\@@PrintList{}}{}{##2}\@PrintListlast%
	}
	\csedef{#1ImmunitiesList}{}
	\expandafter\newcommand\csname Add#1Immunity\endcsname [1]{
		\ifinlistcs{##1}{#1ImmunitiesList}{}{
			\listcsinsert{#1ImmunitiesList}{##1}
			\ifinlistcs{##1}{#1ResistancesList}{
				\SetCounter{#1Resist##1Count}{0}
			}{}
		}
	}
	\csedef{#1DRTypesList}{}
	\expandafter\newcommand\csname Add#1DR\endcsname[2]{
		\ifinlistcs{##1}{#1DRTypesList}{}{
			\NewCounter{#1DR/##1Count}
			\listcsadd{#1DRTypesList}{##1}
		}
		\ifthenelse{\value{#1DR/##1Count} < ##2}{
			\SetCounter{#1DR/##1Count}{##2}
		}{}
	}
	\expandafter\NewDocumentCommand\csname Print#1DR\endcsname{O{, } O{}}{%
		\edef\@PrintList{}%
		\edef\@@PrintList{}%
		\edef\@PrintListlast{}%
		\renewcommand{\do}[1]{%
			\let\@@PrintList\@PrintList%
			\edef\@PrintListlast{DR \arabic{#1DR/####1Count}/####1}%
			\listadd{\@PrintList}{DR \arabic{#1DR/####1Count}/####1}%
		}\dolistcsloop{#1DRTypesList}%
		\renewcommand{\do}[1]{%
			####1##1%
		}\dolistloop{\@@PrintList}%
		\ifthenelse{\equal\@@PrintList{}}{}{##2}\@PrintListlast%
	}
	\NewCounter{#1SpellResistanceCount}
	\csdef{Add#1SpellResistance}##1{
		\SetCounter{#1SpellResistanceCount}{\maxof{\value{#1SpellResistanceCount}}{##1}}
	}

	\csedef{#1SpecialDefensesList}{}
	\expandafter\newcommand\csname Add#1SpecialDefense\endcsname[1]{
		\listcsinsert{#1SpecialDefensesList}{##1}
	}

	%%Conditional Modifiers
	\csedef{#1ConditionalSkillsModList}{}
	\csedef{#1ConditionalAttackModList}{}
	\csedef{#1ConditionalDefModList}{}
	\expandafter\newcommand\csname Add#1ConditionalSkillMod\endcsname[1]{%
		\listcsadd{#1ConditionalSkillsModList}{##1}}
	\expandafter\newcommand\csname Add#1ConditionalAttackMod\endcsname[1]{%
		\listcsadd{#1ConditionalAttackModList}{##1}}
	\expandafter\newcommand\csname Add#1ConditionalDefMod\endcsname[1]{%
		\listcsadd{#1ConditionalDefModList}{##1}}


	\expandafter\newcommand\csname Initialize#1\endcsname{
		\cs{Compute#1AbilityScores}
		\SetCounter{#1DextoACCount}{\minof{\value{#1DexModCount}}{\value{#1MaxDexBonusCount}}}
		\cs{Calculate#1SkillTotals}
	}
}

%%%%Sheet Initialization%%%%

\newcommand{\Initialize}{
	\CalculateNextLevelXP
	\ComputeAbilityScores
	% add Con to HP
	\ifthenelse{\value{HP-Mode} > 0}{\AddToCounter{CharHPCount}{\value{CharConModCount} * \value{CharTotalLevelCount}}}{}
	% add INT to Skill Ranks
	\AddIntToSkillRanks
	\SetCounter{CharIteratedAttacksCount}{(\value{CharBABCount}-1)/5+1}
	\InitializeSpellSlots
	\CalculateEncumbrance
	\CalculateSkillTotals
	\SpeedInitialize
	\SetCounter{CharDextoACCount}{\minof{\value{CharDexModCount}}{\value{CharMaxDexBonusCount}}}
}

\newcommand{\RunChecks}{
	\CheckHPRolls
	\CheckSkillRanks
	\CheckFeatsCount
	\CheckLanguagesCount
}

%Functions for adding class specific checks and warnings:
\NewDocumentCommand{\CheckRightNumberSelected}{m m o}{
	\gappto{\RunChecks}{

		\ifthenelse{\value{Char#1Count} < 0}{
			\AddWarning{\DoMath{-\value{Char#1Count}} too many selections made for #2}
		}{
			\ifthenelse{\value{Char#1Count} > 0}{
				\AddWarning{Make \arabic{Char#1Count} more selections for #2.\IfNoValueF{#3}{ Use the function \texttt{\textbackslash#3}} to add one.}
			}{}}
	}
}

\NewDocumentCommand{\CheckIsSelected}{m m o}{
	\gappto{\RunChecks}{
		\ifcsempty{Char#1}{%
			\AddWarning{No #2 is selected.\IfNoValueF{#3}{ Use the function \texttt{\textbackslash#3}} to select it.}%
		}{}
	}
}

\DeclareOption{Leadership}{
	\renewcommand\do[1]{
		\newcounter{Char#1LeadershipScoreCount}
		\newcounter{Char#1LeadershipScoreMiscCount}
		\newcounter{Char#1LeadershipScoreReputationCount}
	}\docsvlist{Cohort,Follower}\do{}
	\newcommand{\CharLeadershipKeyAbility}{Cha}

	\let\CharLeadershipReputationModifiersList\empty
	\let\CharCohortLeadershipReputationModifiersList\empty
	\let\CharFollowerLeadershipReputationModifiersList\empty
	\NewDocumentCommand\AddLeadershipReputationModifier{s O{} m O{1} m}{%[Follower||Cohort]{Name}[Count]{Bonus}: If starred the character will be treated as having the modifier
		\IfBooleanT #1 {\addtocounter{Char#2LeadershipScoreReputationCount}{#5 * #4}}%
		\listcsadd{Char#2LeadershipReputationModifiersList}{%
			#1|#3|#4|#5%
		}
	}

	\ProvideDocumentCommand{\CalculateLeadership}{}{
		\SetCounter{CharLeadershipScoreCount}{\value{Char\CharLeadershipKeyAbility ModCount} + \value{CharTotalLevelCount} +\value{CharLeadershipScoreMiscCount} + \value{CharLeadershipScoreReputationCount}}
		\SetCounter{CharCohortLeadershipScoreCount}{\value{CharLeadershipScoreCount} +\value{CharCohortLeadershipScoreMiscCount} + \value{CharCohortLeadershipScoreReputationCount}}
		\SetCounter{CharFollowerLeadershipScoreCount}{\value{CharLeadershipScoreCount} +\value{CharFollowerLeadershipScoreMiscCount} + \value{CharFollowerLeadershipScoreReputationCount}}
		\AddToCounter{CharFollowerLeadershipScoreMiscCount}{\value{CharLeadershipScoreMiscCount}}
		\AddToCounter{CharFollowerLeadershipScoreReputationCount}{\value{CharLeadershipScoreReputationCount}}
		\AddToCounter{CharCohortLeadershipScoreMiscCount}{\value{CharLeadershipScoreMiscCount}}
		\AddToCounter{CharCohortLeadershipScoreReputationCount}{\value{CharLeadershipScoreReputationCount}}
	}
	\gappto{\Initialize}{\CalculateLeadership}

	\AtBeginDocument{%
		\InitCompanionVariables{Cohort}%
	}
}
\ProcessOptions\relax