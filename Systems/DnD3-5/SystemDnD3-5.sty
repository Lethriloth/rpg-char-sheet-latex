\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{SystemDnD3-5}[2016/12/29 D\&D 3.5e system-specific features for rpgcharsheet2.cls]
\RequirePackage{Systems/D20-Common/SystemD20-Common}

%%%% Character Attributes %%%%

%% Ability Scores %%


%% Armor Class %%

%% Saving Throws

%% Special Defenses

%% BAB, attacks, combat maneuvers
\renewcommand{\do}[1]{
	\NewCounter{Char#1MiscCount}
	\NewCounter{Char#1TmpCount}
}\docsvlist{Melee,Ranged,Grapple,BullRush,Disarm,Overrun,Sunder,Trip}



%% Size
\NewCounter{CharSpecialSizeModCount}
\newcommand\SetSize[1]{
	\csname SetSize#1\endcsname
}
\newcommand\SetSizeFine{
	\renewcommand{\CharSize}{Fine}
	\SetCounter{CharSizeModCount}{8}
	\SetCounter{CharSpecialSizeModCount}{-16}
}
\newcommand\SetSizeDiminutive{
	\renewcommand{\CharSize}{Diminutive}
	\SetCounter{CharSizeModCount}{4}
	\SetCounter{CharSpecialSizeModCount}{-12}
}
\newcommand\SetSizeTiny{
	\renewcommand{\CharSize}{Tiny}
	\SetCounter{CharSizeModCount}{2}
	\SetCounter{CharSpecialSizeModCount}{-8}
}
\newcommand\SetSizeSmall{
	\renewcommand{\CharSize}{Small}
	\SetCounter{CharSizeModCount}{1}
	\SetCounter{CharSpecialSizeModCount}{-4}
}
\newcommand\SetSizeMedium{
	\renewcommand{\CharSize}{Medium}
	\SetCounter{CharSizeModCount}{0}
	\SetCounter{CharSpecialSizeModCount}{0}
}
\newcommand\SetSizeLarge{
	\renewcommand{\CharSize}{Large}
	\SetCounter{CharSizeModCount}{-1}
	\SetCounter{CharSpecialSizeModCount}{4}
}
\newcommand\SetSizeHuge{
	\renewcommand{\CharSize}{Huge}
	\SetCounter{CharSizeModCount}{-2}
	\SetCounter{CharSpecialSizeModCount}{8}
}
\newcommand\SetSizeGargantuan{
	\renewcommand{\CharSize}{Gargantuan}
	\SetCounter{CharSizeModCount}{-4}
	\SetCounter{CharSpecialSizeModCount}{12}
}
\newcommand\SetSizeColossal{
	\renewcommand{\CharSize}{Colossal}
	\SetCounter{CharSizeModCount}{-8}
	\SetCounter{CharSpecialSizeModCount}{16}
}

%% Speed
\newcommand{\CharManeuverability}{}
\newcommand{\AddFlySpeed}[2]{
	\SetCounter{CharFlySpeedCount}{#1}
	\renewcommand{\CharManeuverability}{#2}
}


%%%% Feats, Class & Race Features %%%%

%% Class Importing %%
\NewDocumentCommand{\ImportCharClass}{s O{} m m}{
	\AddDebug{IMPORTCHARCLASS: add #4 Levels of #3}
	\input{"\datafolder/Classes/#3.tex"}

	\newcounter{Char#3SpareSkillRanksCount}
	\ifthenelse{\value{CharTotalLevelCount} = 0}{
		\SetCounter{Char#3SpareSkillRanksCount}{(\value{CharBonusSkillRanksPerLevelCount}+\value{#3SkillRanksPerLevelCount}) * (3 + #4)}
	}{
		\SetCounter{Char#3SpareSkillRanksCount}{(\value{CharBonusSkillRanksPerLevelCount}+\value{#3SkillRanksPerLevelCount}) * #4}
	}

	\ImportCharClassCommon{#3}{#4}

	\ifthenelse{\equal{#2}{}}{
		\appto\CharLevel{\capitalize{#3} #4 }
	}{
		\appto\CharLevel{#2 #4 }
	}
	\renewcommand\do[1]{
		\IsClassSkill{##1}
	}\expandafter\dolistloop\csname#3ClassSkillsList\endcsname
}


%%%% Skills %%%%

% Define Skills lists
\forcsvlist{\listadd\SkillsList}{Appraise, Balance, Bluff, Climb, Concentration, CraftOne, CraftTwo, CraftThree, DecipherScript, Diplomacy, DisableDevice, Disguise, EscapeArtist, Forgery, GatherInformation, HandleAnimal, Heal, Hide, Intimidate, Jump, Listen, MoveSilently, OpenLock, PerformOne, PerformTwo, PerformThree, ProfessionOne, ProfessionTwo, Ride, Search, SenseMotive, SleightOfHand, SpeakLanguage, Spellcraft, Spot, Survival, Swim, Tumble, UseMagicDevice, UseRope}

% Define lists for armor check Penalty and trained-only
\forcsvlist{\listadd\ArmorCheckSkillsList}{Balance, Climb, EscapeArtist, Hide, Jump, MoveSilently, SleightOfHand, Swim, Swim, Tumble}
\forcsvlist{\listadd\TrainedSkillsList}{DecipherScript, DisableDevice, HandleAnimal, OpenLock, ProfessionOne, ProfessionTwo, SleightOfHand, SpeakLanguage, Spellcraft, Tumble, UseMagicDevice}

% Initialize skill variables
\renewcommand{\do}[1]{
	\NewCounter{Char#1Count}
	\NewCounter{Char#1ClassSkillBool}
	\NewCounter{Char#1RanksCount}
	\NewCounter{Char#1MiscCount}
}\dolistloop{\SkillsList}

%Command to add skill ranks
\newcommand\AddRanks[3][]{
	\ifthenelse{\equal#1{}}{
		\AddToCounter{Char#2RanksCount}{#3}
	}{
		\expandafter\let\expandafter\TmpClassSkillList\csname #1ClassSkillsList\endcsname
		\ifinlist{#2}{\TmpClassSkillList}
		{
			\AddToCounter{Char#2RanksCount}{#3}
		}{
			\AddToCounter{Char#2RanksCount}{#3 / 2}
		}
		\AddToCounter{Char#1SpareSkillRanksCount}{-1 * (#3)}
	}
}

%Commands to be run at sheet initialization
\newcommand{\AddIntToSkillRanks}{
	\ifthenelse{\value{AutoSkillRanks-Mode} = 1}{
		\SetCounter{@i}{1}
		\SetCounter{@j}{(\value{CharIntCount} - \value{CharIntEnhancementCount} - \value{CharIntTmpCount}) / 2 - 5}
		\renewcommand\do[1]{
			\SetCounter{@k}{\value{@j} + \value{##1SkillRanksPerLevelCount}}
			\ifthenelse{\value{@i} = 1}{
				\AddDebug{First Class is: ##1}
				\ifthenelse{\value{@k} < 1}{
					\AddDebug{Min 1 rank per level}
					\AddToCounter{Char##1SpareSkillRanksCount}{(1 - \value{##1SkillRanksPerLevelCount}) * (\value{Char##1ClassLevelCount} + 3)}
				}{
					\AddToCounter{Char##1SpareSkillRanksCount}{\value{@j} * (\value{Char##1ClassLevelCount} + 3)}
				}
			}{
				\AddDebug{Class \# \arabic{@i} is: ##1}
				\ifthenelse{\value{@k} < 1}{
					\AddDebug{Min 1 rank per level}
					\AddToCounter{Char##1SpareSkillRanksCount}{(1 - \value{##1SkillRanksPerLevelCount}) * \value{Char##1ClassLevelCount}}
				}{
					\AddToCounter{Char##1SpareSkillRanksCount}{\value{@j} * \value{Char##1ClassLevelCount}}
				}
			}
			\StepCounter{@i}
		}\dolistloop{\CharClassesList}
	}{}
}

\newcommand{\CalculateSynergyBonuses}{
	\ifthenelse{\value{CharBluffRanksCount} > 4}{
		\MiscBonus{Diplomacy}{2}
		\MiscBonus{Intimidate}{2}
		\MiscBonus{SleightOfHand}{2}
		\AddConditionalSkillMod{+2 to Disguise checks to act in character}
	}{}
	\ifthenelse{\value{CharCraftOneRanksCount} > 4}{
		\AddConditionalSkillMod{+2 to Appraise checks related to \csname CharCraftOnename\endcsname}}{}
	\ifthenelse{\value{CharCraftTwoRanksCount} > 4}{
		\AddConditionalSkillMod{+2 to Appraise checks related to \csname CharCraftTwoname\endcsname}}{}
	\ifthenelse{\value{CharCraftThreeRanksCount} > 4}{
		\AddConditionalSkillMod{+2 to Appraise checks related to \csname CharCraftThreename\endcsname}}{}
	\ifthenelse{\value{CharDecipherScriptRanksCount} > 4}{
		\ifthenelse{\value{CharSpellcraftRanksCount} > 4}{\AddConditionalSkillMod{+4 to Use Magic Device checks involving scrolls}}{\AddConditionalSkillMod{+2 to Use Magic Device checks involving scrolls}}}{}
	\ifthenelse{\value{CharEscapeArtistRanksCount} > 4}{
		\AddConditionalSkillMod{+2 to Use Rope checks involving bindings}}{}
	\ifthenelse{\value{CharHandleAnimalRanksCount} > 4}{
		\MiscBonus{Ride}{2}}{}
	\ifthenelse{\value{CharKnowledgeArcanaRanksCount} > 4}{
		\MiscBonus{Spellcraft}{2}}{}
	\ifthenelse{\value{CharKnowledgeEngineeringRanksCount} > 4}{
		\AddConditionalSkillMod{+2 to Search checks involving secret doors and similar compartments}}{}
	\ifthenelse{\value{CharKnowledgeDungeoneeringRanksCount} > 4}{
		\AddConditionalSkillMod{+2 to Survival checks when underground}}{}
	\ifthenelse{\value{CharKnowledgeGeographyRanksCount} > 4}{
		\AddConditionalSkillMod{+2 to Survival checks to keep from getting lost or for avoiding hazards}}{}
	\ifthenelse{\value{CharKnowledgeLocalRanksCount} > 4}{
		\MiscBonus{GatherInformation}{2}}{}
	\ifthenelse{\value{CharKnowledgeDungeoneeringRanksCount} > 4}{
		\AddConditionalSkillMod{+2 to Survival checks in aboveground natural environments}
	}{}
	\ifthenelse{\value{CharKnowledgeNobilityRanksCount} > 4}{
		\MiscBonus{Diplomacy}{2}}{}
	\ifthenelse{\value{CharKnowledgePlanesRanksCount} > 4}{
		\AddConditionalSkillMod{+2 to Survival checks when on other planes}}{}
	\ifthenelse{\value{CharSearchRanksCount} > 4}{
		\AddConditionalSkillMod{+2 to Survival checks to follow tracks}
	}{}
	\ifthenelse{\value{CharSenseMotiveRanksCount} > 4}{
		\MiscBonus{Diplomacy}{2}
	}{}
	\ifthenelse{\value{CharSpellcraftRanksCount} > 4}{
		\ifthenelse{\value{CharDecipherScriptRanksCount} > 4}{}{\AddConditionalSkillMod{+2 to Use Magic Device checks involving scrolls}}
	}{}
	\ifthenelse{\value{CharSurvivalRanksCount} > 4}{
		\MiscBonus{KnowledgeNature}{2}
	}{}
	\ifthenelse{\value{CharTumbleRanksCount} > 4}{
		\MiscBonus{Balance}{2}
	}{}
	\ifthenelse{\value{CharTumbleRanksCount} > 4}{
		\MiscBonus{Jump}{2}
	}{}
	\ifthenelse{\value{CharUseMagicDeviceRanksCount} > 4}{
		\AddConditionalSkillMod{+2 to Spellcraft checks to decipher scrolls}
	}{}
	\ifthenelse{\value{CharUseRopeRanksCount} > 4}{
		\AddConditionalSkillMod{+2 to Climb checks involving ropes}
		\AddConditionalSkillMod{+2 to Escape Artist checks involving ropes}
	}{}
}


%%%% Character Name & Description %%%%

%%%% Items %%%%

%% Gear %%

%% Stored Items %%

%% Weapons %%

%% Armor and Shield %%

%% Magic Item Slots %%

%% Money %%

%% Weight Carried %%

%% Carrying Capacity %%

%%%% Spells %%%%

\newcommand{\AddPrimarySpellcasting}[1]{
		\AddSpellSlots{0}{3}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 1}{
		\AddSpellSlots{0}{1}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 2}{
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 3}{
		\AddSpellSlots{0}{1}
		\AddSpellSlots{1}{1}
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 4}{
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 5}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 6}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{0}{1}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 7}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 8}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 9}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{5}{1}
	\ifthenelse{#1 > 10}{
		\AddSpellSlots{6}{1}
		\AddSpellSlots{3}{1}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 11}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{1}
	\ifthenelse{#1 > 12}{
		\AddSpellSlots{7}{1}
		\AddSpellSlots{4}{1}
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 13}{
		\AddSpellSlots{6}{1}
		\AddSpellSlots{7}{1}
	\ifthenelse{#1 > 14}{
		\AddSpellSlots{8}{1}
		\AddSpellSlots{5}{1}
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 15}{
		\AddSpellSlots{7}{1}
		\AddSpellSlots{8}{1}
	\ifthenelse{#1 > 16}{
		\AddSpellSlots{9}{1}
		\AddSpellSlots{6}{1}
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 17}{
		\AddSpellSlots{8}{1}
		\AddSpellSlots{9}{1}
	\ifthenelse{#1 > 18}{
		\AddSpellSlots{7}{1}
		\AddSpellSlots{9}{1}
		\AddSpellSlots{5}{1}
	\ifthenelse{#1 > 19}{
		\AddSpellSlots{8}{1}
		\AddSpellSlots{9}{1}
	}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
}
\newcommand{\AddSpontaneousPrimarySpellcasting}[1]{
		\AddSpellSlots{0}{5}
		\AddSpellSlots{1}{3}
	\ifthenelse{#1 > 1}{
		\AddSpellSlots{0}{1}
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 2}{
		\AddSpellSlots{1}{1}
	\ifthenelse{#1 > 3}{
		\AddSpellSlots{1}{1}
		\AddSpellSlots{2}{3}
	\ifthenelse{#1 > 4}{
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 5}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{3}{3}
	\ifthenelse{#1 > 6}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 7}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{4}{3}
	\ifthenelse{#1 > 8}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 9}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{5}{3}
	\ifthenelse{#1 > 10}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{5}{1}
	\ifthenelse{#1 > 11}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{3}
	\ifthenelse{#1 > 12}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{1}
	\ifthenelse{#1 > 13}{
		\AddSpellSlots{6}{1}
		\AddSpellSlots{7}{3}
	\ifthenelse{#1 > 14}{
		\AddSpellSlots{6}{1}
		\AddSpellSlots{7}{1}
	\ifthenelse{#1 > 15}{
		\AddSpellSlots{7}{1}
		\AddSpellSlots{8}{3}
	\ifthenelse{#1 > 16}{
		\AddSpellSlots{7}{1}
		\AddSpellSlots{8}{1}
	\ifthenelse{#1 > 17}{
		\AddSpellSlots{8}{1}
		\AddSpellSlots{9}{3}
	\ifthenelse{#1 > 18}{
		\AddSpellSlots{8}{1}
		\AddSpellSlots{9}{1}
	\ifthenelse{#1 > 19}{
		\AddSpellSlots{9}{2}
	}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
	
}
\newcommand{\AddTwoThirdsSpellcasing}[1]{
		\AddSpellSlots{0}{2}
		\AddSpellsKnown{0}{4}
	\ifthenelse{#1 > 1}{
		\AddSpellSlots{0}{1}
		\AddSpellsKnown{0}{1}
		\AddSpellsKnown{1}{2}
	\ifthenelse{#1 > 2}{
		\AddSpellSlots{1}{1}
		\AddSpellsKnown{0}{1}
		\AddSpellsKnown{1}{1}
	\ifthenelse{#1 > 3}{
		\AddSpellSlots{1}{1}
		\AddSpellsKnown{2}{2}
	\ifthenelse{#1 > 4}{
		\AddSpellSlots{1}{1}
		\AddSpellSlots{2}{1}
		\AddSpellsKnown{1}{1}
		\AddSpellsKnown{2}{1}
	\ifthenelse{#1 > 5}{
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 6}{
		\AddSpellsKnown{2}{1}
		\AddSpellsKnown{3}{2}
	\ifthenelse{#1 > 7}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{3}{1}
		\AddSpellsKnown{3}{1}
	\ifthenelse{#1 > 8}{
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 9}{
		\AddSpellsKnown{3}{1}
		\AddSpellsKnown{4}{2}
	\ifthenelse{#1 > 10}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{4}{1}
		\AddSpellsKnown{4}{1}
	\ifthenelse{#1 > 11}{
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 12}{
		\AddSpellsKnown{4}{1}
		\AddSpellsKnown{5}{2}
	\ifthenelse{#1 > 13}{
		\AddSpellSlots{0}{1}
		\AddSpellSlots{4}{1}
		\AddSpellSlots{5}{1}
		\AddSpellsKnown{5}{1}
	\ifthenelse{#1 > 14}{
		\AddSpellSlots{1}{1}
		\AddSpellSlots{5}{1}
	\ifthenelse{#1 > 15}{
		\AddSpellSlots{2}{1}
		\AddSpellsKnown{1}{1}
		\AddSpellsKnown{5}{1}
		\AddSpellsKnown{6}{2}
	\ifthenelse{#1 > 16}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{2}{1}
		\AddSpellsKnown{6}{1}
	\ifthenelse{#1 > 17}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{3}{1}
	\ifthenelse{#1 > 18}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{4}{1}
		\AddSpellsKnown{6}{1}
	\ifthenelse{#1 > 19}{
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{5}{1}
	}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
}
\newcommand{\AddHalfSpellcasting}[1]{
	\ifthenelse{#1 > 5}{
		\AddSpellSlots{2}{1}
	\ifthenelse{#1 > 6}{
		\AddSpellsKnown{2}{1}
		\AddSpellsKnown{3}{2}
	\ifthenelse{#1 > 7}{
		\AddSpellSlots{2}{1}
		\AddSpellSlots{3}{1}
		\AddSpellsKnown{3}{1}
	\ifthenelse{#1 > 8}{
		\AddSpellSlots{3}{1}
	\ifthenelse{#1 > 9}{
		\AddSpellsKnown{3}{1}
		\AddSpellsKnown{4}{2}
	\ifthenelse{#1 > 10}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{4}{1}
		\AddSpellsKnown{4}{1}
	\ifthenelse{#1 > 11}{
		\AddSpellSlots{4}{1}
	\ifthenelse{#1 > 12}{
		\AddSpellsKnown{4}{1}
		\AddSpellsKnown{5}{2}
	\ifthenelse{#1 > 13}{
		\AddSpellSlots{0}{1}
		\AddSpellSlots{4}{1}
		\AddSpellSlots{5}{1}
		\AddSpellsKnown{5}{1}
	\ifthenelse{#1 > 14}{
		\AddSpellSlots{1}{1}
		\AddSpellSlots{5}{1}
	\ifthenelse{#1 > 15}{
		\AddSpellSlots{2}{1}
		\AddSpellsKnown{1}{1}
		\AddSpellsKnown{5}{1}
		\AddSpellsKnown{6}{2}
	\ifthenelse{#1 > 16}{
		\AddSpellSlots{3}{1}
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{2}{1}
		\AddSpellsKnown{6}{1}
	\ifthenelse{#1 > 17}{
		\AddSpellSlots{4}{1}
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{3}{1}
	\ifthenelse{#1 > 18}{
		\AddSpellSlots{5}{1}
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{4}{1}
		\AddSpellsKnown{6}{1}
	\ifthenelse{#1 > 19}{
		\AddSpellSlots{6}{1}
		\AddSpellsKnown{5}{1}
	}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}}{}
}

%Initialize Spellcasting variables
\ForLoop{@i}{0}{\value{@i}<10}{
	\NewCounter{CharAbilitySpellSlotsOne\arabic{@i}Count}
	\NewCounter{CharAbilitySpellSlotsTwo\arabic{@i}Count}
	\NewCounter{CharClassSpellSlotsOne\arabic{@i}Count}
	\NewCounter{CharClassSpellSlotsTwo\arabic{@i}Count}
	\NewCounter{CharBonusSpellSlotsOne\arabic{@i}Count}
	\NewCounter{CharBonusSpellSlotsTwo\arabic{@i}Count}
	\NewCounter{CharTotalSpellSlotsOne\arabic{@i}Count}
	\NewCounter{CharTotalSpellSlotsTwo\arabic{@i}Count}
	\NewCounter{CharSpellsKnownOne\arabic{@i}Count}
	\NewCounter{CharSpellsKnownTwo\arabic{@i}Count}
}

\newcommand{\InitializeSpellSlots}{
	\ifthenelse{\equal{\CharSpellcastingClassOneAbility}{}}{}{
		\SetCounter{CharTotalSpellSlotsOne0Count}{\value{CharClassSpellSlotsOne0Count} + \value{CharBonusSpellSlotsOne0Count}}
		\ForLoop{@i}{1}{\value{@i}<10}{
			\SetCounter{CharAbilitySpellSlotsOne\arabic{@i}Count}{(\value{Char\CharSpellcastingClassOneAbility ModCount}+4-\value{@i})/4}
			\SetCounter{CharTotalSpellSlotsOne\arabic{@i}Count}{
				\value{CharAbilitySpellSlotsOne\arabic{@i}Count} +
				\value{CharClassSpellSlotsOne\arabic{@i}Count} +
				\value{CharBonusSpellSlotsOne\arabic{@i}Count}
			}
		}
		\AddDebug{Adjusting max Spell Level for \CharSpellcastingClassOne}
		\AddDebug{Ability = \CharSpellcastingClassOneAbility}
		\AddDebug{-Ability score = \arabic{Char\CharSpellcastingClassOneAbility Count}}
		\AddDebug{-New max Spell Level = \DoMath{\value{Char\CharSpellcastingClassOneAbility Count} - 10}}
		\AddDebug{-Old max Spell Level = \arabic{CharSpellcastingClassOneMaxSpellLevelCount}}
		\DoMath*{\value{Char\CharSpellcastingClassOneAbility Count} - 10}
		\ifthenelse{\value{CharSpellcastingClassOneMaxSpellLevelCount} > \value{@DoMathCounter}}{
			\SetCounter{CharSpellcastingClassOneMaxSpellLevelCount}{\value{Char\CharSpellcastingClassOneAbility Count} - 10}
			\AddDebug{-Max Spell Level set to \arabic{CharSpellcastingClassOneMaxSpellLevelCount}}
		}{
			\AddDebug{-No adjustment needed}
		}
	}
	\ifthenelse{\equal{\CharSpellcastingClassTwoAbility}{}}{}{
		\SetCounter{CharTotalSpellSlotsTwo0Count}{\value{CharClassSpellSlotsTwo0Count} + \value{CharBonusSpellSlotsTwo0Count}}
		\ForLoop{@i}{1}{\value{@i}<10}{
			\SetCounter{CharAbilitySpellSlotsTwo\arabic{@i}Count}{(\value{Char\CharSpellcastingClassTwoAbility ModCount}+4-\value{@i})/4}
			\SetCounter{CharTotalSpellSlotsTwo\arabic{@i}Count}{
				\value{CharAbilitySpellSlotsTwo\arabic{@i}Count} +
				\value{CharClassSpellSlotsTwo\arabic{@i}Count} +
				\value{CharBonusSpellSlotsTwo\arabic{@i}Count}
			}
		}
		\AddDebug{Adjusting max Spell Level for \CharSpellcastingClassTwo}
		\AddDebug{-Ability score = \arabic{Char\CharSpellcastingClassTwoAbility Count}}
		\AddDebug{-New max Spell Level = \DoMath{\value{Char\CharSpellcastingClassTwoAbility Count} - 10}}
		\AddDebug{-Old max Spell Level = \arabic{CharSpellcastingClassTwoMaxSpellLevelCount}}
		\DoMath*{\value{Char\CharSpellcastingClassTwoAbility Count} - 10}
		\ifthenelse{\value{CharSpellcastingClassTwoMaxSpellLevelCount} > \value{@DoMathCounter}}{
			\SetCounter{CharSpellcastingClassTwoMaxSpellLevelCount}{\value{Char\CharSpellcastingClassTwoAbility Count} - 10}
			\AddDebug{-Max Spell Level set to \arabic{CharSpellcastingClassTwoMaxSpellLevelCount}}
		}{
			\AddDebug{-No adjustment needed}
		}
	}
}

\newcommand{\AddBonusSpellSlotsOne}[2]{
	\AddToCounter{CharBonusSpellSlotsOne#1Count}{#2}}
\newcommand{\AddBonusSpellSlotsTwo}[2]{
	\AddToCounter{CharBonusSpellSlotsTwo#1Count}{#2}}

\newcommand{\AddSpellSlotsOne}[2]{
	\AddToCounter{CharClassSpellSlotsOne#1Count}{#2}}
\newcommand{\AddSpellSlotsTwo}[2]{
	\AddToCounter{CharClassSpellSlotsTwo#1Count}{#2}}
\newcommand{\SetSpellSlotsOne}[2]{
	\SetCounter{CharClassSpellSlotsOne#1Count}{#2}}
\newcommand{\SetSpellSlotsTwo}[2]{
	\SetCounter{CharClassSpellSlotsTwo#1Count}{#2}}
\newcommand{\AddSpellsKnownOne}[2]{
	\AddToCounter{CharSpellsKnownOne#1Count}{#2}}
\newcommand{\AddSpellsKnownTwo}[2]{
	\AddToCounter{CharSpellsKnownTwo#1Count}{#2}}

\newcommand{\AddSpellSlots}[2]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddSpellSlotsOne{#1}{#2}}{\AddSpellSlotsTwo{#1}{#2}}}
\newcommand{\AddSpellsKnown}[2]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddSpellsKnownOne{#1}{#2}}{\AddSpellsKnownTwo{#1}{#2}}}
\newcommand{\AddBonusSpellSlots}[2]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddBonusSpellSlotsOne{#1}{#2}}{\AddBonusSpellSlotsTwo{#1}{#2}}
}

% Range
\NewCounter{CharSpellRangecloseCount}
\NewCounter{CharSpellRangemediumCount}
\NewCounter{CharSpellRangelongCount}
\newcommand{\calculateSpellRange}[1]{
	\SetCounter{CharSpellRangecloseCount}{25+\value{CharCL#1Count}/2*5}
	\SetCounter{CharSpellRangemediumCount}{100+\value{CharCL#1Count}*10}
	\SetCounter{CharSpellRangelongCount}{400+\value{CharCL#1Count}*40}
}

%Magic Specializations
\renewcommand{\do}[1]{
	\expandafter\newcommand\csname CharSpellcastingOneSpecialization#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingOneSpecialization#1Type\endcsname{Specialization}
	\expandafter\newcommand\csname AddSpellcastingOneSpecialization#1\endcsname[2][Specialization]{
		\expandafter\renewcommand\csname CharSpellcastingOneSpecialization#1Type\endcsname{##1}
		\expandafter\renewcommand\csname CharSpellcastingOneSpecialization#1\endcsname{##2}
	}
	\expandafter\newcommand\csname CharSpellcastingTwoSpecialization#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingTwoSpecialization#1Type\endcsname{Specialization}
	\expandafter\newcommand\csname AddSpellcastingTwoSpecialization#1\endcsname[2][Specialization]{
		\expandafter\renewcommand\csname CharSpellcastingTwoSpecialization#1Type\endcsname{##1}
		\expandafter\renewcommand\csname CharSpellcastingTwoSpecialization#1\endcsname{##2}
	}
}\docsvlist{One, Two}
\newcommand\AddSpellcastingOneSpecialization[2][Specialization]{
	\ifthenelse{\equal{\CharSpellcastingOneSpecializationOne}{}}{%
		\AddSpellcastingOneSpecializationOne[#1]{#2}%
	}{%
		\AddSpellcastingOneSpecializationTwo[#1]{#2}%
	}
}
\newcommand\AddSpellcastingTwoSpecialization[2][Specialization]{
	\ifthenelse{\equal{\CharSpellcastingTwoSpecializationOne}{}}{
		\AddSpellcastingTwoSpecializationOne[#1]{#2}
	}{
		\AddSpellcastingTwoSpecializationTwo[#1]{#2}
	}
}


\renewcommand{\do}[1]{
	\expandafter\newcommand\csname CharSpellcastingOneProhibition#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingOneProhibition#1Type\endcsname{Prohibition}
	\expandafter\newcommand\csname AddSpellcastingOneProhibition#1\endcsname[2][Prohibition]{
		\expandafter\renewcommand\csname CharSpellcastingOneProhibition#1Type\endcsname{##1}
		\expandafter\renewcommand\csname CharSpellcastingOneProhibition#1\endcsname{##2}
	}
	\expandafter\newcommand\csname CharSpellcastingTwoProhibition#1\endcsname{}
	\expandafter\newcommand\csname CharSpellcastingTwoProhibition#1Type\endcsname{Prohibition}
	\expandafter\newcommand\csname AddSpellcastingTwoProhibition#1\endcsname[2][Prohibition]{
		\expandafter\renewcommand\csname CharSpellcastingTwoProhibition#1Type\endcsname{##1}
		\expandafter\renewcommand\csname CharSpellcastingTwoProhibition#1\endcsname{##2}
	}
}\docsvlist{One, Two, Three}
\newcommand\AddSpellcastingOneProhibition[2][Prohibition]{
	\ifthenelse{\equal{\CharSpellcastingOneProhibitionOne}{}}{\AddSpellcastingOneProhibitionOne[#1]{#2}}{
		\ifthenelse{\equal{\CharSpellcastingOneProhibitionTwo}{}}{\AddSpellcastingOneProhibitionTwo[#1]{#2}}{
			\AddSpellcastingOneProhibitionThree[#1]{#2}}}
}
\newcommand\AddSpellcastingTwoProhibition[2][Prohibition]{
	\ifthenelse{\equal{\CharSpellcastingTwoProhibitionOne}{}}{\AddSpellcastingTwoProhibitionOne[#1]{#2}}{
		\ifthenelse{\equal{\CharSpellcastingTwoProhibitionTwo}{}}{\AddSpellcastingTwoProhibitionTwo[#1]{#2}}{
			\AddSpellcastingTwoProhibitionThree[#1]{#2}}}
}

\newcommand{\AddSpellcastingSpecialization}[2][Specialization]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddSpellcastingOneSpecialization[#1]{#2}}{\AddSpellcastingTwoSpecialization[#1]{#2}}
}
\newcommand{\AddSpellcastingProhibition}[2][Prohibition]{
	\ifthenelse{\equal{\CharSpellcastingClassTwo}{}}{\AddSpellcastingOneProhibition[#1]{#2}}{\AddSpellcastingTwoProhibition[#1]{#2}}
}
%Spellcasting Notes
\renewcommand{\do}[1]{
	\expandafter\edef\csname CharSpellcasting#1NotesList\endcsname{}
	\expandafter\newcommand\csname AddSpellcasting#1Note\endcsname[1]{
		\expandafter\listadd\csname CharSpellcasting#1NotesList\endcsname{##1}
	}
}\docsvlist{One,Two}


%%%%Miscllany%%%%

%% Health Counter
\NewCounter{CharHPCount}
\NewCounter{CharHPRollsCount}
\newcommand{\HPRoll}[1]{
	\AddToCounter{CharHPCount}{#1}
	\AddToCounter{CharHPRollsCount}{1}
}

%% Miscellaneous Bonus
\newcommand{\MiscBonus}[3][]{
	\ifthenelse{\equal{#1}{}}{
		\AddToCounter{Char#2MiscCount}{#3}
	}{
		\IfCounter{Char#2#1ModCount}{
			\ifthenelse{\value{Char#2#1ModCount} < #3}{
				\AddToCounter{Char#2MiscCount}{#3 - \value{Char#2#1ModCount}}
				\SetCounter{Char#2#1ModCount}{#3}
			}{}
		}{
			\NewCounter{Char#2#1ModCount}
			\SetCounter{Char#2#1ModCount}{#3}
			\AddToCounter{Char#2MiscCount}{#3}
		}
	}
}
\newcommand{\TmpBonus}[3][]{
	\ifthenelse{\equal{#1}{}}{
		\AddToCounter{Char#2TmpCount}{#3}
	}{
		\IfCounter{Char#2#1ModCount}{
			\ifthenelse{\value{Char#2#1ModCount} < #3}{
				\AddToCounter{Char#2TmpCount}{#3 - \value{Char#2#1ModCount}}
				\SetCounter{Char#2#1ModCount}{#3}
			}{}
		}{
			\NewCounter{Char#2#1ModCount}
			\SetCounter{Char#2#1ModCount}{#3}
			\AddToCounter{Char#2TmpCount}{#3}
		}
	}
}
\newcommand{\EnhancementBonus}[2]{
	\SetCounter{@EnhancementBonusTempCounter}{#2}
	\ifthenelse{\value{@EnhancementBonusTempCounter} > \value{Char#1EnhancementCount}}{
		\SetCounter{Char#1EnhancementCount}{\value{@EnhancementBonusTempCounter}}
	}{}
}

%%Spell Resistance%%
\NewCounter{CharSpellResistanceCount}
\newcommand{\AddSpellResistance}[1]{
	\SetCounter{CharSpellResistanceCount}{\maxof{\value{CharSpellResistanceCount}}{#1}}
}

%%Initiative%%
\newcounter{CharInitiativeMiscCount}

%%Conditional Modifiers
\edef\ConditionalSkillsModList{}
\edef\ConditionalAttackModList{}
\edef\ConditionalDefModList{}
\newcommand{\AddConditionalSkillMod}[1]{
	\listadd\ConditionalSkillsModList{#1}}
\newcommand{\AddConditionalAttackMod}[1]{
	\listadd\ConditionalAttackModList{#1}}
\newcommand{\AddConditionalDefMod}[1]{
	\listadd\ConditionalDefModList{#1}}

%% Languages
\NewCounter{CharLanguagesCount}
\SetCounter{CharExpectedLanguagesCount}{0}
\edef\CharLanguagesList{}
\ProvideDocumentCommand{\AddCharLanguage}{s m}{
	\listinsert{\CharLanguagesList}{#2}
	\StepCounter{CharLanguagesCount}
	\IfBooleanT #1 {
		\StepCounter{CharExpectedLanguagesCount}
	}
}

%% XP
\newcounter{CharXPCount}
\newcounter{CharNextLevelXPCount}
\newcounter{XP-Mode}
\newcommand{\CalculateNextLevelXP}{
	\ifthenelse{\arabic{XP-Mode} = 0}{}{
		\ifthenelse{\arabic{XP-Mode} = 1}{
			\SetCounter{CharNextLevelXPCount}{0}
			\ifthenelse{\value{CharTotalLevelCount} > 0}{
				\ForLoop{@i}{0}{\value{@i}<\value{CharTotalLevelCount}}{
					\AddToCounter{CharNextLevelXPCount}{\value{@i} * 1000 + 1000}
				}
			}{}
		}{}
	}
}


%%%%Initialization%%%%

\newcommand{\Initialize}{
	\CalculateNextLevelXP
	\ComputeAbilityScores
	% add Con to HP
	\ifthenelse{\value{HP-Mode} > 0}{\AddToCounter{CharHPCount}{\value{CharConModCount} * \value{CharTotalLevelCount}}}{}
	% add feats from levels
	\AddToCounter{CharFeatsCount}{\value{CharTotalLevelCount} / 3 + 1}
	% add INT to Skill Ranks
	\AddIntToSkillRanks
	\SetCounter{CharIteratedAttacksCount}{(\value{CharBABCount}-1)/5+1}
	\InitializeSpellSlots
	\CalculateSynergyBonuses
	\CalculateLoads
	\CalculateWeights
	\CheckEncumberance
	\SpeedInitialize
	\SetCounter{CharDextoACCount}{\minof{\value{CharDexModCount}}{\value{CharMaxDexBonusCount}}}
	\RunChecks
}

\let\CountLanguagesMode\BooleanFalse
%%3.5 System Checks
\newcommand{\RunChecks}{
	\AddDebug{Running checks}
	\AddDebug{Checking HP Rolls}
	%CHECK HP ROLLS
	\ifthenelse{\value{HP-Mode} = 1}{ %Only run if we are in rolls mode for HP
		\AddDebug{HP Mode == 1. Checking that the number of HP rolls is correct:\\
			Number of HP rolls: \arabic{CharHPRollsCount}\\
			Level: \arabic{CharTotalLevelCount}}
		\ifthenelse{\arabic{CharHPRollsCount} < \arabic{CharTotalLevelCount}}{
			\AddDebug{Num HP rolls less than expected}
			\AddWarning{\DoMath{\value{CharTotalLevelCount} - \value{CharHPRollsCount}} HP rolls missing}
		}{
			\ifthenelse{\arabic{CharHPRollsCount} > \arabic{CharTotalLevelCount}}{
				\AddDebug{Num HP rolls more than expected}
				\AddWarning{\DoMath{\value{CharHPRollsCount} - \value{CharTotalLevelCount}} extra HP rolls}
			}{\AddDebug{Num HP rolls is correct}}
		}
	}{\AddDebug{HP Mode != 1. No need to check HP rolls}}
	%CHECK SKILL RANKS
	\ifthenelse{\value{AutoSkillRanks-Mode} = 1}{
		\AddDebug{Checking Skill Ranks}
		\AddDebug{Class List: \PrintList{\CharClassesList}}
		\renewcommand{\do}[1]{
			\AddDebug{Checking skill ranks for Class: ##1\\}
			\ifthenelse{\value{Char##1SpareSkillRanksCount} > 0}{
				\AddWarning{Class ##1 has \arabic{Char##1SpareSkillRanksCount} skill ranks left to spend}
			}{
				\ifthenelse{\value{Char##1SpareSkillRanksCount} < 0}{
					\AddWarning{Class ##1 has spent \DoMath{-\value{Char##1SpareSkillRanksCount}} too many skill ranks}
				}{}
			}
		}\dolistloop{\CharClassesList}
	}{}
	%CHECK FEATS
	\ifthenelse{\value{CountFeats-Mode} = 1}{
		\AddDebug{Checking Feats}
		\ifthenelse{\value{CharBonusFeatsCount} < 0}{
			\AddWarning{\DoMath{-\value{CharBonusFeatsCount}} too many bonus feats selected}
		}{
			\ifthenelse{\value{CharBonusFeatsCount} > 0}{
				\AddWarning{\arabic{CharBonusFeatsCount} bonus feats left to select}
			}{}}
		\ifthenelse{\value{CharFeatsCount} < 0}{
			\AddWarning{\DoMath{-\value{CharFeatsCount}} too many feats selected}
		}{
			\ifthenelse{\value{CharFeatsCount} > 0}{
				\AddWarning{\arabic{CharFeatsCount} feats left to select}
			}{}}
	}{}
	%CHECK LANGUAGES
	\IfBooleanT \CountLanguagesMode {
		\AddDebug{Checking Char Language Count}	

		\AddToCounter{CharExpectedLanguagesCount}{\value{CharSpeakLanguageRanksCount}}
		\ifthenelse{((\value{CharIntBaseCount} - 10) / 2) > -1}{
			\AddDebug{Expecting \arabic{CharExpectedLanguagesCount} languages from race, class, etc., plus \arabic{CharSpeakLanguageRanksCount} Speak Language ranks, plus \DoMath{(\value{CharIntBaseCount} - 10) / 2} from high INT}
			\AddToCounter{CharExpectedLanguagesCount}{(\value{CharIntBaseCount} - 10) / 2}
		}{
			\AddDebug{Expecting \arabic{CharExpectedLanguagesCount} languages from race, class, etc., plus \arabic{CharSpeakLanguageRanksCount} Speak Language ranks, plus 0 from negative INT mod}
		}
		\AddToCounter{CharExpectedLanguagesCount}{\value{CharSpeakLanguageRanksCount}}
		\ifthenelse{\value{CharExpectedLanguagesCount} > \value{CharLanguagesCount}}{
			\AddNotice{Pick \DoMath{\value{CharExpectedLanguagesCount} - \value{CharLanguagesCount}} more languages}
		}{
			\ifthenelse{\value{CharExpectedLanguagesCount} < \value{CharLanguagesCount}}{
				\AddNotice{Pick \DoMath{\value{CharLanguagesCount} - \value{CharExpectedLanguagesCount}} fewer languages}
			}{}
		}
	}
}
